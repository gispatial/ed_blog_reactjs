{"ast":null,"code":"\"use strict\";\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ItemMapper = void 0;\n\nvar resolvers_1 = require(\"../resolvers\");\n\nvar element_mapper_1 = require(\"./element.mapper\");\n\nvar ItemMapper =\n/** @class */\nfunction () {\n  function ItemMapper(config, richTextHtmlParser) {\n    this.config = config;\n    this.richTextHtmlParser = richTextHtmlParser;\n    this.elementMapper = new element_mapper_1.ElementMapper(config, richTextHtmlParser);\n  }\n  /**\r\n   * Maps single item to its proper strongly typed model from the given Kontent response\r\n   * @param response Kontent response used to map the item\r\n   * @param queryConfig Query configuration\r\n   */\n\n\n  ItemMapper.prototype.mapSingleItemFromResponse = function (response, queryConfig) {\n    var mapResult = this.mapItems({\n      mainItems: [response.item],\n      linkedItems: Object.values(response.modular_content),\n      queryConfig: queryConfig\n    });\n    return {\n      item: mapResult.items[0],\n      linkedItems: mapResult.linkedItems\n    };\n  };\n  /**\r\n   * Maps multiple items to their strongly typed model from the given Kontent response\r\n   * @param response Kontent response used to map the item\r\n   * @param queryConfig Query configuration\r\n   */\n\n\n  ItemMapper.prototype.mapMultipleItemsFromResponse = function (response, queryConfig) {\n    var mapResult = this.mapItems({\n      mainItems: response.items,\n      linkedItems: Object.values(response.modular_content),\n      queryConfig: queryConfig\n    });\n    return mapResult;\n  };\n  /**\r\n   * Maps item contracts to full models\r\n   */\n\n\n  ItemMapper.prototype.mapItems = function (data) {\n    var that = this;\n    var itemResolver = data.queryConfig && data.queryConfig.itemResolver ? data.queryConfig.itemResolver : undefined;\n    var processedItems = {};\n    var preparedItems = {};\n    var processingStartedForCodenames = [];\n    var mappedMainItems = [];\n    var mappedLinkedItems = {};\n\n    var itemsToResolve = __spreadArrays(data.mainItems, data.linkedItems); // first prepare reference for all items\n\n\n    for (var _i = 0, itemsToResolve_1 = itemsToResolve; _i < itemsToResolve_1.length; _i++) {\n      var item = itemsToResolve_1[_i];\n      preparedItems[item.system.codename] = resolvers_1.stronglyTypedResolver.createItemInstance({\n        item: item\n      }, this.config.typeResolvers || [], itemResolver);\n    } // then resolve items\n\n\n    for (var _a = 0, _b = data.mainItems; _a < _b.length; _a++) {\n      var item = _b[_a];\n      var itemResult = that.mapItem({\n        item: item,\n        processedItems: processedItems,\n        queryConfig: data.queryConfig,\n        preparedItems: preparedItems,\n        processingStartedForCodenames: processingStartedForCodenames\n      });\n      mappedMainItems.push(itemResult.item);\n    }\n\n    for (var _c = 0, _d = data.linkedItems; _c < _d.length; _c++) {\n      var item = _d[_c];\n      var itemResult = that.mapItem({\n        item: item,\n        processedItems: processedItems,\n        queryConfig: data.queryConfig,\n        preparedItems: preparedItems,\n        processingStartedForCodenames: processingStartedForCodenames\n      });\n      mappedLinkedItems[item.system.codename] = itemResult.item;\n    }\n\n    return {\n      items: mappedMainItems,\n      linkedItems: mappedLinkedItems\n    };\n  };\n  /**\r\n   * Maps item contract to full model\r\n   */\n\n\n  ItemMapper.prototype.mapItem = function (data) {\n    if (!data.item) {\n      throw Error(\"Could not map item because its undefined\");\n    }\n\n    var result = this.elementMapper.mapElements({\n      item: data.item,\n      preparedItems: data.preparedItems,\n      processingStartedForCodenames: [],\n      processedItems: data.processedItems,\n      queryConfig: data.queryConfig\n    });\n\n    if (!result) {\n      throw Error(\"Mapping of content item '\" + data.item.system.codename + \"' failed\");\n    }\n\n    return {\n      item: result.item,\n      processedItems: result.processedItems,\n      preparedItems: result.preparedItems,\n      processingStartedForCodenames: result.processingStartedForCodenames\n    };\n  };\n\n  return ItemMapper;\n}();\n\nexports.ItemMapper = ItemMapper;","map":{"version":3,"sources":["../../lib/mappers/item.mapper.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ItemMapper = void 0;\r\nvar resolvers_1 = require(\"../resolvers\");\r\nvar element_mapper_1 = require(\"./element.mapper\");\r\nvar ItemMapper = /** @class */ (function () {\r\n    function ItemMapper(config, richTextHtmlParser) {\r\n        this.config = config;\r\n        this.richTextHtmlParser = richTextHtmlParser;\r\n        this.elementMapper = new element_mapper_1.ElementMapper(config, richTextHtmlParser);\r\n    }\r\n    /**\r\n     * Maps single item to its proper strongly typed model from the given Kontent response\r\n     * @param response Kontent response used to map the item\r\n     * @param queryConfig Query configuration\r\n     */\r\n    ItemMapper.prototype.mapSingleItemFromResponse = function (response, queryConfig) {\r\n        var mapResult = this.mapItems({\r\n            mainItems: [response.item],\r\n            linkedItems: Object.values(response.modular_content),\r\n            queryConfig: queryConfig\r\n        });\r\n        return {\r\n            item: mapResult.items[0],\r\n            linkedItems: mapResult.linkedItems\r\n        };\r\n    };\r\n    /**\r\n     * Maps multiple items to their strongly typed model from the given Kontent response\r\n     * @param response Kontent response used to map the item\r\n     * @param queryConfig Query configuration\r\n     */\r\n    ItemMapper.prototype.mapMultipleItemsFromResponse = function (response, queryConfig) {\r\n        var mapResult = this.mapItems({\r\n            mainItems: response.items,\r\n            linkedItems: Object.values(response.modular_content),\r\n            queryConfig: queryConfig\r\n        });\r\n        return mapResult;\r\n    };\r\n    /**\r\n     * Maps item contracts to full models\r\n     */\r\n    ItemMapper.prototype.mapItems = function (data) {\r\n        var that = this;\r\n        var itemResolver = data.queryConfig && data.queryConfig.itemResolver ? data.queryConfig.itemResolver : undefined;\r\n        var processedItems = {};\r\n        var preparedItems = {};\r\n        var processingStartedForCodenames = [];\r\n        var mappedMainItems = [];\r\n        var mappedLinkedItems = {};\r\n        var itemsToResolve = __spreadArrays(data.mainItems, data.linkedItems);\r\n        // first prepare reference for all items\r\n        for (var _i = 0, itemsToResolve_1 = itemsToResolve; _i < itemsToResolve_1.length; _i++) {\r\n            var item = itemsToResolve_1[_i];\r\n            preparedItems[item.system.codename] = resolvers_1.stronglyTypedResolver.createItemInstance({\r\n                item: item\r\n            }, this.config.typeResolvers || [], itemResolver);\r\n        }\r\n        // then resolve items\r\n        for (var _a = 0, _b = data.mainItems; _a < _b.length; _a++) {\r\n            var item = _b[_a];\r\n            var itemResult = that.mapItem({\r\n                item: item,\r\n                processedItems: processedItems,\r\n                queryConfig: data.queryConfig,\r\n                preparedItems: preparedItems,\r\n                processingStartedForCodenames: processingStartedForCodenames\r\n            });\r\n            mappedMainItems.push(itemResult.item);\r\n        }\r\n        for (var _c = 0, _d = data.linkedItems; _c < _d.length; _c++) {\r\n            var item = _d[_c];\r\n            var itemResult = that.mapItem({\r\n                item: item,\r\n                processedItems: processedItems,\r\n                queryConfig: data.queryConfig,\r\n                preparedItems: preparedItems,\r\n                processingStartedForCodenames: processingStartedForCodenames\r\n            });\r\n            mappedLinkedItems[item.system.codename] = itemResult.item;\r\n        }\r\n        return {\r\n            items: mappedMainItems,\r\n            linkedItems: mappedLinkedItems\r\n        };\r\n    };\r\n    /**\r\n     * Maps item contract to full model\r\n     */\r\n    ItemMapper.prototype.mapItem = function (data) {\r\n        if (!data.item) {\r\n            throw Error(\"Could not map item because its undefined\");\r\n        }\r\n        var result = this.elementMapper.mapElements({\r\n            item: data.item,\r\n            preparedItems: data.preparedItems,\r\n            processingStartedForCodenames: [],\r\n            processedItems: data.processedItems,\r\n            queryConfig: data.queryConfig\r\n        });\r\n        if (!result) {\r\n            throw Error(\"Mapping of content item '\" + data.item.system.codename + \"' failed\");\r\n        }\r\n        return {\r\n            item: result.item,\r\n            processedItems: result.processedItems,\r\n            preparedItems: result.preparedItems,\r\n            processingStartedForCodenames: result.processingStartedForCodenames\r\n        };\r\n    };\r\n    return ItemMapper;\r\n}());\r\nexports.ItemMapper = ItemMapper;\r\n//# sourceMappingURL=item.mapper.js.map"]},"metadata":{},"sourceType":"script"}