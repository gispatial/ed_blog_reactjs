{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HttpService = void 0;\n\nvar axios_1 = require(\"axios\");\n\nvar rxjs_1 = require(\"rxjs\");\n\nvar operators_1 = require(\"rxjs/operators\");\n\nvar headers_helper_1 = require(\"./headers-helper\");\n\nvar HttpFunctions = require(\"./http.functions\");\n\nvar observable_retry_strategy_1 = require(\"./observable-retry-strategy\");\n\nvar retry_service_1 = require(\"./retry-service\");\n\nvar HttpService =\n/** @class */\nfunction () {\n  function HttpService(opts) {\n    this.axiosInstance = axios_1.default.create(opts && opts.axiosRequestConfig ? opts.axiosRequestConfig : undefined);\n\n    if (opts) {\n      if (opts.requestInterceptor) {\n        HttpFunctions.registerRequestInterceptor(this.axiosInstance, opts.requestInterceptor);\n      }\n\n      if (opts.responseInterceptor) {\n        HttpFunctions.registerResponseInterceptor(this.axiosInstance, opts.responseInterceptor);\n      }\n    }\n  }\n\n  HttpService.prototype.get = function (call, options) {\n    var _this = this; // bind callback from axios promise\n\n\n    var axiosObservable = rxjs_1.defer(function () {\n      return rxjs_1.from(HttpFunctions.getCallback(_this.axiosInstance, call, options));\n    }); // map axios observable\n\n    return this.mapAxiosObservable(axiosObservable, options);\n  };\n\n  HttpService.prototype.post = function (call, options) {\n    var _this = this; // bind callback from axios promise\n\n\n    var axiosObservable = rxjs_1.defer(function () {\n      return rxjs_1.from(HttpFunctions.postCallback(_this.axiosInstance, call, options));\n    }); // map axios observable\n\n    return this.mapAxiosObservable(axiosObservable, options);\n  };\n\n  HttpService.prototype.put = function (call, options) {\n    var _this = this; // bind callback from axios promise\n\n\n    var axiosObservable = rxjs_1.defer(function () {\n      return rxjs_1.from(HttpFunctions.putCallback(_this.axiosInstance, call, options));\n    }); // map axios observable\n\n    return this.mapAxiosObservable(axiosObservable, options);\n  };\n\n  HttpService.prototype.patch = function (call, options) {\n    var _this = this; // bind callback from axios promise\n\n\n    var axiosObservable = rxjs_1.defer(function () {\n      return rxjs_1.from(HttpFunctions.patchCallback(_this.axiosInstance, call, options));\n    }); // map axios observable\n\n    return this.mapAxiosObservable(axiosObservable, options);\n  };\n\n  HttpService.prototype.delete = function (call, options) {\n    var _this = this; // bind callback from axios promise\n\n\n    var axiosObservable = rxjs_1.defer(function () {\n      return rxjs_1.from(HttpFunctions.deleteCallback(_this.axiosInstance, call, options));\n    }); // map axios observable\n\n    return this.mapAxiosObservable(axiosObservable, options);\n  };\n\n  HttpService.prototype.mapAxiosObservable = function (axiosObservable, options) {\n    var _this = this;\n\n    return axiosObservable.pipe(operators_1.map(function (result) {\n      return _this.mapResult(result);\n    }), operators_1.retryWhen(observable_retry_strategy_1.observableRetryStrategy.strategy(retry_service_1.retryService.getRetryStrategyFromStrategyOptions(options === null || options === void 0 ? void 0 : options.retryStrategy), {\n      startTime: new Date()\n    })), operators_1.catchError(function (error) {\n      // Handling errors: https://github.com/axios/axios#handling-errors\n      if (options && options.logErrorToConsole) {\n        console.error(\"Kentico Kontent Core SDK encountered an error: \", error);\n      }\n\n      return rxjs_1.throwError(error);\n    }));\n  };\n\n  HttpService.prototype.mapResult = function (result) {\n    // if error is set, throw it\n    if (result.error) {\n      throw result.error;\n    } // if neither error nor response is set, throw an error\n\n\n    if (!result.response) {\n      throw Error('Response is not set and no error was thrown');\n    }\n\n    return {\n      data: result.response.data,\n      response: result.response,\n      headers: headers_helper_1.extractHeadersFromAxiosResponse(result.response),\n      status: result.response.status\n    };\n  };\n\n  return HttpService;\n}();\n\nexports.HttpService = HttpService;","map":{"version":3,"sources":["../../lib/http/http.service.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HttpService = void 0;\r\nvar axios_1 = require(\"axios\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar headers_helper_1 = require(\"./headers-helper\");\r\nvar HttpFunctions = require(\"./http.functions\");\r\nvar observable_retry_strategy_1 = require(\"./observable-retry-strategy\");\r\nvar retry_service_1 = require(\"./retry-service\");\r\nvar HttpService = /** @class */ (function () {\r\n    function HttpService(opts) {\r\n        this.axiosInstance = axios_1.default.create(opts && opts.axiosRequestConfig ? opts.axiosRequestConfig : undefined);\r\n        if (opts) {\r\n            if (opts.requestInterceptor) {\r\n                HttpFunctions.registerRequestInterceptor(this.axiosInstance, opts.requestInterceptor);\r\n            }\r\n            if (opts.responseInterceptor) {\r\n                HttpFunctions.registerResponseInterceptor(this.axiosInstance, opts.responseInterceptor);\r\n            }\r\n        }\r\n    }\r\n    HttpService.prototype.get = function (call, options) {\r\n        var _this = this;\r\n        // bind callback from axios promise\r\n        var axiosObservable = rxjs_1.defer(function () { return rxjs_1.from(HttpFunctions.getCallback(_this.axiosInstance, call, options)); });\r\n        // map axios observable\r\n        return this.mapAxiosObservable(axiosObservable, options);\r\n    };\r\n    HttpService.prototype.post = function (call, options) {\r\n        var _this = this;\r\n        // bind callback from axios promise\r\n        var axiosObservable = rxjs_1.defer(function () { return rxjs_1.from(HttpFunctions.postCallback(_this.axiosInstance, call, options)); });\r\n        // map axios observable\r\n        return this.mapAxiosObservable(axiosObservable, options);\r\n    };\r\n    HttpService.prototype.put = function (call, options) {\r\n        var _this = this;\r\n        // bind callback from axios promise\r\n        var axiosObservable = rxjs_1.defer(function () { return rxjs_1.from(HttpFunctions.putCallback(_this.axiosInstance, call, options)); });\r\n        // map axios observable\r\n        return this.mapAxiosObservable(axiosObservable, options);\r\n    };\r\n    HttpService.prototype.patch = function (call, options) {\r\n        var _this = this;\r\n        // bind callback from axios promise\r\n        var axiosObservable = rxjs_1.defer(function () { return rxjs_1.from(HttpFunctions.patchCallback(_this.axiosInstance, call, options)); });\r\n        // map axios observable\r\n        return this.mapAxiosObservable(axiosObservable, options);\r\n    };\r\n    HttpService.prototype.delete = function (call, options) {\r\n        var _this = this;\r\n        // bind callback from axios promise\r\n        var axiosObservable = rxjs_1.defer(function () { return rxjs_1.from(HttpFunctions.deleteCallback(_this.axiosInstance, call, options)); });\r\n        // map axios observable\r\n        return this.mapAxiosObservable(axiosObservable, options);\r\n    };\r\n    HttpService.prototype.mapAxiosObservable = function (axiosObservable, options) {\r\n        var _this = this;\r\n        return axiosObservable.pipe(operators_1.map(function (result) { return _this.mapResult(result); }), operators_1.retryWhen(observable_retry_strategy_1.observableRetryStrategy.strategy(retry_service_1.retryService.getRetryStrategyFromStrategyOptions(options === null || options === void 0 ? void 0 : options.retryStrategy), {\r\n            startTime: new Date()\r\n        })), operators_1.catchError(function (error) {\r\n            // Handling errors: https://github.com/axios/axios#handling-errors\r\n            if (options && options.logErrorToConsole) {\r\n                console.error(\"Kentico Kontent Core SDK encountered an error: \", error);\r\n            }\r\n            return rxjs_1.throwError(error);\r\n        }));\r\n    };\r\n    HttpService.prototype.mapResult = function (result) {\r\n        // if error is set, throw it\r\n        if (result.error) {\r\n            throw result.error;\r\n        }\r\n        // if neither error nor response is set, throw an error\r\n        if (!result.response) {\r\n            throw Error('Response is not set and no error was thrown');\r\n        }\r\n        return {\r\n            data: result.response.data,\r\n            response: result.response,\r\n            headers: headers_helper_1.extractHeadersFromAxiosResponse(result.response),\r\n            status: result.response.status\r\n        };\r\n    };\r\n    return HttpService;\r\n}());\r\nexports.HttpService = HttpService;\r\n//# sourceMappingURL=http.service.js.map"]},"metadata":{},"sourceType":"script"}