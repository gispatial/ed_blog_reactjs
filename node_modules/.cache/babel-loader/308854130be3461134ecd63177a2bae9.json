{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TaxonomyQuery = void 0;\n\nvar base_taxonomy_query_class_1 = require(\"./base-taxonomy-query.class\");\n\nvar TaxonomyQuery =\n/** @class */\nfunction (_super) {\n  __extends(TaxonomyQuery, _super);\n\n  function TaxonomyQuery(config, queryService, taxonomyCodename) {\n    var _this = _super.call(this, config, queryService) || this;\n\n    _this.config = config;\n    _this.queryService = queryService;\n    _this.taxonomyCodename = taxonomyCodename;\n\n    if (!taxonomyCodename) {\n      throw Error(\"Cannot create taxonomy query without codename of the taxonomy\");\n    }\n\n    return _this;\n  }\n  /**\r\n  * Gets the runnable Observable\r\n  */\n\n\n  TaxonomyQuery.prototype.toObservable = function () {\n    return _super.prototype.runTaxonomyQuery.call(this, this.taxonomyCodename);\n  };\n  /**\r\n  * Gets 'Url' representation of query\r\n  */\n\n\n  TaxonomyQuery.prototype.getUrl = function () {\n    return _super.prototype.getTaxonomyQueryUrl.call(this, this.taxonomyCodename);\n  };\n\n  return TaxonomyQuery;\n}(base_taxonomy_query_class_1.BaseTaxonomyQuery);\n\nexports.TaxonomyQuery = TaxonomyQuery;","map":{"version":3,"sources":["../../../lib/query/taxonomy/taxonomy-query.class.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAA,2BAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;;AAEA,IAAA,aAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmC,EAAA,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA;;AAE/B,WAAA,aAAA,CACc,MADd,EAEc,YAFd,EAGY,gBAHZ,EAGoC;AAHpC,QAAA,KAAA,GAKI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,MAAN,EAAc,YAAd,KAA2B,IAL/B;;AACc,IAAA,KAAA,CAAA,MAAA,GAAA,MAAA;AACA,IAAA,KAAA,CAAA,YAAA,GAAA,YAAA;AACF,IAAA,KAAA,CAAA,gBAAA,GAAA,gBAAA;;AAIR,QAAI,CAAC,gBAAL,EAAuB;AACnB,YAAM,KAAK,CAAC,+DAAD,CAAX;AACH;;;AACJ;AAED;;AAEE;;;AACF,EAAA,aAAA,CAAA,SAAA,CAAA,YAAA,GAAA,YAAA;AACI,WAAO,MAAA,CAAA,SAAA,CAAM,gBAAN,CAAsB,IAAtB,CAAsB,IAAtB,EAAuB,KAAK,gBAA5B,CAAP;AACH,GAFD;AAIA;;AAEE;;;AACF,EAAA,aAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACI,WAAO,MAAA,CAAA,SAAA,CAAM,mBAAN,CAAyB,IAAzB,CAAyB,IAAzB,EAA0B,KAAK,gBAA/B,CAAP;AACH,GAFD;;AAGJ,SAAA,aAAA;AAAC,CA3BD,CAAmC,2BAAA,CAAA,iBAAnC,CAAA;;AAAa,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TaxonomyQuery = void 0;\r\nvar base_taxonomy_query_class_1 = require(\"./base-taxonomy-query.class\");\r\nvar TaxonomyQuery = /** @class */ (function (_super) {\r\n    __extends(TaxonomyQuery, _super);\r\n    function TaxonomyQuery(config, queryService, taxonomyCodename) {\r\n        var _this = _super.call(this, config, queryService) || this;\r\n        _this.config = config;\r\n        _this.queryService = queryService;\r\n        _this.taxonomyCodename = taxonomyCodename;\r\n        if (!taxonomyCodename) {\r\n            throw Error(\"Cannot create taxonomy query without codename of the taxonomy\");\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n    * Gets the runnable Observable\r\n    */\r\n    TaxonomyQuery.prototype.toObservable = function () {\r\n        return _super.prototype.runTaxonomyQuery.call(this, this.taxonomyCodename);\r\n    };\r\n    /**\r\n    * Gets 'Url' representation of query\r\n    */\r\n    TaxonomyQuery.prototype.getUrl = function () {\r\n        return _super.prototype.getTaxonomyQueryUrl.call(this, this.taxonomyCodename);\r\n    };\r\n    return TaxonomyQuery;\r\n}(base_taxonomy_query_class_1.BaseTaxonomyQuery));\r\nexports.TaxonomyQuery = TaxonomyQuery;\r\n//# sourceMappingURL=taxonomy-query.class.js.map"]},"metadata":{},"sourceType":"script"}