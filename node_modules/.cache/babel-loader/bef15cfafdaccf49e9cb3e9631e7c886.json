{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/crocslut/Desktop/Git/ed-blog-react-js/src/ArticleView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { resolveItemInRichText } from \"./itemResolver\";\nimport { resolveContentLink } from \"./linkResolver\";\nimport { deliveryClient } from \"./config\";\n\nfunction ArticleView({\n  match,\n  history\n}) {\n  _s();\n\n  // Uses the react state hook\n  const [article, setArticle] = useState({});\n  const [isLoading, setLoading] = useState(true); // Gets an article by its URL slug\n\n  const getArticle = slug => {\n    return deliveryClient.items().type(\"article\").equalsFilter(\"elements.url_pattern\", slug).queryConfig({\n      richTextResolver: resolveItemInRichText,\n      urlSlugResolver: resolveContentLink\n    }).toObservable().subscribe(response => {\n      setArticle(response.items[0]);\n      setLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    const subscription = getArticle(match.params.slug);\n    return () => subscription.unsubscribe();\n  }, [match.params.slug]); // Shows loading until the app gets article from Kontent\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  const handleClick = (event, richTextElement) => {\n    // Checks if the user clicked on a link to a content item.\n    if (event.target.tagName === 'A' && event.target.hasAttribute('data-item-id')) {\n      event.preventDefault();\n      const id = event.target.getAttribute('data-item-id');\n      const link = richTextElement.links.find(link => link.linkId === id);\n      const newPath = resolveContentLink(link).url;\n      if (newPath) history.push(newPath);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: article.title.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"article_body\",\n      dangerouslySetInnerHTML: {\n        __html: article.body_copy.resolveHtml()\n      } // Registers your custom onClick handler\n      ,\n      onClick: event => handleClick(event, article.body_copy)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ArticleView, \"sd/H/adHdcHj/ga1x6XSmXnFbbc=\");\n\n_c = ArticleView;\nexport default ArticleView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticleView\");","map":{"version":3,"sources":["/Users/crocslut/Desktop/Git/ed-blog-react-js/src/ArticleView.js"],"names":["React","useState","useEffect","Link","resolveItemInRichText","resolveContentLink","deliveryClient","ArticleView","match","history","article","setArticle","isLoading","setLoading","getArticle","slug","items","type","equalsFilter","queryConfig","richTextResolver","urlSlugResolver","toObservable","subscribe","response","subscription","params","unsubscribe","handleClick","event","richTextElement","target","tagName","hasAttribute","preventDefault","id","getAttribute","link","links","find","linkId","newPath","url","push","title","value","__html","body_copy","resolveHtml"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,qBAAT,QAAsC,gBAAtC;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,cAAT,QAA+B,UAA/B;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAArB,EAAyC;AAAA;;AACvC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,SAAD,EAAYC,UAAZ,IAA0BZ,QAAQ,CAAC,IAAD,CAAxC,CAHuC,CAKvC;;AACA,QAAMa,UAAU,GAAIC,IAAD,IAAU;AAC3B,WAAOT,cAAc,CAClBU,KADI,GAEJC,IAFI,CAEC,SAFD,EAGJC,YAHI,CAGS,sBAHT,EAGiCH,IAHjC,EAIJI,WAJI,CAIQ;AACXC,MAAAA,gBAAgB,EAAEhB,qBADP;AAEXiB,MAAAA,eAAe,EAAEhB;AAFN,KAJR,EAQJiB,YARI,GASJC,SATI,CASOC,QAAD,IAAc;AACvBb,MAAAA,UAAU,CAACa,QAAQ,CAACR,KAAT,CAAe,CAAf,CAAD,CAAV;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAZI,CAAP;AAaD,GAdD;;AAgBAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,YAAY,GAAGX,UAAU,CAACN,KAAK,CAACkB,MAAN,CAAaX,IAAd,CAA/B;AACA,WAAO,MAAMU,YAAY,CAACE,WAAb,EAAb;AACD,GAHQ,EAGN,CAACnB,KAAK,CAACkB,MAAN,CAAaX,IAAd,CAHM,CAAT,CAtBuC,CA2BvC;;AACA,MAAIH,SAAJ,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,QAAMgB,WAAW,GAAG,CAACC,KAAD,EAAQC,eAAR,KAA4B;AAC9C;AACA,QAAID,KAAK,CAACE,MAAN,CAAaC,OAAb,KAAyB,GAAzB,IAAgCH,KAAK,CAACE,MAAN,CAAaE,YAAb,CAA0B,cAA1B,CAApC,EAA+E;AAC7EJ,MAAAA,KAAK,CAACK,cAAN;AACA,YAAMC,EAAE,GAAGN,KAAK,CAACE,MAAN,CAAaK,YAAb,CAA0B,cAA1B,CAAX;AACA,YAAMC,IAAI,GAAGP,eAAe,CAACQ,KAAhB,CAAsBC,IAAtB,CAA2BF,IAAI,IAAIA,IAAI,CAACG,MAAL,KAAgBL,EAAnD,CAAb;AACA,YAAMM,OAAO,GAAGpC,kBAAkB,CAACgC,IAAD,CAAlB,CAAyBK,GAAzC;AACA,UAAID,OAAJ,EAAahC,OAAO,CAACkC,IAAR,CAAaF,OAAb;AACd;AACF,GATD;;AAWA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAK/B,OAAO,CAACkC,KAAR,CAAcC;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEpC,OAAO,CAACqC,SAAR,CAAkBC,WAAlB;AAAV,OAF3B,CAGE;AAHF;AAIE,MAAA,OAAO,EAAGnB,KAAD,IAAWD,WAAW,CAACC,KAAD,EAAQnB,OAAO,CAACqC,SAAhB;AAJjC;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAvDQxC,W;;KAAAA,W;AAyDT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { resolveItemInRichText } from \"./itemResolver\";\nimport { resolveContentLink } from \"./linkResolver\";\nimport { deliveryClient } from \"./config\";\n\nfunction ArticleView({ match, history }) {\n  // Uses the react state hook\n  const [article, setArticle] = useState({});\n  const [isLoading, setLoading] = useState(true);\n\n  // Gets an article by its URL slug\n  const getArticle = (slug) => {\n    return deliveryClient\n      .items()\n      .type(\"article\")\n      .equalsFilter(\"elements.url_pattern\", slug)\n      .queryConfig({\n        richTextResolver: resolveItemInRichText,\n        urlSlugResolver: resolveContentLink\n      })\n      .toObservable()\n      .subscribe((response) => {\n        setArticle(response.items[0]);\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    const subscription = getArticle(match.params.slug);\n    return () => subscription.unsubscribe();\n  }, [match.params.slug]);\n\n  // Shows loading until the app gets article from Kontent\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  const handleClick = (event, richTextElement) => {\n    // Checks if the user clicked on a link to a content item.\n    if (event.target.tagName === 'A' && event.target.hasAttribute('data-item-id')) {\n      event.preventDefault();\n      const id = event.target.getAttribute('data-item-id');\n      const link = richTextElement.links.find(link => link.linkId === id);\n      const newPath = resolveContentLink(link).url;\n      if (newPath) history.push(newPath);\n    }\n  }\n\n  return (\n    <div>\n      <Link to='/'>Home</Link>\n      <h1>{article.title.value}</h1>\n      <div\n        className='article_body'\n        dangerouslySetInnerHTML={{ __html: article.body_copy.resolveHtml() }}\n        // Registers your custom onClick handler\n        onClick={(event) => handleClick(event, article.body_copy)}\n      />\n    </div>\n  );\n}\n\nexport default ArticleView;"]},"metadata":{},"sourceType":"module"}