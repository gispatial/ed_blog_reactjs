{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GenericElement = exports.GenericElementOption = void 0;\n\nvar GenericElementOption =\n/** @class */\nfunction () {\n  function GenericElementOption(\n  /**\r\n   * Name of the option\r\n   */\n  name,\n  /**\r\n   * Value of the option\r\n   */\n  codename) {\n    this.name = name;\n    this.codename = codename;\n  }\n\n  return GenericElementOption;\n}();\n\nexports.GenericElementOption = GenericElementOption;\n\nvar GenericElement =\n/** @class */\nfunction () {\n  function GenericElement(data) {\n    /**\r\n     * Array of options if the element has some\r\n     */\n    this.options = [];\n    Object.assign(this, data);\n  }\n\n  return GenericElement;\n}();\n\nexports.GenericElement = GenericElement;","map":{"version":3,"sources":["../../../lib/models/element/element-models.ts"],"names":[],"mappings":";;;;;;;AAQA,IAAA,oBAAA;AAAA;AAAA,YAAA;AACI,WAAA,oBAAA;AACI;;AAEG;AACI,EAAA,IAJX;AAMI;;AAEG;AACI,EAAA,QATX,EAS2B;AALhB,SAAA,IAAA,GAAA,IAAA;AAKA,SAAA,QAAA,GAAA,QAAA;AACN;;AACT,SAAA,oBAAA;AAAC,CAZD,EAAA;;AAAa,OAAA,CAAA,oBAAA,GAAA,oBAAA;;AAeb,IAAA,cAAA;AAAA;AAAA,YAAA;AAgCI,WAAA,cAAA,CACI,IADJ,EAOK;AAZL;;AAEG;AACI,SAAA,OAAA,GAAkC,EAAlC;AAWH,IAAA,MAAM,CAAC,MAAP,CAAc,IAAd,EAAoB,IAApB;AACH;;AACL,SAAA,cAAA;AAAC,CA3CD,EAAA;;AAAa,OAAA,CAAA,cAAA,GAAA,cAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GenericElement = exports.GenericElementOption = void 0;\r\nvar GenericElementOption = /** @class */ (function () {\r\n    function GenericElementOption(\r\n    /**\r\n     * Name of the option\r\n     */\r\n    name, \r\n    /**\r\n     * Value of the option\r\n     */\r\n    codename) {\r\n        this.name = name;\r\n        this.codename = codename;\r\n    }\r\n    return GenericElementOption;\r\n}());\r\nexports.GenericElementOption = GenericElementOption;\r\nvar GenericElement = /** @class */ (function () {\r\n    function GenericElement(data) {\r\n        /**\r\n         * Array of options if the element has some\r\n         */\r\n        this.options = [];\r\n        Object.assign(this, data);\r\n    }\r\n    return GenericElement;\r\n}());\r\nexports.GenericElement = GenericElement;\r\n//# sourceMappingURL=element-models.js.map"]},"metadata":{},"sourceType":"script"}