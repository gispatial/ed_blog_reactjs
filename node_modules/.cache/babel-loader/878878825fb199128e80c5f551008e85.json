{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SingleTypeQuery = void 0;\n\nvar base_type_query_class_1 = require(\"./base-type-query.class\");\n\nvar SingleTypeQuery =\n/** @class */\nfunction (_super) {\n  __extends(SingleTypeQuery, _super);\n\n  function SingleTypeQuery(config, queryService, typeCodename) {\n    var _this = _super.call(this, config, queryService) || this;\n\n    _this.config = config;\n    _this.queryService = queryService;\n    _this.typeCodename = typeCodename;\n\n    if (!typeCodename) {\n      throw Error(\"Cannot create type query without the codename of the type\");\n    }\n\n    return _this;\n  }\n  /**\r\n  * Gets the runnable Observable\r\n  */\n\n\n  SingleTypeQuery.prototype.toObservable = function () {\n    return _super.prototype.runSingleTypeQuery.call(this, this.typeCodename);\n  };\n  /**\r\n  * Gets 'Url' representation of query\r\n  */\n\n\n  SingleTypeQuery.prototype.getUrl = function () {\n    return _super.prototype.getSingleTypeQueryUrl.call(this, this.typeCodename);\n  };\n\n  return SingleTypeQuery;\n}(base_type_query_class_1.BaseTypeQuery);\n\nexports.SingleTypeQuery = SingleTypeQuery;","map":{"version":3,"sources":["../../../lib/query/type/single-type-query.class.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAA,uBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AAEA,IAAA,eAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqC,EAAA,SAAA,CAAA,eAAA,EAAA,MAAA,CAAA;;AAEjC,WAAA,eAAA,CACc,MADd,EAEc,YAFd,EAGY,YAHZ,EAGgC;AAHhC,QAAA,KAAA,GAKI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,MAAN,EAAc,YAAd,KAA2B,IAL/B;;AACc,IAAA,KAAA,CAAA,MAAA,GAAA,MAAA;AACA,IAAA,KAAA,CAAA,YAAA,GAAA,YAAA;AACF,IAAA,KAAA,CAAA,YAAA,GAAA,YAAA;;AAIR,QAAI,CAAC,YAAL,EAAmB;AACf,YAAM,KAAK,CAAC,2DAAD,CAAX;AACH;;;AACJ;AAED;;AAEE;;;AACF,EAAA,eAAA,CAAA,SAAA,CAAA,YAAA,GAAA,YAAA;AACI,WAAO,MAAA,CAAA,SAAA,CAAM,kBAAN,CAAwB,IAAxB,CAAwB,IAAxB,EAAyB,KAAK,YAA9B,CAAP;AACH,GAFD;AAIA;;AAEE;;;AACF,EAAA,eAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACI,WAAO,MAAA,CAAA,SAAA,CAAM,qBAAN,CAA2B,IAA3B,CAA2B,IAA3B,EAA4B,KAAK,YAAjC,CAAP;AACH,GAFD;;AAGJ,SAAA,eAAA;AAAC,CA3BD,CAAqC,uBAAA,CAAA,aAArC,CAAA;;AAAa,OAAA,CAAA,eAAA,GAAA,eAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SingleTypeQuery = void 0;\r\nvar base_type_query_class_1 = require(\"./base-type-query.class\");\r\nvar SingleTypeQuery = /** @class */ (function (_super) {\r\n    __extends(SingleTypeQuery, _super);\r\n    function SingleTypeQuery(config, queryService, typeCodename) {\r\n        var _this = _super.call(this, config, queryService) || this;\r\n        _this.config = config;\r\n        _this.queryService = queryService;\r\n        _this.typeCodename = typeCodename;\r\n        if (!typeCodename) {\r\n            throw Error(\"Cannot create type query without the codename of the type\");\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n    * Gets the runnable Observable\r\n    */\r\n    SingleTypeQuery.prototype.toObservable = function () {\r\n        return _super.prototype.runSingleTypeQuery.call(this, this.typeCodename);\r\n    };\r\n    /**\r\n    * Gets 'Url' representation of query\r\n    */\r\n    SingleTypeQuery.prototype.getUrl = function () {\r\n        return _super.prototype.getSingleTypeQueryUrl.call(this, this.typeCodename);\r\n    };\r\n    return SingleTypeQuery;\r\n}(base_type_query_class_1.BaseTypeQuery));\r\nexports.SingleTypeQuery = SingleTypeQuery;\r\n//# sourceMappingURL=single-type-query.class.js.map"]},"metadata":{},"sourceType":"script"}