{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parameters = void 0;\nvar Parameters;\n\n(function (Parameters) {\n  var CustomParameter =\n  /** @class */\n  function () {\n    /**\r\n     * Custom parameter\r\n     * @constructor\r\n     * @param {string} name - Name of the parameter\r\n     * @param {string} value - Value of the parameter\r\n     */\n    function CustomParameter(name, value) {\n      this.name = name;\n      this.value = value;\n\n      if (!name) {\n        throw Error(\"Name of the custom parameter is not specified\");\n      }\n    }\n\n    CustomParameter.prototype.getParam = function () {\n      return this.name;\n    };\n\n    CustomParameter.prototype.getParamValue = function () {\n      return this.value;\n    };\n\n    return CustomParameter;\n  }();\n\n  Parameters.CustomParameter = CustomParameter;\n})(Parameters = exports.Parameters || (exports.Parameters = {}));","map":{"version":3,"sources":["../../lib/models/parameters.ts"],"names":[],"mappings":";;;;;;AAEA,IAAiB,UAAjB;;AAAA,CAAA,UAAiB,UAAjB,EAA2B;AACvB,MAAA,eAAA;AAAA;AAAA,cAAA;AACI;;;;;AAKG;AACH,aAAA,eAAA,CAAmB,IAAnB,EAAwC,KAAxC,EAAqD;AAAlC,WAAA,IAAA,GAAA,IAAA;AAAqB,WAAA,KAAA,GAAA,KAAA;;AACpC,UAAI,CAAC,IAAL,EAAW;AACP,cAAM,KAAK,CAAC,+CAAD,CAAX;AACH;AACJ;;AAEM,IAAA,eAAA,CAAA,SAAA,CAAA,QAAA,GAAP,YAAA;AACI,aAAO,KAAK,IAAZ;AACH,KAFM;;AAIA,IAAA,eAAA,CAAA,SAAA,CAAA,aAAA,GAAP,YAAA;AACI,aAAO,KAAK,KAAZ;AACH,KAFM;;AAGX,WAAA,eAAA;AAAC,GApBD,EAAA;;AAAa,EAAA,UAAA,CAAA,eAAA,GAAe,eAAf;AAqBhB,CAtBD,EAAiB,UAAU,GAAV,OAAA,CAAA,UAAA,KAAA,OAAA,CAAA,UAAA,GAAU,EAAV,CAAjB","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Parameters = void 0;\r\nvar Parameters;\r\n(function (Parameters) {\r\n    var CustomParameter = /** @class */ (function () {\r\n        /**\r\n         * Custom parameter\r\n         * @constructor\r\n         * @param {string} name - Name of the parameter\r\n         * @param {string} value - Value of the parameter\r\n         */\r\n        function CustomParameter(name, value) {\r\n            this.name = name;\r\n            this.value = value;\r\n            if (!name) {\r\n                throw Error(\"Name of the custom parameter is not specified\");\r\n            }\r\n        }\r\n        CustomParameter.prototype.getParam = function () {\r\n            return this.name;\r\n        };\r\n        CustomParameter.prototype.getParamValue = function () {\r\n            return this.value;\r\n        };\r\n        return CustomParameter;\r\n    }());\r\n    Parameters.CustomParameter = CustomParameter;\r\n})(Parameters = exports.Parameters || (exports.Parameters = {}));\r\n//# sourceMappingURL=parameters.js.map"]},"metadata":{},"sourceType":"script"}