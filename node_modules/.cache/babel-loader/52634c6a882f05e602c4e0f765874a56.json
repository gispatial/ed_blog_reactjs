{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TaxonomiesQuery = void 0;\n\nvar models_1 = require(\"../../models\");\n\nvar base_taxonomy_query_class_1 = require(\"./base-taxonomy-query.class\");\n\nvar TaxonomiesQuery =\n/** @class */\nfunction (_super) {\n  __extends(TaxonomiesQuery, _super);\n\n  function TaxonomiesQuery(config, queryService) {\n    var _this = _super.call(this, config, queryService) || this;\n\n    _this.config = config;\n    _this.queryService = queryService;\n    return _this;\n  }\n  /**\r\n  * Limits the number of taxonomies returned by query\r\n  * @param limit Number of taxonomies to load\r\n  */\n\n\n  TaxonomiesQuery.prototype.limitParameter = function (limit) {\n    this.parameters.push(new models_1.Parameters.LimitParameter(limit));\n    return this;\n  };\n  /**\r\n  * Skips the selected number of taxonomies\r\n  * @param skip Number of taxonomies to skip\r\n  */\n\n\n  TaxonomiesQuery.prototype.skipParameter = function (skip) {\n    this.parameters.push(new models_1.Parameters.SkipParameter(skip));\n    return this;\n  };\n  /**\r\n  * Gets the runnable Observable\r\n  */\n\n\n  TaxonomiesQuery.prototype.toObservable = function () {\n    return _super.prototype.runTaxonomiesQuery.call(this);\n  }; // debug\n\n  /**\r\n  * Gets 'Url' representation of query\r\n  */\n\n\n  TaxonomiesQuery.prototype.getUrl = function () {\n    return _super.prototype.getTaxonomiesQueryUrl.call(this);\n  };\n\n  return TaxonomiesQuery;\n}(base_taxonomy_query_class_1.BaseTaxonomyQuery);\n\nexports.TaxonomiesQuery = TaxonomiesQuery;","map":{"version":3,"sources":["../../../lib/query/taxonomy/taxonomies-query.class.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAA,QAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAEA,IAAA,2BAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;;AAEA,IAAA,eAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqC,EAAA,SAAA,CAAA,eAAA,EAAA,MAAA,CAAA;;AAEjC,WAAA,eAAA,CACc,MADd,EAEc,YAFd,EAEwC;AAFxC,QAAA,KAAA,GAII,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,MAAN,EAAc,YAAd,KAA2B,IAJ/B;;AACc,IAAA,KAAA,CAAA,MAAA,GAAA,MAAA;AACA,IAAA,KAAA,CAAA,YAAA,GAAA,YAAA;;AAGb;AAED;;;AAGE;;;AACF,EAAA,eAAA,CAAA,SAAA,CAAA,cAAA,GAAA,UAAe,KAAf,EAA4B;AACxB,SAAK,UAAL,CAAgB,IAAhB,CAAqB,IAAI,QAAA,CAAA,UAAA,CAAW,cAAf,CAA8B,KAA9B,CAArB;AACA,WAAO,IAAP;AACH,GAHD;AAKA;;;AAGE;;;AACF,EAAA,eAAA,CAAA,SAAA,CAAA,aAAA,GAAA,UAAc,IAAd,EAA0B;AACtB,SAAK,UAAL,CAAgB,IAAhB,CAAqB,IAAI,QAAA,CAAA,UAAA,CAAW,aAAf,CAA6B,IAA7B,CAArB;AACA,WAAO,IAAP;AACH,GAHD;AAKA;;AAEE;;;AACF,EAAA,eAAA,CAAA,SAAA,CAAA,YAAA,GAAA,YAAA;AACI,WAAO,MAAA,CAAA,SAAA,CAAM,kBAAN,CAAwB,IAAxB,CAAwB,IAAxB,CAAP;AACH,GAFD,CA9BJ,CAkCI;;AAEA;;AAEE;;;AACF,EAAA,eAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACI,WAAO,MAAA,CAAA,SAAA,CAAM,qBAAN,CAA2B,IAA3B,CAA2B,IAA3B,CAAP;AACH,GAFD;;AAGJ,SAAA,eAAA;AAAC,CA1CD,CAAqC,2BAAA,CAAA,iBAArC,CAAA;;AAAa,OAAA,CAAA,eAAA,GAAA,eAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TaxonomiesQuery = void 0;\r\nvar models_1 = require(\"../../models\");\r\nvar base_taxonomy_query_class_1 = require(\"./base-taxonomy-query.class\");\r\nvar TaxonomiesQuery = /** @class */ (function (_super) {\r\n    __extends(TaxonomiesQuery, _super);\r\n    function TaxonomiesQuery(config, queryService) {\r\n        var _this = _super.call(this, config, queryService) || this;\r\n        _this.config = config;\r\n        _this.queryService = queryService;\r\n        return _this;\r\n    }\r\n    /**\r\n    * Limits the number of taxonomies returned by query\r\n    * @param limit Number of taxonomies to load\r\n    */\r\n    TaxonomiesQuery.prototype.limitParameter = function (limit) {\r\n        this.parameters.push(new models_1.Parameters.LimitParameter(limit));\r\n        return this;\r\n    };\r\n    /**\r\n    * Skips the selected number of taxonomies\r\n    * @param skip Number of taxonomies to skip\r\n    */\r\n    TaxonomiesQuery.prototype.skipParameter = function (skip) {\r\n        this.parameters.push(new models_1.Parameters.SkipParameter(skip));\r\n        return this;\r\n    };\r\n    /**\r\n    * Gets the runnable Observable\r\n    */\r\n    TaxonomiesQuery.prototype.toObservable = function () {\r\n        return _super.prototype.runTaxonomiesQuery.call(this);\r\n    };\r\n    // debug\r\n    /**\r\n    * Gets 'Url' representation of query\r\n    */\r\n    TaxonomiesQuery.prototype.getUrl = function () {\r\n        return _super.prototype.getTaxonomiesQueryUrl.call(this);\r\n    };\r\n    return TaxonomiesQuery;\r\n}(base_taxonomy_query_class_1.BaseTaxonomyQuery));\r\nexports.TaxonomiesQuery = TaxonomiesQuery;\r\n//# sourceMappingURL=taxonomies-query.class.js.map"]},"metadata":{},"sourceType":"script"}