{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ElementDecorators = void 0;\n\nrequire(\"reflect-metadata\");\n\nvar ElementDecorators;\n\n(function (ElementDecorators) {\n  var codenameMetadataKey = Symbol('codename');\n\n  var generateKey = function (name) {\n    return codenameMetadataKey.toString() + \":\" + name;\n  };\n  /**\r\n   * Get the metadata entry saved by the decorator\r\n   * @param target - object instance\r\n   * @param elementName - Element name (code name from Kentico Kontent)\r\n   */\n\n\n  function getPropertyName(target, elementName) {\n    return Reflect.getMetadata(generateKey(elementName), target);\n  }\n\n  ElementDecorators.getPropertyName = getPropertyName;\n  /**\r\n   * Decorator - creates metadata entry for the @target - Value is the property name.\r\n   * This will then be retrieved when resolving the element name\r\n   * @param value - Element code name\r\n   */\n\n  function codename(value) {\n    return function (target, propertyKey) {\n      Reflect.defineMetadata(generateKey(value), propertyKey, target);\n    };\n  }\n\n  ElementDecorators.codename = codename;\n})(ElementDecorators = exports.ElementDecorators || (exports.ElementDecorators = {}));","map":{"version":3,"sources":["../../lib/elements/element-decorators.ts"],"names":[],"mappings":";;;;;;;AAAA,OAAA,CAAA,kBAAA,CAAA;;AAEA,IAAiB,iBAAjB;;AAAA,CAAA,UAAiB,iBAAjB,EAAkC;AAChC,MAAM,mBAAmB,GAAG,MAAM,CAAC,UAAD,CAAlC;;AAEA,MAAM,WAAW,GAAG,UAAC,IAAD,EAAa;AAAK,WAAG,mBAAmB,CAAC,QAApB,KAA8B,GAA9B,GAAH,IAAA;AAA2C,GAAjF;AAEA;;;;AAIG;;;AACH,WAAgB,eAAhB,CAAgC,MAAhC,EAA6C,WAA7C,EAAgE;AAC9D,WAAO,OAAO,CAAC,WAAR,CAAoB,WAAW,CAAC,WAAD,CAA/B,EAA8C,MAA9C,CAAP;AACD;;AAFe,EAAA,iBAAA,CAAA,eAAA,GAAe,eAAf;AAIhB;;;;AAIG;;AACH,WAAgB,QAAhB,CAAyB,KAAzB,EAAsC;AACpC,WAAO,UAAU,MAAV,EAAuB,WAAvB,EAA0C;AAC/C,MAAA,OAAO,CAAC,cAAR,CAAuB,WAAW,CAAC,KAAD,CAAlC,EAA2C,WAA3C,EAAwD,MAAxD;AACD,KAFD;AAGD;;AAJe,EAAA,iBAAA,CAAA,QAAA,GAAQ,QAAR;AAKjB,CAxBD,EAAiB,iBAAiB,GAAjB,OAAA,CAAA,iBAAA,KAAA,OAAA,CAAA,iBAAA,GAAiB,EAAjB,CAAjB","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElementDecorators = void 0;\r\nrequire(\"reflect-metadata\");\r\nvar ElementDecorators;\r\n(function (ElementDecorators) {\r\n    var codenameMetadataKey = Symbol('codename');\r\n    var generateKey = function (name) { return codenameMetadataKey.toString() + \":\" + name; };\r\n    /**\r\n     * Get the metadata entry saved by the decorator\r\n     * @param target - object instance\r\n     * @param elementName - Element name (code name from Kentico Kontent)\r\n     */\r\n    function getPropertyName(target, elementName) {\r\n        return Reflect.getMetadata(generateKey(elementName), target);\r\n    }\r\n    ElementDecorators.getPropertyName = getPropertyName;\r\n    /**\r\n     * Decorator - creates metadata entry for the @target - Value is the property name.\r\n     * This will then be retrieved when resolving the element name\r\n     * @param value - Element code name\r\n     */\r\n    function codename(value) {\r\n        return function (target, propertyKey) {\r\n            Reflect.defineMetadata(generateKey(value), propertyKey, target);\r\n        };\r\n    }\r\n    ElementDecorators.codename = codename;\r\n})(ElementDecorators = exports.ElementDecorators || (exports.ElementDecorators = {}));\r\n//# sourceMappingURL=element-decorators.js.map"]},"metadata":{},"sourceType":"script"}