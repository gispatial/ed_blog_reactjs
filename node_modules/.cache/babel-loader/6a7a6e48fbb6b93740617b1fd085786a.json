{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.urlSlugResolver = exports.UrlSlugResolver = void 0;\n\nvar models_1 = require(\"../models\");\n\nvar UrlSlugResolver =\n/** @class */\nfunction () {\n  function UrlSlugResolver() {}\n\n  UrlSlugResolver.prototype.resolveUrl = function (data) {\n    var url = data.resolver(new models_1.Link({\n      urlSlug: data.elementValue,\n      type: data.item.system.type,\n      codename: data.item.system.codename,\n      linkId: data.item.system.id\n    }), {\n      item: data.item,\n      linkId: undefined,\n      linkText: undefined // available only for links in rich text elements,\n\n    });\n\n    if (!url) {\n      if (data.enableAdvancedLogging) {\n        console.warn(\"'urlSlugResolver' is set, but url resolved for '\" + data.item.system.codename + \"' item of '\" + data.item.system.type + \"' type in element '\" + data.elementName + \"' is undefined. This warning can be turned off by disabling 'enableAdvancedLogging' option.\");\n      }\n\n      return {\n        html: '',\n        url: ''\n      };\n    }\n\n    return url;\n  };\n\n  return UrlSlugResolver;\n}();\n\nexports.UrlSlugResolver = UrlSlugResolver;\nexports.urlSlugResolver = new UrlSlugResolver();","map":{"version":3,"sources":["../../lib/resolvers/url-slug.resolver.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,QAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAEA,IAAA,eAAA;AAAA;AAAA,YAAA;AAAA,WAAA,eAAA,GAAA,CAuCC;;AAtCC,EAAA,eAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,IAAX,EAMC;AACC,QAAM,GAAG,GAAG,IAAI,CAAC,QAAL,CACV,IAAI,QAAA,CAAA,IAAJ,CAAS;AACP,MAAA,OAAO,EAAE,IAAI,CAAC,YADP;AAEP,MAAA,IAAI,EAAE,IAAI,CAAC,IAAL,CAAU,MAAV,CAAiB,IAFhB;AAGP,MAAA,QAAQ,EAAE,IAAI,CAAC,IAAL,CAAU,MAAV,CAAiB,QAHpB;AAIP,MAAA,MAAM,EAAE,IAAI,CAAC,IAAL,CAAU,MAAV,CAAiB;AAJlB,KAAT,CADU,EAMN;AACF,MAAA,IAAI,EAAE,IAAI,CAAC,IADT;AAEF,MAAA,MAAM,EAAE,SAFN;AAGF,MAAA,QAAQ,EAAE,SAHR,CAGkB;;AAHlB,KANM,CAAZ;;AAaA,QAAI,CAAC,GAAL,EAAU;AACR,UAAI,IAAI,CAAC,qBAAT,EAAgC;AAC9B,QAAA,OAAO,CAAC,IAAR,CACA,qDACE,IAAI,CAAC,IAAL,CAAU,MAAV,CAAiB,QADnB,GAC2B,aAD3B,GAEgB,IAAI,CAAC,IAAL,CAAU,MAAV,CAAiB,IAFjC,GAEqC,qBAFrC,GAGE,IAAI,CAAC,WAHP,GAGkB,6FAJlB;AAOD;;AACD,aAAO;AACL,QAAA,IAAI,EAAE,EADD;AAEL,QAAA,GAAG,EAAE;AAFA,OAAP;AAID;;AAED,WAAO,GAAP;AACD,GArCD;;AAsCF,SAAA,eAAA;AAAC,CAvCD,EAAA;;AAAa,OAAA,CAAA,eAAA,GAAA,eAAA;AAyCA,OAAA,CAAA,eAAA,GAAkB,IAAI,eAAJ,EAAlB","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.urlSlugResolver = exports.UrlSlugResolver = void 0;\r\nvar models_1 = require(\"../models\");\r\nvar UrlSlugResolver = /** @class */ (function () {\r\n    function UrlSlugResolver() {\r\n    }\r\n    UrlSlugResolver.prototype.resolveUrl = function (data) {\r\n        var url = data.resolver(new models_1.Link({\r\n            urlSlug: data.elementValue,\r\n            type: data.item.system.type,\r\n            codename: data.item.system.codename,\r\n            linkId: data.item.system.id,\r\n        }), {\r\n            item: data.item,\r\n            linkId: undefined,\r\n            linkText: undefined // available only for links in rich text elements,\r\n        });\r\n        if (!url) {\r\n            if (data.enableAdvancedLogging) {\r\n                console.warn(\"'urlSlugResolver' is set, but url resolved for '\" + data.item.system.codename + \"' item of '\" + data.item.system.type + \"' type in element '\" + data.elementName + \"' is undefined. This warning can be turned off by disabling 'enableAdvancedLogging' option.\");\r\n            }\r\n            return {\r\n                html: '',\r\n                url: ''\r\n            };\r\n        }\r\n        return url;\r\n    };\r\n    return UrlSlugResolver;\r\n}());\r\nexports.UrlSlugResolver = UrlSlugResolver;\r\nexports.urlSlugResolver = new UrlSlugResolver();\r\n//# sourceMappingURL=url-slug.resolver.js.map"]},"metadata":{},"sourceType":"script"}