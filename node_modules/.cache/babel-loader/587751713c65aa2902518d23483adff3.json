{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseTaxonomyQuery = void 0;\n\nvar base_query_class_1 = require(\"../common/base-query.class\");\n\nvar BaseTaxonomyQuery =\n/** @class */\nfunction (_super) {\n  __extends(BaseTaxonomyQuery, _super);\n\n  function BaseTaxonomyQuery(config, queryService) {\n    var _this = _super.call(this, config, queryService) || this;\n\n    _this.config = config;\n    _this.queryService = queryService;\n    /**\r\n     * Taxonomies endpoint URL action\r\n     */\n\n    _this.taxonomiesEndpoint = 'taxonomies';\n    /**\r\n     * Query configuration\r\n     */\n\n    _this._queryConfig = {};\n    return _this;\n  }\n  /**\r\n   * Used to configure query\r\n   * @param queryConfig Query configuration\r\n   */\n\n\n  BaseTaxonomyQuery.prototype.queryConfig = function (queryConfig) {\n    this._queryConfig = queryConfig;\n    return this;\n  };\n  /**\r\n   * Gets headers used by this query\r\n   */\n\n\n  BaseTaxonomyQuery.prototype.getHeaders = function () {\n    return this.queryService.getHeaders(this._queryConfig);\n  };\n\n  BaseTaxonomyQuery.prototype.getTaxonomyQueryUrl = function (taxonomyCodename) {\n    var action = '/' + this.taxonomiesEndpoint + '/' + taxonomyCodename;\n    return _super.prototype.resolveUrlInternal.call(this, action);\n  };\n\n  BaseTaxonomyQuery.prototype.getTaxonomiesQueryUrl = function () {\n    var action = '/' + this.taxonomiesEndpoint;\n    return _super.prototype.resolveUrlInternal.call(this, action);\n  };\n\n  BaseTaxonomyQuery.prototype.runTaxonomyQuery = function (codename) {\n    return this.queryService.getTaxonomy(this.getTaxonomyQueryUrl(codename), this._queryConfig);\n  };\n\n  BaseTaxonomyQuery.prototype.runTaxonomiesQuery = function () {\n    return this.queryService.getTaxonomies(this.getTaxonomiesQueryUrl(), this._queryConfig);\n  };\n\n  return BaseTaxonomyQuery;\n}(base_query_class_1.BaseQuery);\n\nexports.BaseTaxonomyQuery = BaseTaxonomyQuery;","map":{"version":3,"sources":["../../../lib/query/taxonomy/base-taxonomy-query.class.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,IAAA,kBAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;;AAEA,IAAA,iBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA2G,EAAA,SAAA,CAAA,iBAAA,EAAA,MAAA,CAAA;;AAYvG,WAAA,iBAAA,CACc,MADd,EAEc,YAFd,EAEwC;AAFxC,QAAA,KAAA,GAII,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,MAAN,EAAc,YAAd,KAA2B,IAJ/B;;AACc,IAAA,KAAA,CAAA,MAAA,GAAA,MAAA;AACA,IAAA,KAAA,CAAA,YAAA,GAAA,YAAA;AAZd;;AAEG;;AACgB,IAAA,KAAA,CAAA,kBAAA,GAA6B,YAA7B;AAEnB;;AAEG;;AACO,IAAA,KAAA,CAAA,YAAA,GAAqC,EAArC;;AAOT;AAED;;;AAGG;;;AACH,EAAA,iBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,WAAZ,EAA6C;AACzC,SAAK,YAAL,GAAoB,WAApB;AACA,WAAO,IAAP;AACH,GAHD;AAKA;;AAEG;;;AACH,EAAA,iBAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACI,WAAO,KAAK,YAAL,CAAkB,UAAlB,CAA6B,KAAK,YAAlC,CAAP;AACH,GAFD;;AAIU,EAAA,iBAAA,CAAA,SAAA,CAAA,mBAAA,GAAV,UAA8B,gBAA9B,EAAsD;AAClD,QAAM,MAAM,GAAG,MAAM,KAAK,kBAAX,GAAgC,GAAhC,GAAsC,gBAArD;AAEA,WAAO,MAAA,CAAA,SAAA,CAAM,kBAAN,CAAwB,IAAxB,CAAwB,IAAxB,EAAyB,MAAzB,CAAP;AACH,GAJS;;AAMA,EAAA,iBAAA,CAAA,SAAA,CAAA,qBAAA,GAAV,YAAA;AACI,QAAM,MAAM,GAAG,MAAM,KAAK,kBAA1B;AAEA,WAAO,MAAA,CAAA,SAAA,CAAM,kBAAN,CAAwB,IAAxB,CAAwB,IAAxB,EAAyB,MAAzB,CAAP;AACH,GAJS;;AAMA,EAAA,iBAAA,CAAA,SAAA,CAAA,gBAAA,GAAV,UAA2B,QAA3B,EAA2C;AACvC,WAAO,KAAK,YAAL,CAAkB,WAAlB,CAA8B,KAAK,mBAAL,CAAyB,QAAzB,CAA9B,EAAkE,KAAK,YAAvE,CAAP;AACH,GAFS;;AAIA,EAAA,iBAAA,CAAA,SAAA,CAAA,kBAAA,GAAV,YAAA;AACI,WAAO,KAAK,YAAL,CAAkB,aAAlB,CAAgC,KAAK,qBAAL,EAAhC,EAA8D,KAAK,YAAnE,CAAP;AACH,GAFS;;AAGd,SAAA,iBAAA;AAAC,CAtDD,CAA2G,kBAAA,CAAA,SAA3G,CAAA;;AAAsB,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BaseTaxonomyQuery = void 0;\r\nvar base_query_class_1 = require(\"../common/base-query.class\");\r\nvar BaseTaxonomyQuery = /** @class */ (function (_super) {\r\n    __extends(BaseTaxonomyQuery, _super);\r\n    function BaseTaxonomyQuery(config, queryService) {\r\n        var _this = _super.call(this, config, queryService) || this;\r\n        _this.config = config;\r\n        _this.queryService = queryService;\r\n        /**\r\n         * Taxonomies endpoint URL action\r\n         */\r\n        _this.taxonomiesEndpoint = 'taxonomies';\r\n        /**\r\n         * Query configuration\r\n         */\r\n        _this._queryConfig = {};\r\n        return _this;\r\n    }\r\n    /**\r\n     * Used to configure query\r\n     * @param queryConfig Query configuration\r\n     */\r\n    BaseTaxonomyQuery.prototype.queryConfig = function (queryConfig) {\r\n        this._queryConfig = queryConfig;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets headers used by this query\r\n     */\r\n    BaseTaxonomyQuery.prototype.getHeaders = function () {\r\n        return this.queryService.getHeaders(this._queryConfig);\r\n    };\r\n    BaseTaxonomyQuery.prototype.getTaxonomyQueryUrl = function (taxonomyCodename) {\r\n        var action = '/' + this.taxonomiesEndpoint + '/' + taxonomyCodename;\r\n        return _super.prototype.resolveUrlInternal.call(this, action);\r\n    };\r\n    BaseTaxonomyQuery.prototype.getTaxonomiesQueryUrl = function () {\r\n        var action = '/' + this.taxonomiesEndpoint;\r\n        return _super.prototype.resolveUrlInternal.call(this, action);\r\n    };\r\n    BaseTaxonomyQuery.prototype.runTaxonomyQuery = function (codename) {\r\n        return this.queryService.getTaxonomy(this.getTaxonomyQueryUrl(codename), this._queryConfig);\r\n    };\r\n    BaseTaxonomyQuery.prototype.runTaxonomiesQuery = function () {\r\n        return this.queryService.getTaxonomies(this.getTaxonomiesQueryUrl(), this._queryConfig);\r\n    };\r\n    return BaseTaxonomyQuery;\r\n}(base_query_class_1.BaseQuery));\r\nexports.BaseTaxonomyQuery = BaseTaxonomyQuery;\r\n//# sourceMappingURL=base-taxonomy-query.class.js.map"]},"metadata":{},"sourceType":"script"}