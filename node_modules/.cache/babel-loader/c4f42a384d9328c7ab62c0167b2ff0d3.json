{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TypeResolver = void 0;\n\nvar TypeResolver =\n/** @class */\nfunction () {\n  /**\r\n  * Resolver used to create instance of particular class representing your content item. This is useful if you want to access\r\n  * properties in a strongly types manner when using TypeScript or to define additional properties/functions on the class.\r\n  * For example if you create a class 'Character' which corresponds to 'character' code name of Kentico Kontent type, you\r\n  * typically register it like: 'new TypeResolver(\"code_example\", () => new CodeExample())'\r\n  * @constructor\r\n  * @param {string} type - Codename of the content item defined in your Kentico Kontent content types\r\n  * @param {(data?: ITypeResolverData) => IContentItem} resolve - Function used create new instance of your class\r\n  */\n  function TypeResolver(type, resolve) {\n    this.type = type;\n    this.resolve = resolve;\n  }\n\n  return TypeResolver;\n}();\n\nexports.TypeResolver = TypeResolver;","map":{"version":3,"sources":["../../../lib/models/item/type-resolver.class.ts"],"names":[],"mappings":";;;;;;;AAEA,IAAA,YAAA;AAAA;AAAA,YAAA;AAEI;;;;;;;;AAQE;AACF,WAAA,YAAA,CACW,IADX,EAEW,OAFX,EAE8D;AADnD,SAAA,IAAA,GAAA,IAAA;AACA,SAAA,OAAA,GAAA,OAAA;AACN;;AACT,SAAA,YAAA;AAAC,CAfD,EAAA;;AAAa,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TypeResolver = void 0;\r\nvar TypeResolver = /** @class */ (function () {\r\n    /**\r\n    * Resolver used to create instance of particular class representing your content item. This is useful if you want to access\r\n    * properties in a strongly types manner when using TypeScript or to define additional properties/functions on the class.\r\n    * For example if you create a class 'Character' which corresponds to 'character' code name of Kentico Kontent type, you\r\n    * typically register it like: 'new TypeResolver(\"code_example\", () => new CodeExample())'\r\n    * @constructor\r\n    * @param {string} type - Codename of the content item defined in your Kentico Kontent content types\r\n    * @param {(data?: ITypeResolverData) => IContentItem} resolve - Function used create new instance of your class\r\n    */\r\n    function TypeResolver(type, resolve) {\r\n        this.type = type;\r\n        this.resolve = resolve;\r\n    }\r\n    return TypeResolver;\r\n}());\r\nexports.TypeResolver = TypeResolver;\r\n//# sourceMappingURL=type-resolver.class.js.map"]},"metadata":{},"sourceType":"script"}