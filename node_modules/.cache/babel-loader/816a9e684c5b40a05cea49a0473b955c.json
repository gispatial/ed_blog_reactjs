{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/crocslut/Desktop/Git/kontent-tutorial-react-js/src/ArticleListing.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deliveryClient } from \"./config\";\n\nfunction ArticleListing() {\n  _s();\n\n  // Uses the React state hook\n  const [articles, setArticles] = useState([]);\n  const [isLoading, setLoading] = useState(true); // Gets URL slugs and titles of all articles in the project\n\n  const getArticles = () => {\n    return deliveryClient.items().type(\"article\").elementsParameter([\"url_pattern\", \"title\"]).toObservable().subscribe(response => {\n      setArticles(response.items);\n      setLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    const subscription = getArticles();\n    return () => subscription.unsubscribe();\n  }, []); // Shows loading until the app gets article from Kontent\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  } // Displays a list of the retrieved articles with links to their detail\n\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: articles.map(article => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/post/${article.url_pattern.value}`,\n          children: article.title.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, article.url_pattern.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ArticleListing, \"DqQZfwAUsfSVecxrr/0dE8hsSgw=\");\n\n_c = ArticleListing;\nexport default ArticleListing;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticleListing\");","map":{"version":3,"sources":["/Users/crocslut/Desktop/Git/kontent-tutorial-react-js/src/ArticleListing.js"],"names":["React","useState","useEffect","Link","deliveryClient","ArticleListing","articles","setArticles","isLoading","setLoading","getArticles","items","type","elementsParameter","toObservable","subscribe","response","subscription","unsubscribe","map","article","url_pattern","value","title"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,cAAR,QAA8B,UAA9B;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACxB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,SAAD,EAAYC,UAAZ,IAA0BR,QAAQ,CAAC,IAAD,CAAxC,CAHwB,CAKxB;;AACA,QAAMS,WAAW,GAAG,MAAM;AACxB,WAAON,cAAc,CAClBO,KADI,GAEJC,IAFI,CAEC,SAFD,EAGJC,iBAHI,CAGc,CAAC,aAAD,EAAgB,OAAhB,CAHd,EAIJC,YAJI,GAKJC,SALI,CAKOC,QAAD,IAAc;AACvBT,MAAAA,WAAW,CAACS,QAAQ,CAACL,KAAV,CAAX;AACAF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KARI,CAAP;AASD,GAVD;;AAYAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,YAAY,GAAGP,WAAW,EAAhC;AACA,WAAO,MAAMO,YAAY,CAACC,WAAb,EAAb;AACD,GAHQ,EAGN,EAHM,CAAT,CAlBwB,CAuBxB;;AACA,MAAIV,SAAJ,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GA1BuB,CA4BxB;;;AACA,sBACE;AAAA,cACGF,QAAQ,CAACa,GAAT,CAAcC,OAAD,IAAa;AACzB,0BACE;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,SAAQA,OAAO,CAACC,WAAR,CAAoBC,KAAM,EAA7C;AAAA,oBAAiDF,OAAO,CAACG,KAAR,CAAcD;AAA/D;AAAA;AAAA;AAAA;AAAA;AADF,SAASF,OAAO,CAACC,WAAR,CAAoBC,KAA7B;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KANA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAxCQjB,c;;KAAAA,c;AA0CT,eAAeA,cAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {deliveryClient } from \"./config\";\n\nfunction ArticleListing() {\n  // Uses the React state hook\n  const [articles, setArticles] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  // Gets URL slugs and titles of all articles in the project\n  const getArticles = () => {\n    return deliveryClient \n      .items()\n      .type(\"article\")\n      .elementsParameter([\"url_pattern\", \"title\"])\n      .toObservable()\n      .subscribe((response) => {\n        setArticles(response.items);\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    const subscription = getArticles();\n    return () => subscription.unsubscribe();\n  }, []);\n\n  // Shows loading until the app gets article from Kontent\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  // Displays a list of the retrieved articles with links to their detail\n  return (\n    <ul>\n      {articles.map((article) => {\n        return (\n          <li key={article.url_pattern.value}>\n            <Link to={`/post/${article.url_pattern.value}`}>{article.title.value}</Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default ArticleListing;"]},"metadata":{},"sourceType":"module"}