{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getParserAdapter = void 0;\n\nfunction getParserAdapter() {\n  var parser; // Only Node.JS has a process variable that is of [[Class]] process\n\n  if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use\n    var adapter = require('./adapters/parse5-rich-text.parser'); // instantiate class\n\n\n    parser = new adapter.Parse5RichTextParser();\n  } else if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use\n    var adapter = require('./adapters/browser-rich-text.parser'); // instantiate class\n\n\n    parser = new adapter.BrowserRichTextParser();\n  }\n\n  if (!parser) {\n    throw Error(\"Invalid or unsupported parser adapter\");\n  }\n\n  return parser;\n}\n\nexports.getParserAdapter = getParserAdapter;","map":{"version":3,"sources":["../../lib/parser/parser-adapter.ts"],"names":[],"mappings":";;;;;;;AAEA,SAAgB,gBAAhB,GAAgC;AAC5B,MAAI,MAAJ,CAD4B,CAE5B;;AACA,MAAI,OAAO,OAAP,KAAmB,WAAnB,IAAkC,MAAM,CAAC,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,OAA/B,MAA4C,kBAAlF,EAAsG;AAClG;AACA,QAAM,OAAO,GAAG,OAAO,CAAC,oCAAD,CAAvB,CAFkG,CAIlG;;;AACA,IAAA,MAAM,GAAG,IAAI,OAAO,CAAC,oBAAZ,EAAT;AAEH,GAPD,MAOO,IAAI,OAAO,cAAP,KAA0B,WAA9B,EAA2C;AAC9C;AACA,QAAM,OAAO,GAAG,OAAO,CAAC,qCAAD,CAAvB,CAF8C,CAI9C;;;AACA,IAAA,MAAM,GAAG,IAAI,OAAO,CAAC,qBAAZ,EAAT;AACH;;AAED,MAAI,CAAC,MAAL,EAAa;AACT,UAAM,KAAK,CAAC,uCAAD,CAAX;AACH;;AAED,SAAO,MAAP;AACH;;AAvBD,OAAA,CAAA,gBAAA,GAAA,gBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getParserAdapter = void 0;\r\nfunction getParserAdapter() {\r\n    var parser;\r\n    // Only Node.JS has a process variable that is of [[Class]] process\r\n    if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\r\n        // For node use\r\n        var adapter = require('./adapters/parse5-rich-text.parser');\r\n        // instantiate class\r\n        parser = new adapter.Parse5RichTextParser();\r\n    }\r\n    else if (typeof XMLHttpRequest !== 'undefined') {\r\n        // For browsers use\r\n        var adapter = require('./adapters/browser-rich-text.parser');\r\n        // instantiate class\r\n        parser = new adapter.BrowserRichTextParser();\r\n    }\r\n    if (!parser) {\r\n        throw Error(\"Invalid or unsupported parser adapter\");\r\n    }\r\n    return parser;\r\n}\r\nexports.getParserAdapter = getParserAdapter;\r\n//# sourceMappingURL=parser-adapter.js.map"]},"metadata":{},"sourceType":"script"}