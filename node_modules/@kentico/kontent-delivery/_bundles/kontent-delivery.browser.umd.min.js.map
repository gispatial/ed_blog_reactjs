{"version":3,"sources":["webpack://kontentDelivery/webpack/universalModuleDefinition","webpack://kontentDelivery/./node_modules/@kentico/kontent-core/_commonjs/helpers/enum.helper.js","webpack://kontentDelivery/./node_modules/@kentico/kontent-core/_commonjs/helpers/header.helper.js","webpack://kontentDelivery/./node_modules/@kentico/kontent-core/_commonjs/helpers/index.js","webpack://kontentDelivery/./node_modules/@kentico/kontent-core/_commonjs/helpers/url.helper.js","webpack://kontentDelivery/./node_modules/@kentico/kontent-core/_commonjs/http/headers-helper.js","webpack://kontentDelivery/./node_modules/@kentico/kontent-core/_commonjs/http/http.debugger.js","webpack://kontentDelivery/./node_modules/@kentico/kontent-core/_commonjs/http/http.functions.js","webpack://kontentDelivery/./node_modules/@kentico/kontent-core/_commonjs/http/http.models.js","webpack://kontentDelivery/./node_modules/@kentico/kontent-core/_commonjs/http/http.service.js","webpack://kontentDelivery/./node_modules/@kentico/kontent-core/_commonjs/http/ihttp.service.js","webpack://kontentDelivery/./node_modules/@kentico/kontent-core/_commonjs/http/index.js","webpack://kontentDelivery/./node_modules/@kentico/kontent-core/_commonjs/http/observable-retry-strategy.js","webpack://kontentDelivery/./node_modules/@kentico/kontent-core/_commonjs/http/retry-service.js","webpack://kontentDelivery/./node_modules/@kentico/kontent-core/_commonjs/http/test-http.service.js","webpack://kontentDelivery/./node_modules/@kentico/kontent-core/_commonjs/index.js","webpack://kontentDelivery/./node_modules/@kentico/kontent-core/_commonjs/models/index.js","webpack://kontentDelivery/./node_modules/@kentico/kontent-core/_commonjs/models/isdk-info.js","webpack://kontentDelivery/./node_modules/@kentico/kontent-core/_commonjs/models/parameters.js","webpack://kontentDelivery/./node_modules/@kentico/kontent-core/_commonjs/models/url.models.js","webpack://kontentDelivery/./node_modules/axios/index.js","webpack://kontentDelivery/./node_modules/axios/lib/adapters/xhr.js","webpack://kontentDelivery/./node_modules/axios/lib/axios.js","webpack://kontentDelivery/./node_modules/axios/lib/cancel/Cancel.js","webpack://kontentDelivery/./node_modules/axios/lib/cancel/CancelToken.js","webpack://kontentDelivery/./node_modules/axios/lib/cancel/isCancel.js","webpack://kontentDelivery/./node_modules/axios/lib/core/Axios.js","webpack://kontentDelivery/./node_modules/axios/lib/core/InterceptorManager.js","webpack://kontentDelivery/./node_modules/axios/lib/core/buildFullPath.js","webpack://kontentDelivery/./node_modules/axios/lib/core/createError.js","webpack://kontentDelivery/./node_modules/axios/lib/core/dispatchRequest.js","webpack://kontentDelivery/./node_modules/axios/lib/core/enhanceError.js","webpack://kontentDelivery/./node_modules/axios/lib/core/mergeConfig.js","webpack://kontentDelivery/./node_modules/axios/lib/core/settle.js","webpack://kontentDelivery/./node_modules/axios/lib/core/transformData.js","webpack://kontentDelivery/./node_modules/axios/lib/defaults.js","webpack://kontentDelivery/./node_modules/axios/lib/helpers/bind.js","webpack://kontentDelivery/./node_modules/axios/lib/helpers/buildURL.js","webpack://kontentDelivery/./node_modules/axios/lib/helpers/combineURLs.js","webpack://kontentDelivery/./node_modules/axios/lib/helpers/cookies.js","webpack://kontentDelivery/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://kontentDelivery/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://kontentDelivery/./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack://kontentDelivery/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://kontentDelivery/./node_modules/axios/lib/helpers/spread.js","webpack://kontentDelivery/./node_modules/axios/lib/utils.js","webpack://kontentDelivery/./node_modules/reflect-metadata/Reflect.js","webpack://kontentDelivery/./lib/client/delivery-client.ts","webpack://kontentDelivery/./lib/client/index.ts","webpack://kontentDelivery/./lib/config/default-collision-resolver.ts","webpack://kontentDelivery/./lib/config/index.ts","webpack://kontentDelivery/./lib/data-contracts/index.ts","webpack://kontentDelivery/./lib/elements/element-decorators.ts","webpack://kontentDelivery/./lib/elements/element-models.ts","webpack://kontentDelivery/./lib/elements/element-type.ts","webpack://kontentDelivery/./lib/elements/elements.ts","webpack://kontentDelivery/./lib/elements/index.ts","webpack://kontentDelivery/./lib/images/image-url-builder.ts","webpack://kontentDelivery/./lib/images/image.models.ts","webpack://kontentDelivery/./lib/images/index.ts","webpack://kontentDelivery/./lib/index.ts","webpack://kontentDelivery/./lib/mappers/element.mapper.ts","webpack://kontentDelivery/./lib/mappers/generic-element.mapper.ts","webpack://kontentDelivery/./lib/mappers/index.ts","webpack://kontentDelivery/./lib/mappers/item.mapper.ts","webpack://kontentDelivery/./lib/mappers/taxonomy.mapper.ts","webpack://kontentDelivery/./lib/mappers/type.mapper.ts","webpack://kontentDelivery/./lib/models/common/base-responses.ts","webpack://kontentDelivery/./lib/models/common/common-models.ts","webpack://kontentDelivery/./lib/models/common/filters.ts","webpack://kontentDelivery/./lib/models/common/index.ts","webpack://kontentDelivery/./lib/models/common/pagination.class.ts","webpack://kontentDelivery/./lib/models/common/parameters.ts","webpack://kontentDelivery/./lib/models/common/sort-order.enum.ts","webpack://kontentDelivery/./lib/models/content-type/content-type-models.ts","webpack://kontentDelivery/./lib/models/content-type/index.ts","webpack://kontentDelivery/./lib/models/content-type/responses.ts","webpack://kontentDelivery/./lib/models/element/element-models.ts","webpack://kontentDelivery/./lib/models/element/index.ts","webpack://kontentDelivery/./lib/models/element/responses.ts","webpack://kontentDelivery/./lib/models/index.ts","webpack://kontentDelivery/./lib/models/item/index.ts","webpack://kontentDelivery/./lib/models/item/item-models.ts","webpack://kontentDelivery/./lib/models/item/responses.ts","webpack://kontentDelivery/./lib/models/item/type-resolver.class.ts","webpack://kontentDelivery/./lib/models/taxonomy/index.ts","webpack://kontentDelivery/./lib/models/taxonomy/responses.ts","webpack://kontentDelivery/./lib/models/taxonomy/taxonomy-models.ts","webpack://kontentDelivery/./lib/parser/adapters/browser-rich-text.parser.ts","webpack://kontentDelivery/./lib/parser/adapters/parse5-rich-text.parser.ts","webpack://kontentDelivery/./lib/parser/index.ts","webpack://kontentDelivery/./lib/parser/parser-browser-adapter.ts","webpack://kontentDelivery/./lib/parser/parser-configuration.ts","webpack://kontentDelivery/./lib/query/common/base-query.class.ts","webpack://kontentDelivery/./lib/query/element/base-element-query.class.ts","webpack://kontentDelivery/./lib/query/element/element-query.class.ts","webpack://kontentDelivery/./lib/query/index.ts","webpack://kontentDelivery/./lib/query/item/base-item-query.class.ts","webpack://kontentDelivery/./lib/query/item/multiple-item-query.class.ts","webpack://kontentDelivery/./lib/query/item/single-item-query.class.ts","webpack://kontentDelivery/./lib/query/items-feed/base-items-feed-query.class.ts","webpack://kontentDelivery/./lib/query/items-feed/items-feed-query-all.class.ts","webpack://kontentDelivery/./lib/query/items-feed/items-feed-query.class.ts","webpack://kontentDelivery/./lib/query/taxonomy/base-taxonomy-query.class.ts","webpack://kontentDelivery/./lib/query/taxonomy/taxonomies-query.class.ts","webpack://kontentDelivery/./lib/query/taxonomy/taxonomy-query.class.ts","webpack://kontentDelivery/./lib/query/type/base-type-query.class.ts","webpack://kontentDelivery/./lib/query/type/multiple-type-query.class.ts","webpack://kontentDelivery/./lib/query/type/single-type-query.class.ts","webpack://kontentDelivery/./lib/resolvers/delivery-item-strongly-type.resolver.ts","webpack://kontentDelivery/./lib/resolvers/index.ts","webpack://kontentDelivery/./lib/resolvers/rich-text.resolver.ts","webpack://kontentDelivery/./lib/resolvers/url-slug.resolver.ts","webpack://kontentDelivery/./lib/sdk-info.generated.ts","webpack://kontentDelivery/./lib/services/base-delivery-query.service.ts","webpack://kontentDelivery/./lib/services/delivery-query.service.ts","webpack://kontentDelivery/./lib/services/index.ts","webpack://kontentDelivery/./lib/services/mapping.service.ts","webpack://kontentDelivery/external \"parse5\"","webpack://kontentDelivery/external {\"commonjs\":\"rxjs\",\"commonjs2\":\"rxjs\",\"amd\":\"rxjs\",\"root\":\"rxjs\"}","webpack://kontentDelivery/external {\"commonjs\":\"rxjs/operators\",\"commonjs2\":\"rxjs/operators\",\"amd\":\"rxjs/operators\",\"root\":[\"rxjs\",\"operators\"]}","webpack://kontentDelivery/webpack/bootstrap","webpack://kontentDelivery/webpack/startup","webpack://kontentDelivery/webpack/runtime/global"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__460__","__WEBPACK_EXTERNAL_MODULE__7791__","__WEBPACK_EXTERNAL_MODULE__7899__","Object","defineProperty","value","enumHelper","EnumHelper","prototype","getAllNames","T","enumNames","key","hasOwnProperty","push","getAllValues","keys","map","getEnumFromValue","this","isNumeric","result","find","m","toLowerCase","toString","err","getEnumFromName","name","_i","allNames_1","length","enumName","isNaN","parseFloat","isFinite","headerHelper","HeaderHelper","sdkVersionHeader","getSdkIdHeader","info","header","host","version","__createBinding","create","o","k","k2","undefined","enumerable","get","__exportStar","p","call","urlHelper","UrlHelper","addOptionsToUrl","url","options","forEach","filter","indexOf","getParam","extractHeadersFromAxiosResponse","response","headers","_a","headerKey","httpDebugger","HttpDebugger","debugStartHttpRequest","debugResolveHttpRequest","debugFailedHttpRequest","postCallback","deleteCallback","patchCallback","putCallback","getCallback","registerRequestInterceptor","registerResponseInterceptor","http_debugger_1","getHeadersJson","addContentTypeHeader","headerJson","mapRequestResult","promise","then","error","instance","interceptor","interceptors","use","Promise","reject","request","config","responseType","put","body","patch","delete","post","IHttpRequestResult","HttpService","axios_1","rxjs_1","operators_1","headers_helper_1","HttpFunctions","observable_retry_strategy_1","retry_service_1","opts","axiosInstance","default","axiosRequestConfig","requestInterceptor","responseInterceptor","_this","axiosObservable","defer","from","mapAxiosObservable","pipe","mapResult","retryWhen","observableRetryStrategy","strategy","retryService","getRetryStrategyFromStrategyOptions","retryStrategy","startTime","Date","catchError","logErrorToConsole","console","throwError","Error","data","status","ObservableRetryStrategy","internal","errorObs","flatMap","i","canRetryError","retryAttempt","maxAttempts","canRetryInTime","maxCumulativeWaitTimeMs","canRetry","retryAfter","tryGetRetryAfterInMsFromError","waitTime","getNextWaitTimeMs","addJitter","deltaBackoffMs","debugLogAttempt","timer","RetryService","retryAfterHeaderName","useRetryForStatusCodes","defaultRetryPolicy","canRetryErrorDefault","retryOptions","start","getTime","differenceInMs","attempt","warn","retryAttempts","retryAfterInMs","Math","pow","to","randomNumberFromInterval","tryGetAxiosError","statusCode","getStatusCodeFromError","canRetryStatusCode","useRetryForResponseCodes","includes","isAxiosError","_b","axiosError","retryValueHeader","retryValue","originalError","min","max","floor","random","TestHttpService","fakeResponseJson","errorJson","fakeHeaders","fakeStatusCode","assign","fakeError","of","Parameters","CustomParameter","getParamValue","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","resolve","requestData","requestHeaders","isFormData","XMLHttpRequest","auth","username","password","unescape","encodeURIComponent","Authorization","btoa","fullPath","baseURL","open","method","toUpperCase","params","paramsSerializer","timeout","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","responseText","statusText","onabort","onerror","ontimeout","timeoutErrorMessage","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","val","setRequestHeader","isUndefined","e","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","cancel","abort","send","bind","Axios","mergeConfig","createInstance","defaultConfig","context","extend","axios","instanceConfig","defaults","Cancel","CancelToken","isCancel","all","promises","spread","message","__CANCEL__","executor","TypeError","resolvePromise","token","reason","throwIfRequested","source","c","InterceptorManager","dispatchRequest","arguments","chain","unshift","fulfilled","rejected","shift","getUri","replace","handlers","eject","id","fn","h","isAbsoluteURL","combineURLs","requestedURL","enhanceError","code","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","toJSON","description","number","fileName","lineNumber","columnNumber","stack","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","target","isPlainObject","isArray","slice","mergeDeepProperties","prop","axiosKeys","concat","otherKeys","validateStatus","fns","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","JSON","stringify","parse","maxContentLength","maxBodyLength","thisArg","args","Array","apply","encode","serializedParams","parts","v","isDate","toISOString","join","hashmarkIndex","relativeURL","write","expires","path","domain","secure","cookie","isNumber","toGMTString","isString","document","match","RegExp","decodeURIComponent","remove","now","test","originURL","msie","navigator","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","search","hash","hostname","port","pathname","charAt","window","location","requestURL","parsed","normalizedName","ignoreDuplicateOf","split","line","trim","substr","callback","arr","getPrototypeOf","isFunction","obj","l","constructor","FormData","ArrayBuffer","isView","URLSearchParams","product","assignValue","a","b","str","stripBOM","content","charCodeAt","Reflect","g","Function","exporter","makeExporter","previous","configurable","writable","hasOwn","supportsSymbol","Symbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","iterator","supportsCreate","supportsProto","__proto__","downLevel","HashMap","MakeDictionary","has","functionPrototype","usePolyfill","env","_Map","Map","entries","cacheSentinel","arraySentinel","MapIterator","values","selector","_index","_keys","_values","_selector","next","index","done","throw","return","_cacheKey","_cacheIndex","_find","set","size","clear","getKey","getValue","getEntry","insert","_","CreateMapPolyfill","_Set","Set","_map","add","Metadata","WeakMap","rootKey","CreateUniqueKey","_key","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","Uint8Array","crypto","getRandomValues","msCrypto","offset","byte","CreateWeakMapPolyfill","GetOrCreateMetadataMap","O","P","Create","targetMetadata","IsUndefined","metadataMap","OrdinaryHasMetadata","MetadataKey","OrdinaryHasOwnMetadata","parent","OrdinaryGetPrototypeOf","IsNull","OrdinaryGetMetadata","OrdinaryGetOwnMetadata","OrdinaryDefineOwnMetadata","MetadataValue","OrdinaryMetadataKeys","ownKeys","OrdinaryOwnMetadataKeys","parentKeys","ownKeys_1","parentKeys_1","GetMethod","IsCallable","IsObject","GetIterator","IteratorStep","nextValue","IteratorClose","Type","x","ToPrimitive","input","PreferredType","hint","exoticToPrim","toString_1","valueOf","toString_2","OrdinaryToPrimitive","ToPropertyKey","argument","ToString","IsArray","IsConstructor","V","func","f","proto","prototypeProto","__","decorators","propertyKey","attributes","decorated","decorator","DecorateConstructor","descriptor","DecorateProperty","metadataKey","metadataValue","IsPropertyKey","mappingService","MappingService","richTextParserAdapter","getParserAdapter","queryService","QueryService","httpService","httpInterceptors","sdkInfo","types","MultipleTypeQuery","type","typeCodename","SingleTypeQuery","items","MultipleItemQuery","item","codename","SingleItemQuery","itemsFeed","ItemsFeedQuery","itemsFeedAll","ItemsFeedQueryAll","taxonomy","TaxonomyQuery","taxonomies","TaxonomiesQuery","element","elementCodename","ElementQuery","DeliveryClient","defaultCollissionResolver","elementName","ElementDecorators","codenameMetadataKey","generateKey","getPropertyName","getMetadata","defineMetadata","ElementModels","AssetModel","contract","width","height","MultipleChoiceOption","TaxonomyTerm","ElementType","Elements","rawData","elementWrapper","rawElement","elementType","BaseElement","Text","TextElement","mappedLinkedItems","ModularContent","itemCodenames","LinkedItemsElement","MultipleChoice","rawOption","MultipleChoiceElement","DateTime","DateTimeElement","linkedItemCodenames","RichText","resolveRichTextFunc","links","images","resolveData","resolvedData","resolveHtml","html","RichTextElement","Number","NumberElement","Asset","rawAsset","AssetsElement","UrlSlug","resolveLinkFunc","resolveUrl","resolvedUrl","UrlSlugElement","Taxonomy","taxonomy_group","taxonomyGroup","rawTerm","TaxonomyElement","Unknown","UnknownElement","Custom","CustomElement","DefaultCustomElement","imageUrl","queryParams","automaticFormatValue","withCustomParam","param","withDpr","dpr","QueryParameter","withRectangleCrop","y","withFocalPointCrop","z","withFitMode","ImageFitModeEnum","Crop","withAutomaticFormat","backupFormat","withFormat","fitMode","withCompression","compression","ImageCompressionEnum","Lossless","withQuality","quality","format","withHeight","withWidth","getParams","getQueryString","query","getUrl","ImageUrlBuilder","ImageFormatEnum","richTextHtmlParser","defaultLinkedItemWrapperTag","defaultLinkedItemWrapperClasses","mapElements","processedItem","processedItems","system","preparedItems","processingStartedForCodenames","elementCodenames","getOwnPropertyNames","elements","itemInstance","elementMap","resolveElementMap","contentItemSystem","propertyName","resolvedName","shouldMapElement","mappedElement","mapElement","queryConfig","mapLinkedItemsElement","mapTextElement","mapAssetsElement","mapNumberElement","mapMultipleChoiceElement","mapDateTimeElement","mapRichTextElement","mapUrlSlugElement","mapTaxonomyElement","mapCustomElement","mapUnknowElement","richTextLinkedItems","modular_content","preparedItem","existingLinkedItem","getOrSaveLinkedItemForElement","throwErrorForMissingLinkedItems","msg","mappedLinkedItemResult","_raw","mapRichTextLinks","mapRichTextImages","richTextResolver","enableAdvancedLogging","isDeveloperMode","getGlobalUrlSlugResolver","getGlobalUrlSlugResolverForType","getLinkedItem","linkedItemWrapperTag","linkedItemResolver","linkedItemWrapperClasses","elementResolver","customElementClass","resolver","getUrlSlugResolverForElement","urlSlugResolver","elementValue","linkedItems","linkedItem","_config","mappingStartedForCodenames","mappedLinkedItem","linksJson","linkId","linkRaw","Link","urlSlug","url_slug","imagesJson","imageRaw","RichTextImage","imageId","image_id","originalElementCodename","resolvedElementPropertyName","propertyResolver","collidesWithAnotherProperty","getCollisionResolver","collisionResolver","stronglyTypedResolver","createEmptyItemInstanceOfType","typeResolvers","ElementMapper","GenericElement","GenericElementMapper","elementMapper","mapSingleItemFromResponse","mapItems","mainItems","mapMultipleItemsFromResponse","itemResolver","mappedMainItems","createItemInstance","itemResult","mapItem","ItemMapper","mapTaxonomy","taxonomySystem","taxonomyTerms","mappedSystemAttributes","TaxonomySystemAttributes","lastModified","last_modified","mappedTerms","mapTaxonomyTerms","TaxonomyGroup","mapTaxonomies","mappedTaxonomies","terms","termsArray","mappedTermsArray","TaxonomyTerms","TaxonomyMapper","mapSingleType","mapType","mapMultipleTypes","that","typeSystem","ContentTypeSystemAttributes","typeElement","rawOptions","GenericElementOption","ContentType","TypeMapper","getResponseDebug","BaseKontentResponse","hasStaleContent","hasStaleContentHeader","getHasStaleContent","debug","BaseKontentResponseStandardDebug","responses","BaseKontentResponseArrayDebug","DeliveryError","requestId","errorCode","specificCode","Filters","defaultValue","getParamValueForSystemFilter","TypeFilter","collection","CollectionFilter","EmptyFilter","NotEmptyFilter","EqualsFilter","NotEqualsFilter","AllFilter","AnyFilter","ContainsFilter","GreaterThanFilter","GreaterThanOrEqualFilter","InFilter","NotInFilter","LessThanFilter","LessThanOrEqualFilter","lowerValue","higherValue","lowerVal","higherVal","RangeFilter","Pagination","skip","limit","count","nextPage","totalCount","ElementsParameter","LimitParameter","IncludeTotalCountParameter","SkipParameter","sortOrder","order","SortOrder","desc","OrderParameter","depth","DepthParameter","languageCodename","LanguageParameter","TypeResponses","pagination","ListContentTypesResponse","ViewContentTypeResponse","ElementResponses","ViewContentTypeElementResponse","getAllElements","ContentItem","ContentItemSystemAttributes","RichTextItemDataType","ItemResponses","ItemsFeedAllResponse","continuationTokenHeaderName","continuationToken","getContinuationToken","ItemsFeedResponse","isEmpty","getIsEmpty","lastItem","getLastItem","firstItem","getFirstItem","getLinkedItemsAsArray","ListContentItemsResponse","ViewContentItemResponse","TypeResolver","TaxonomyResponses","ViewTaxonomyGroupResponse","ListTaxonomyGroupsResponse","resolveRichTextElement","contentItemCodename","replacement","doc","createWrapperElement","processRichTextElement","children","resolvedHtml","innerHTML","parserConfiguration","linkedItemWrapperElem","htmlCollection","typeAttribute","getNamedItem","modularContentElementData","dataCodenameAttribute","dataCodename","dataTypeAttribute","dataType","relAttribute","itemType","componentRel","linkItemContentObject","parentElement","newElem","Item","linkedItemHtml","getLinkedItemHtml","className","replaceChild","nodeName","linkElementData","dataItemIdAttribute","dataItemId","link","linkText","urlSlugResult","getUrlSlugResult","linkHtml","outerHTML","hrefAttribute","linkUrlResult","imageElementData","dataImageIdAttribute","dataImageId","imageObj","imageResult","getImageResult","srcAttribute","BrowserRichTextParser","resolvedLinkedItemAttribute","documentFragment","parseFragment","getChildNodes","serialize","attrs","processModularContentItem","processImage","processLink","childNodes","image","linkResult","originalLinkText","linkTextNode","linkRootNodes","linkRootNode","linkNodes","tagName","resolvedDataAttribute","itemCodename","resultHtml","serializedChildNodes","Parse5RichTextParser","parser","parameters","withParameter","withParameters","getHeaders","_queryConfig","withUrl","customUrl","getParameters","toPromise","toObservable","resolveUrlInternal","action","BaseQuery","getElementQueryUrl","runElementQuery","getElement","BaseElementQuery","languageParameter","elementsParameter","getItemFeedQueryUrl","processDefaultLanguageParameter","getMultipleItemsQueryUrl","getSingleItemQueryUrl","runItemsFeedQuery","getItemsFeed","runItemsFeedQueryAll","getItemsFeedAll","runMultipleItemsQuery","getMultipleItems","runSingleItemQuery","getSingleItem","defaultLanguage","BaseItemQuery","includeTotalCountParameter","collections","emptyFilter","notEmptyFilter","equalsFilter","notEqualsFilter","allFilter","anyFilter","containsFilter","greaterThanFilter","greaterThanOrEqualFilter","depthParameter","inFilter","notInFilter","lessThanFilter","lessThanOrEqualFilter","rangeFilter","limitParameter","orderParameter","orderByDescending","orderByAscending","asc","skipParameter","BaseItemsFeedQuery","taxonomiesEndpoint","getTaxonomyQueryUrl","taxonomyCodename","getTaxonomiesQueryUrl","runTaxonomyQuery","getTaxonomy","runTaxonomiesQuery","getTaxonomies","BaseTaxonomyQuery","getSingleTypeQueryUrl","getMultipleTypesQueryUrl","runMultipleTypesQuery","getMultipleTypes","runSingleTypeQuery","getSingleType","BaseTypeQuery","getTypeResolver","createInstanceWithResolver","createContentItem","typeResolver","assignRequiredContentItemData","mapSystemAttributes","rawSystem","language","sitemapLocations","sitemap_locations","resolvers","contentItem","rawItem","DeliveryItemStronglyTypeResolver","itemId","xElementName","componentCodenames","richTextElement","tryGetImageFromLinkedItem","richTextImageResolver","richTextElementProperty","linkedImage","contentType","existingLink","linkContext","queryUrlSlugResolver","queryUrlSlugResult","globalUrlSlugResolver","globalUrlSlugResolverResult","RichTextResolver","UrlSlugResolver","defaultBaseDeliveryApiUrl","defaultPreviewDeliveryApiUrl","waitForLoadingNewContentHeader","proxy","advancedProxyUrlResolver","queryParameters","queryString","getDomain","projectId","getBaseUrl","additionalHeaders","globalHeaders","getQueryHeaders","isPreviewModeEnabled","isSecuredModeEnabled","previewApiKey","getAuthorizationHeader","secureApiKey","shouldAddWaitForLoadingNewContentHeader","getResponse","serviceConfig","mapDeliveryError","usePreviewMode","globalQueryConfig","customHeaders","waitForLoadingNewContent","useSecuredMode","basePreviewUrl","baseUrl","deliveryErrorData","error_code","specific_code","request_id","BaseDeliveryQueryService","ContinuationHeaderName","viewContentItemResponse","itemsFeedResponse","getAllItemsFeedResponses","itemsFeedAllResponse","listContentItemsResponse","viewContentTypeResponse","listContentTypesResponse","viewTaxonomyGroupResponse","listTaxonomyGroupsResponse","viewContentTypeElementResponse","continuationHeader","typeMapper","itemMapper","taxonomyMapper","genericElementMapper","next_page","itemsResult","allMainItems","allLinkedItems","total_count","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","globalThis"],"mappings":"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","file":"kontent-delivery.browser.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"rxjs\"), require(\"rxjs/operators\"), require(\"parse5\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"kontentDelivery\", [\"rxjs\", \"rxjs/operators\", \"parse5\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"kontentDelivery\"] = factory(require(\"rxjs\"), require(\"rxjs/operators\"), require(\"parse5\"));\n\telse\n\t\troot[\"kontentDelivery\"] = factory(root[\"rxjs\"], root[\"rxjs\"][\"operators\"], root[\"parse5\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__460__, __WEBPACK_EXTERNAL_MODULE__7791__, __WEBPACK_EXTERNAL_MODULE__7899__) {\nreturn ","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.enumHelper = exports.EnumHelper = void 0;\r\nvar EnumHelper = /** @class */ (function () {\r\n    function EnumHelper() {\r\n    }\r\n    EnumHelper.prototype.getAllNames = function (T) {\r\n        var enumNames = [];\r\n        for (var key in T) {\r\n            if (T.hasOwnProperty(key)) {\r\n                enumNames.push(key);\r\n            }\r\n        }\r\n        return enumNames;\r\n    };\r\n    EnumHelper.prototype.getAllValues = function (T) {\r\n        var allEnumValues = Object.keys(T).map(function (key) { return T[key]; });\r\n        return allEnumValues;\r\n    };\r\n    EnumHelper.prototype.getEnumFromValue = function (T, value) {\r\n        try {\r\n            if (!value) {\r\n                return undefined;\r\n            }\r\n            // we can map back from index number directly\r\n            if (this.isNumeric(value)) {\r\n                return T[value];\r\n            }\r\n            // for strings, we need to compare each value separately\r\n            var allEnumValues = this.getAllValues(T);\r\n            var result = allEnumValues.find(function (m) { return m.toLowerCase() === value.toString().toLowerCase(); });\r\n            if (!result) {\r\n                return undefined;\r\n            }\r\n            return result;\r\n        }\r\n        catch (err) {\r\n            return undefined;\r\n        }\r\n    };\r\n    EnumHelper.prototype.getEnumFromName = function (T, name) {\r\n        var allNames = this.getAllNames(T);\r\n        for (var _i = 0, allNames_1 = allNames; _i < allNames_1.length; _i++) {\r\n            var enumName = allNames_1[_i];\r\n            if (enumName.toLowerCase() === name.toLowerCase()) {\r\n                return T[enumName];\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    EnumHelper.prototype.isNumeric = function (value) {\r\n        return !isNaN(parseFloat(value)) && isFinite(value);\r\n    };\r\n    return EnumHelper;\r\n}());\r\nexports.EnumHelper = EnumHelper;\r\nexports.enumHelper = new EnumHelper();\r\n//# sourceMappingURL=enum.helper.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.headerHelper = exports.HeaderHelper = void 0;\r\nvar HeaderHelper = /** @class */ (function () {\r\n    function HeaderHelper() {\r\n        /**\r\n        * Header name for SDK usage\r\n        */\r\n        this.sdkVersionHeader = 'X-KC-SDKID';\r\n    }\r\n    /**\r\n    * Header identifying SDK type & version for internal purposes of Kentico\r\n    */\r\n    HeaderHelper.prototype.getSdkIdHeader = function (info) {\r\n        return {\r\n            header: this.sdkVersionHeader,\r\n            value: info.host + \";\" + info.name + \";\" + info.version\r\n        };\r\n    };\r\n    return HeaderHelper;\r\n}());\r\nexports.HeaderHelper = HeaderHelper;\r\nexports.headerHelper = new HeaderHelper();\r\n//# sourceMappingURL=header.helper.js.map","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./url.helper\"), exports);\r\n__exportStar(require(\"./header.helper\"), exports);\r\n__exportStar(require(\"./enum.helper\"), exports);\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.urlHelper = exports.UrlHelper = void 0;\r\nvar UrlHelper = /** @class */ (function () {\r\n    function UrlHelper() {\r\n    }\r\n    /**\r\n   * Adds query parameters to given url\r\n   * @param url Url to which options will be added\r\n   * @param options Query parameters to add\r\n   */\r\n    UrlHelper.prototype.addOptionsToUrl = function (url, options) {\r\n        if (options) {\r\n            options.forEach(function (filter) {\r\n                if (url.indexOf('?') > -1) {\r\n                    url += '&';\r\n                }\r\n                else {\r\n                    url += '?';\r\n                }\r\n                url += filter.getParam();\r\n            });\r\n        }\r\n        return url;\r\n    };\r\n    return UrlHelper;\r\n}());\r\nexports.UrlHelper = UrlHelper;\r\nexports.urlHelper = new UrlHelper();\r\n//# sourceMappingURL=url.helper.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.extractHeadersFromAxiosResponse = void 0;\r\nfunction extractHeadersFromAxiosResponse(response) {\r\n    var headers = [];\r\n    for (var _i = 0, _a = Object.keys(response.headers); _i < _a.length; _i++) {\r\n        var headerKey = _a[_i];\r\n        headers.push({\r\n            header: headerKey,\r\n            value: response.headers[headerKey]\r\n        });\r\n    }\r\n    return headers;\r\n}\r\nexports.extractHeadersFromAxiosResponse = extractHeadersFromAxiosResponse;\r\n//# sourceMappingURL=headers-helper.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.httpDebugger = exports.HttpDebugger = void 0;\r\nvar HttpDebugger = /** @class */ (function () {\r\n    function HttpDebugger() {\r\n    }\r\n    /*\r\n    Called when http request is started\r\n    */\r\n    HttpDebugger.prototype.debugStartHttpRequest = function () {\r\n    };\r\n    /*\r\n    Called when http request is resolved\r\n    */\r\n    HttpDebugger.prototype.debugResolveHttpRequest = function () {\r\n    };\r\n    /*\r\n    Called when http request errored out\r\n    */\r\n    HttpDebugger.prototype.debugFailedHttpRequest = function () {\r\n    };\r\n    return HttpDebugger;\r\n}());\r\nexports.HttpDebugger = HttpDebugger;\r\nexports.httpDebugger = new HttpDebugger();\r\n//# sourceMappingURL=http.debugger.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.postCallback = exports.deleteCallback = exports.patchCallback = exports.putCallback = exports.getCallback = exports.registerRequestInterceptor = exports.registerResponseInterceptor = void 0;\r\nvar http_debugger_1 = require(\"./http.debugger\");\r\nfunction registerResponseInterceptor(instance, interceptor) {\r\n    instance.interceptors.response.use(function (response) {\r\n        return interceptor(response);\r\n    }, function (error) {\r\n        return Promise.reject(error);\r\n    });\r\n}\r\nexports.registerResponseInterceptor = registerResponseInterceptor;\r\nfunction registerRequestInterceptor(instance, interceptor) {\r\n    // Add a request interceptor\r\n    instance.interceptors.request.use(function (config) {\r\n        return interceptor(config);\r\n    }, function (error) {\r\n        return Promise.reject(error);\r\n    });\r\n}\r\nexports.registerRequestInterceptor = registerRequestInterceptor;\r\nfunction getCallback(instance, call, options) {\r\n    http_debugger_1.httpDebugger.debugStartHttpRequest();\r\n    var axiosPromise = instance.get(call.url, {\r\n        headers: getHeadersJson(options && options.headers ? options.headers : [], false),\r\n        responseType: options && options.responseType ? options.responseType : undefined\r\n    });\r\n    return mapRequestResult(axiosPromise);\r\n}\r\nexports.getCallback = getCallback;\r\nfunction putCallback(instance, call, options) {\r\n    http_debugger_1.httpDebugger.debugStartHttpRequest();\r\n    var axiosPromise = instance.put(call.url, call.body, {\r\n        headers: getHeadersJson(options && options.headers ? options.headers : [], true),\r\n        responseType: options && options.responseType ? options.responseType : undefined\r\n    });\r\n    return mapRequestResult(axiosPromise);\r\n}\r\nexports.putCallback = putCallback;\r\nfunction patchCallback(instance, call, options) {\r\n    http_debugger_1.httpDebugger.debugStartHttpRequest();\r\n    var axiosPromise = instance.patch(call.url, call.body, {\r\n        headers: getHeadersJson(options && options.headers ? options.headers : [], true),\r\n        responseType: options && options.responseType ? options.responseType : undefined\r\n    });\r\n    return mapRequestResult(axiosPromise);\r\n}\r\nexports.patchCallback = patchCallback;\r\nfunction deleteCallback(instance, call, options) {\r\n    http_debugger_1.httpDebugger.debugStartHttpRequest();\r\n    var axiosPromise = instance.delete(call.url, {\r\n        headers: getHeadersJson(options && options.headers ? options.headers : [], true),\r\n        responseType: options && options.responseType ? options.responseType : undefined\r\n    });\r\n    return mapRequestResult(axiosPromise);\r\n}\r\nexports.deleteCallback = deleteCallback;\r\nfunction postCallback(instance, call, options) {\r\n    http_debugger_1.httpDebugger.debugStartHttpRequest();\r\n    var axiosPromise = instance.post(call.url, call.body, {\r\n        headers: getHeadersJson(options && options.headers ? options.headers : [], true),\r\n        responseType: options && options.responseType ? options.responseType : undefined\r\n    });\r\n    return mapRequestResult(axiosPromise);\r\n}\r\nexports.postCallback = postCallback;\r\nfunction getHeadersJson(headers, addContentTypeHeader) {\r\n    var headerJson = {};\r\n    headers.forEach(function (header) {\r\n        headerJson[header.header] = header.value;\r\n    });\r\n    if (addContentTypeHeader) {\r\n        // add default content type header if not present\r\n        var contentTypeHeader = headers.find(function (m) { return m.header.toLowerCase() === 'Content-Type'.toLowerCase(); });\r\n        if (!contentTypeHeader) {\r\n            headerJson['Content-Type'] = 'application/json';\r\n        }\r\n    }\r\n    return headerJson;\r\n}\r\nfunction mapRequestResult(promise) {\r\n    return promise.then(function (response) {\r\n        http_debugger_1.httpDebugger.debugResolveHttpRequest();\r\n        return {\r\n            response: response\r\n        };\r\n    }, function (error) {\r\n        http_debugger_1.httpDebugger.debugFailedHttpRequest();\r\n        return {\r\n            error: error\r\n        };\r\n    });\r\n}\r\n//# sourceMappingURL=http.functions.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.IHttpRequestResult = void 0;\r\nvar IHttpRequestResult = /** @class */ (function () {\r\n    function IHttpRequestResult() {\r\n    }\r\n    return IHttpRequestResult;\r\n}());\r\nexports.IHttpRequestResult = IHttpRequestResult;\r\n//# sourceMappingURL=http.models.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HttpService = void 0;\r\nvar axios_1 = require(\"axios\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar headers_helper_1 = require(\"./headers-helper\");\r\nvar HttpFunctions = require(\"./http.functions\");\r\nvar observable_retry_strategy_1 = require(\"./observable-retry-strategy\");\r\nvar retry_service_1 = require(\"./retry-service\");\r\nvar HttpService = /** @class */ (function () {\r\n    function HttpService(opts) {\r\n        this.axiosInstance = axios_1.default.create(opts && opts.axiosRequestConfig ? opts.axiosRequestConfig : undefined);\r\n        if (opts) {\r\n            if (opts.requestInterceptor) {\r\n                HttpFunctions.registerRequestInterceptor(this.axiosInstance, opts.requestInterceptor);\r\n            }\r\n            if (opts.responseInterceptor) {\r\n                HttpFunctions.registerResponseInterceptor(this.axiosInstance, opts.responseInterceptor);\r\n            }\r\n        }\r\n    }\r\n    HttpService.prototype.get = function (call, options) {\r\n        var _this = this;\r\n        // bind callback from axios promise\r\n        var axiosObservable = rxjs_1.defer(function () { return rxjs_1.from(HttpFunctions.getCallback(_this.axiosInstance, call, options)); });\r\n        // map axios observable\r\n        return this.mapAxiosObservable(axiosObservable, options);\r\n    };\r\n    HttpService.prototype.post = function (call, options) {\r\n        var _this = this;\r\n        // bind callback from axios promise\r\n        var axiosObservable = rxjs_1.defer(function () { return rxjs_1.from(HttpFunctions.postCallback(_this.axiosInstance, call, options)); });\r\n        // map axios observable\r\n        return this.mapAxiosObservable(axiosObservable, options);\r\n    };\r\n    HttpService.prototype.put = function (call, options) {\r\n        var _this = this;\r\n        // bind callback from axios promise\r\n        var axiosObservable = rxjs_1.defer(function () { return rxjs_1.from(HttpFunctions.putCallback(_this.axiosInstance, call, options)); });\r\n        // map axios observable\r\n        return this.mapAxiosObservable(axiosObservable, options);\r\n    };\r\n    HttpService.prototype.patch = function (call, options) {\r\n        var _this = this;\r\n        // bind callback from axios promise\r\n        var axiosObservable = rxjs_1.defer(function () { return rxjs_1.from(HttpFunctions.patchCallback(_this.axiosInstance, call, options)); });\r\n        // map axios observable\r\n        return this.mapAxiosObservable(axiosObservable, options);\r\n    };\r\n    HttpService.prototype.delete = function (call, options) {\r\n        var _this = this;\r\n        // bind callback from axios promise\r\n        var axiosObservable = rxjs_1.defer(function () { return rxjs_1.from(HttpFunctions.deleteCallback(_this.axiosInstance, call, options)); });\r\n        // map axios observable\r\n        return this.mapAxiosObservable(axiosObservable, options);\r\n    };\r\n    HttpService.prototype.mapAxiosObservable = function (axiosObservable, options) {\r\n        var _this = this;\r\n        return axiosObservable.pipe(operators_1.map(function (result) { return _this.mapResult(result); }), operators_1.retryWhen(observable_retry_strategy_1.observableRetryStrategy.strategy(retry_service_1.retryService.getRetryStrategyFromStrategyOptions(options === null || options === void 0 ? void 0 : options.retryStrategy), {\r\n            startTime: new Date()\r\n        })), operators_1.catchError(function (error) {\r\n            // Handling errors: https://github.com/axios/axios#handling-errors\r\n            if (options && options.logErrorToConsole) {\r\n                console.error(\"Kentico Kontent Core SDK encountered an error: \", error);\r\n            }\r\n            return rxjs_1.throwError(error);\r\n        }));\r\n    };\r\n    HttpService.prototype.mapResult = function (result) {\r\n        // if error is set, throw it\r\n        if (result.error) {\r\n            throw result.error;\r\n        }\r\n        // if neither error nor response is set, throw an error\r\n        if (!result.response) {\r\n            throw Error('Response is not set and no error was thrown');\r\n        }\r\n        return {\r\n            data: result.response.data,\r\n            response: result.response,\r\n            headers: headers_helper_1.extractHeadersFromAxiosResponse(result.response),\r\n            status: result.response.status\r\n        };\r\n    };\r\n    return HttpService;\r\n}());\r\nexports.HttpService = HttpService;\r\n//# sourceMappingURL=http.service.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=ihttp.service.js.map","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./ihttp.service\"), exports);\r\n__exportStar(require(\"./observable-retry-strategy\"), exports);\r\n__exportStar(require(\"./http.service\"), exports);\r\n__exportStar(require(\"./http.models\"), exports);\r\n__exportStar(require(\"./http.functions\"), exports);\r\n__exportStar(require(\"./http.debugger\"), exports);\r\n__exportStar(require(\"./test-http.service\"), exports);\r\n__exportStar(require(\"./retry-service\"), exports);\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.observableRetryStrategy = exports.ObservableRetryStrategy = void 0;\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar retry_service_1 = require(\"./retry-service\");\r\nvar ObservableRetryStrategy = /** @class */ (function () {\r\n    function ObservableRetryStrategy() {\r\n        this.strategy = function (options, internal) { return function (errorObs) {\r\n            return errorObs.pipe(operators_1.flatMap(function (error, i) {\r\n                var canRetryError = options.canRetryError(error);\r\n                if (!canRetryError) {\r\n                    // request cannot be retried\r\n                    return rxjs_1.throwError(error);\r\n                }\r\n                var retryAttempt = i + 1;\r\n                var maximumRetryAttemptsMet = retryAttempt > options.maxAttempts;\r\n                if (maximumRetryAttemptsMet) {\r\n                    // request cannot be retried anymore due to maximum attempts\r\n                    return rxjs_1.throwError(error);\r\n                }\r\n                var retryInTimeResult = retry_service_1.retryService.canRetryInTime(internal.startTime, options.maxCumulativeWaitTimeMs);\r\n                if (!retryInTimeResult.canRetry) {\r\n                    // request should not be retried anymore as allowed time expired\r\n                    return rxjs_1.throwError(error);\r\n                }\r\n                // get wait time\r\n                var retryAfter = retry_service_1.retryService.tryGetRetryAfterInMsFromError(error);\r\n                var waitTime = retry_service_1.retryService.getNextWaitTimeMs(options.addJitter, options.deltaBackoffMs, retryAttempt, retryAfter);\r\n                // debug log attempt\r\n                retry_service_1.retryService.debugLogAttempt(retryAttempt, waitTime);\r\n                return rxjs_1.timer(waitTime);\r\n            }));\r\n        }; };\r\n    }\r\n    return ObservableRetryStrategy;\r\n}());\r\nexports.ObservableRetryStrategy = ObservableRetryStrategy;\r\nexports.observableRetryStrategy = new ObservableRetryStrategy();\r\n//# sourceMappingURL=observable-retry-strategy.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.retryService = exports.RetryService = void 0;\r\nvar headers_helper_1 = require(\"./headers-helper\");\r\nvar RetryService = /** @class */ (function () {\r\n    function RetryService() {\r\n        var _this = this;\r\n        this.retryAfterHeaderName = 'Retry-After';\r\n        this.useRetryForStatusCodes = [408, 429, 500, 502, 503, 504];\r\n        this.defaultRetryPolicy = {\r\n            addJitter: true,\r\n            deltaBackoffMs: 1000,\r\n            maxCumulativeWaitTimeMs: 30000,\r\n            maxAttempts: 20,\r\n            canRetryError: function (error) { return _this.canRetryErrorDefault(error); }\r\n        };\r\n    }\r\n    RetryService.prototype.getRetryStrategyFromStrategyOptions = function (retryOptions) {\r\n        if (!retryOptions) {\r\n            return this.defaultRetryPolicy;\r\n        }\r\n        return retryOptions;\r\n    };\r\n    RetryService.prototype.canRetryInTime = function (startTime, maxCumulativeWaitTimeMs) {\r\n        var start = startTime.getTime();\r\n        var now = new Date().getTime();\r\n        var differenceInMs = now - start;\r\n        return {\r\n            canRetry: differenceInMs < maxCumulativeWaitTimeMs,\r\n            differenceInMs: differenceInMs\r\n        };\r\n    };\r\n    /**\r\n     * Logs attempt in console.\r\n     * This function is also used for testing in jasmine spy\r\n     */\r\n    RetryService.prototype.debugLogAttempt = function (attempt, waitTime) {\r\n        console.warn(\"Attempt \" + attempt + \": retrying in \" + waitTime + \"ms\");\r\n    };\r\n    RetryService.prototype.getNextWaitTimeMs = function (addJitter, deltaBackoffMs, retryAttempts, retryAfterInMs) {\r\n        if (retryAfterInMs) {\r\n            return retryAfterInMs;\r\n        }\r\n        if (!addJitter) {\r\n            return deltaBackoffMs * Math.pow(2, retryAttempts);\r\n        }\r\n        var from = 0.8 * deltaBackoffMs;\r\n        var to = 1.2 * deltaBackoffMs * Math.pow(2, retryAttempts);\r\n        return this.randomNumberFromInterval(from, to);\r\n    };\r\n    RetryService.prototype.canRetryErrorDefault = function (error) {\r\n        var axiosError = this.tryGetAxiosError(error);\r\n        if (!axiosError) {\r\n            // by default non-axios errors are not retried\r\n            return false;\r\n        }\r\n        var statusCode = this.getStatusCodeFromError(error);\r\n        var canRetryStatusCode = this.canRetryStatusCode(statusCode, this.useRetryForStatusCodes);\r\n        if (canRetryStatusCode) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    RetryService.prototype.canRetryStatusCode = function (statusCode, useRetryForResponseCodes) {\r\n        return useRetryForResponseCodes.includes(statusCode);\r\n    };\r\n    RetryService.prototype.isAxiosError = function (error) {\r\n        var _a, _b;\r\n        return (_b = (_a = this.tryGetAxiosError(error)) === null || _a === void 0 ? void 0 : _a.isAxiosError) !== null && _b !== void 0 ? _b : false;\r\n    };\r\n    RetryService.prototype.getStatusCodeFromError = function (error) {\r\n        var axiosError = this.tryGetAxiosError(error);\r\n        if (!axiosError || !axiosError.response) {\r\n            return 0;\r\n        }\r\n        return axiosError.response.status;\r\n    };\r\n    RetryService.prototype.tryGetRetryAfterInMsFromError = function (error) {\r\n        var _this = this;\r\n        var axiosError = this.tryGetAxiosError(error);\r\n        if (!axiosError || !axiosError.response) {\r\n            return undefined;\r\n        }\r\n        var headers = headers_helper_1.extractHeadersFromAxiosResponse(axiosError.response);\r\n        var retryValueHeader = headers.find(function (m) { return m.header.toLowerCase() === _this.retryAfterHeaderName.toLowerCase(); });\r\n        if (!retryValueHeader) {\r\n            return undefined;\r\n        }\r\n        var retryValue = retryValueHeader.value;\r\n        if (isNaN(+retryValue)) {\r\n            // header is date\r\n            var retryAfter = new Date(retryValue).getTime();\r\n            var now = new Date().getTime();\r\n            var differenceInMs = retryAfter - now;\r\n            return differenceInMs;\r\n        }\r\n        else {\r\n            // header is number\r\n            var retryValueInMs = +retryValue * 1000;\r\n            return retryValueInMs;\r\n        }\r\n    };\r\n    RetryService.prototype.tryGetAxiosError = function (error) {\r\n        if (!error) {\r\n            return undefined;\r\n        }\r\n        if (error.isAxiosError) {\r\n            return error;\r\n        }\r\n        var originalError = error.originalError;\r\n        if (originalError && originalError.isAxiosError) {\r\n            return originalError;\r\n        }\r\n        return undefined;\r\n    };\r\n    /**\r\n     * min and max included\r\n     */\r\n    RetryService.prototype.randomNumberFromInterval = function (min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    };\r\n    return RetryService;\r\n}());\r\nexports.RetryService = RetryService;\r\nexports.retryService = new RetryService();\r\n//# sourceMappingURL=retry-service.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TestHttpService = void 0;\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar TestHttpService = /** @class */ (function () {\r\n    function TestHttpService(config) {\r\n        this.throwError = false;\r\n        this.fakeResponseJson = undefined;\r\n        this.errorJson = undefined;\r\n        this.fakeHeaders = [];\r\n        this.fakeStatusCode = 200;\r\n        this.isAxiosError = false;\r\n        Object.assign(this, config);\r\n    }\r\n    TestHttpService.prototype.get = function (call, options) {\r\n        // throw kontent error\r\n        if (this.throwError) {\r\n            var fakeError = {\r\n                isAxiosError: this.isAxiosError,\r\n                response: {\r\n                    data: this.errorJson\r\n                }\r\n            };\r\n            return rxjs_1.throwError({\r\n                error: fakeError,\r\n                headers: this.fakeHeaders,\r\n                status: this.fakeStatusCode\r\n            });\r\n        }\r\n        // return fake response\r\n        return rxjs_1.of({\r\n            data: this.fakeResponseJson,\r\n            response: undefined,\r\n            headers: this.fakeHeaders,\r\n            status: this.fakeStatusCode\r\n        });\r\n    };\r\n    TestHttpService.prototype.post = function (call, options) {\r\n        // throw kontent error\r\n        if (this.throwError) {\r\n            var fakeError = {\r\n                isAxiosError: this.isAxiosError,\r\n                response: {\r\n                    data: this.errorJson\r\n                }\r\n            };\r\n            return rxjs_1.throwError({\r\n                error: fakeError,\r\n                headers: this.fakeHeaders,\r\n                status: this.fakeStatusCode\r\n            });\r\n        }\r\n        // return fake response\r\n        return rxjs_1.of({\r\n            data: this.fakeResponseJson,\r\n            response: undefined,\r\n            headers: this.fakeHeaders,\r\n            status: this.fakeStatusCode\r\n        });\r\n    };\r\n    TestHttpService.prototype.put = function (call, options) {\r\n        // throw kontent error\r\n        if (this.throwError) {\r\n            var fakeError = {\r\n                isAxiosError: this.isAxiosError,\r\n                response: {\r\n                    data: this.errorJson\r\n                }\r\n            };\r\n            return rxjs_1.throwError({\r\n                error: fakeError,\r\n                headers: this.fakeHeaders,\r\n                status: this.fakeStatusCode\r\n            });\r\n        }\r\n        // return fake response\r\n        return rxjs_1.of({\r\n            data: this.fakeResponseJson,\r\n            response: undefined,\r\n            headers: this.fakeHeaders,\r\n            status: this.fakeStatusCode\r\n        });\r\n    };\r\n    TestHttpService.prototype.patch = function (call, options) {\r\n        // throw kontent error\r\n        if (this.throwError) {\r\n            var fakeError = {\r\n                isAxiosError: this.isAxiosError,\r\n                response: {\r\n                    data: this.errorJson\r\n                }\r\n            };\r\n            return rxjs_1.throwError({\r\n                error: fakeError,\r\n                headers: this.fakeHeaders,\r\n                status: this.fakeStatusCode\r\n            });\r\n        }\r\n        // return fake response\r\n        return rxjs_1.of({\r\n            data: this.fakeResponseJson,\r\n            response: undefined,\r\n            headers: [],\r\n            status: this.fakeStatusCode\r\n        });\r\n    };\r\n    TestHttpService.prototype.delete = function (call, options) {\r\n        // throw kontent error\r\n        if (this.throwError) {\r\n            var fakeError = {\r\n                isAxiosError: this.isAxiosError,\r\n                response: {\r\n                    data: this.errorJson\r\n                }\r\n            };\r\n            return rxjs_1.throwError({\r\n                error: fakeError,\r\n                headers: this.fakeHeaders,\r\n                status: this.fakeStatusCode\r\n            });\r\n        }\r\n        // return fake response\r\n        return rxjs_1.of({\r\n            data: this.fakeResponseJson,\r\n            response: undefined,\r\n            headers: this.fakeHeaders,\r\n            status: this.fakeStatusCode\r\n        });\r\n    };\r\n    return TestHttpService;\r\n}());\r\nexports.TestHttpService = TestHttpService;\r\n//# sourceMappingURL=test-http.service.js.map","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* Public API */\r\n__exportStar(require(\"./helpers\"), exports);\r\n__exportStar(require(\"./models\"), exports);\r\n__exportStar(require(\"./http\"), exports);\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./url.models\"), exports);\r\n__exportStar(require(\"./isdk-info\"), exports);\r\n__exportStar(require(\"./parameters\"), exports);\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=isdk-info.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Parameters = void 0;\r\nvar Parameters;\r\n(function (Parameters) {\r\n    var CustomParameter = /** @class */ (function () {\r\n        /**\r\n         * Custom parameter\r\n         * @constructor\r\n         * @param {string} name - Name of the parameter\r\n         * @param {string} value - Value of the parameter\r\n         */\r\n        function CustomParameter(name, value) {\r\n            this.name = name;\r\n            this.value = value;\r\n            if (!name) {\r\n                throw Error(\"Name of the custom parameter is not specified\");\r\n            }\r\n        }\r\n        CustomParameter.prototype.getParam = function () {\r\n            return this.name;\r\n        };\r\n        CustomParameter.prototype.getParamValue = function () {\r\n            return this.value;\r\n        };\r\n        return CustomParameter;\r\n    }());\r\n    Parameters.CustomParameter = CustomParameter;\r\n})(Parameters = exports.Parameters || (exports.Parameters = {}));\r\n//# sourceMappingURL=parameters.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=url.models.js.map","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","import { HttpService } from '@kentico/kontent-core';\r\n\r\nimport { IDeliveryClientConfig } from '../config';\r\nimport { ContentItem } from '../models';\r\nimport { getParserAdapter } from '../parser/parser-adapter';\r\nimport {\r\n    ElementQuery,\r\n    ItemsFeedQuery,\r\n    MultipleItemQuery,\r\n    MultipleTypeQuery,\r\n    SingleItemQuery,\r\n    SingleTypeQuery,\r\n    TaxonomiesQuery,\r\n    TaxonomyQuery,\r\n    ItemsFeedQueryAll,\r\n} from '../query';\r\nimport { sdkInfo } from '../sdk-info.generated';\r\nimport { IMappingService, MappingService, QueryService } from '../services';\r\nimport { IDeliveryClient } from './idelivery-client.interface';\r\n\r\nexport class DeliveryClient implements IDeliveryClient {\r\n    private queryService: QueryService;\r\n    public mappingService: IMappingService;\r\n\r\n    /**\r\n     * Delivery client used to fetch data from Kentico Kontent\r\n     * @constructor\r\n     * @param {IDeliveryClientConfig} config - The client configuration\r\n     */\r\n    constructor(protected config: IDeliveryClientConfig) {\r\n        if (!config) {\r\n            throw Error(`Delivery client configuration is not set`);\r\n        }\r\n\r\n        this.mappingService = new MappingService(config, config.richTextParserAdapter ? config.richTextParserAdapter : getParserAdapter());\r\n        this.queryService = new QueryService(\r\n            config,\r\n            config.httpService\r\n                ? config.httpService\r\n                : new HttpService({\r\n                      requestInterceptor:\r\n                          config.httpInterceptors && config.httpInterceptors.requestInterceptor\r\n                              ? config.httpInterceptors.requestInterceptor\r\n                              : undefined,\r\n                      responseInterceptor:\r\n                          config.httpInterceptors && config.httpInterceptors.responseInterceptor\r\n                              ? config.httpInterceptors.responseInterceptor\r\n                              : undefined\r\n                  }),\r\n            {\r\n                host: sdkInfo.host,\r\n                name: sdkInfo.name,\r\n                version: sdkInfo.version\r\n            },\r\n            this.mappingService\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets query for multiple types\r\n     */\r\n    types(): MultipleTypeQuery {\r\n        return new MultipleTypeQuery(this.config, this.queryService);\r\n    }\r\n\r\n    /**\r\n     * Gets query for single type\r\n     * @param {string} typeCodename - Codename of the type to fetch\r\n     */\r\n    type(typeCodename: string): SingleTypeQuery {\r\n        return new SingleTypeQuery(this.config, this.queryService, typeCodename);\r\n    }\r\n\r\n    /**\r\n     * Gets query for multiple items\r\n     */\r\n    items<TItem extends ContentItem>(): MultipleItemQuery<TItem> {\r\n        return new MultipleItemQuery<TItem>(this.config, this.queryService);\r\n    }\r\n\r\n    /**\r\n     * Gets query for single item\r\n     * @param {string} codename - Codename of item to fetch\r\n     */\r\n    item<TItem extends ContentItem>(codename: string): SingleItemQuery<TItem> {\r\n        return new SingleItemQuery<TItem>(this.config, this.queryService, codename);\r\n    }\r\n\r\n    /**\r\n     * Gets query for items feed. Executes single HTTP request only. Might not get all items from your Kontent project.\r\n     */\r\n    itemsFeed<TItem extends ContentItem>(): ItemsFeedQuery<TItem> {\r\n        return new ItemsFeedQuery<TItem>(this.config, this.queryService);\r\n    }\r\n\r\n    /**\r\n     * Gets query for all items feed. This may execute multiple HTTP calls depending on number of items in your Kontent project.\r\n     */\r\n    itemsFeedAll<TItem extends ContentItem>(): ItemsFeedQueryAll<TItem> {\r\n        return new ItemsFeedQueryAll<TItem>(this.config, this.queryService);\r\n    }\r\n\r\n    /**\r\n     * Gets query for single taxonomy\r\n     * @param {string} codename - Codename of taxonomy to fetch\r\n     */\r\n    taxonomy(codename: string): TaxonomyQuery {\r\n        return new TaxonomyQuery(this.config, this.queryService, codename);\r\n    }\r\n\r\n    /**\r\n     * Gets query for multiple taxonomies\r\n     */\r\n    taxonomies(): TaxonomiesQuery {\r\n        return new TaxonomiesQuery(this.config, this.queryService);\r\n    }\r\n\r\n    /**\r\n     * Gets query for an element within a type\r\n     * @param {string} typeCodename - Codename of the type\r\n     * @param {string} elementCodename - Codename of the element\r\n     */\r\n    element(typeCodename: string, elementCodename: string): ElementQuery {\r\n        return new ElementQuery(this.config, this.queryService, typeCodename, elementCodename);\r\n    }\r\n}\r\n","export * from './delivery-client';\r\nexport * from './idelivery-client.interface';\r\n","import { ElementCollisionResolver } from '../models/item/item-resolvers';\r\n\r\nexport const defaultCollissionResolver: ElementCollisionResolver = (elementName) => `_${elementName}`;\r\n","export * from './delivery-configs';\r\nexport * from './default-collision-resolver';\r\n","export * from './shared/ipagination.interface';\r\nexport * from './shared/elements.interface';\r\nexport * from './element-contracts';\r\nexport * from './item-contracts';\r\nexport * from './taxonomy-contracts';\r\nexport * from './type-contracts';\r\n","import 'reflect-metadata';\r\n\r\nexport namespace ElementDecorators {\r\n  const codenameMetadataKey = Symbol('codename');\r\n\r\n  const generateKey = (name: string) => `${codenameMetadataKey.toString()}:${name}`;\r\n\r\n  /**\r\n   * Get the metadata entry saved by the decorator\r\n   * @param target - object instance\r\n   * @param elementName - Element name (code name from Kentico Kontent)\r\n   */\r\n  export function getPropertyName(target: any, elementName: string): any | undefined {\r\n    return Reflect.getMetadata(generateKey(elementName), target);\r\n  }\r\n\r\n  /**\r\n   * Decorator - creates metadata entry for the @target - Value is the property name.\r\n   * This will then be retrieved when resolving the element name\r\n   * @param value - Element code name\r\n   */\r\n  export function codename(value: string): (target: any, propertyKey: string) => void {\r\n    return function (target: any, propertyKey: string) {\r\n      Reflect.defineMetadata(generateKey(value), propertyKey, target);\r\n    };\r\n  }\r\n}\r\n","import { ElementContracts, ItemContracts } from '../data-contracts';\r\nimport { ElementType } from './element-type';\r\n\r\nexport namespace ElementModels {\r\n\r\n    export interface IRichTextResolverData {\r\n        html: string;\r\n        linkedItemCodenames: string[];\r\n        componentCodenames: string[];\r\n    }\r\n\r\n    export interface IElementWrapper {\r\n        propertyName: string;\r\n        contentItemSystem: ItemContracts.IContentItemSystemAttributesContract;\r\n        rawElement: ElementContracts.IElementContract;\r\n    }\r\n\r\n    export interface IElement<TValue> {\r\n        name: string;\r\n        type: ElementType;\r\n        value: TValue;\r\n        rawData: ElementContracts.IElementContract;\r\n    }\r\n\r\n    export class AssetModel {\r\n\r\n        /**\r\n         * Name of the asset\r\n         */\r\n        public name: string;\r\n\r\n        /**\r\n         * Type of the asset\r\n         */\r\n        public type: string;\r\n\r\n        /**\r\n         * Size of the asset\r\n         */\r\n        public size: number;\r\n\r\n        /**\r\n         * Description of the asset\r\n         */\r\n        public description?: string;\r\n\r\n        /**\r\n         * Url of the asset\r\n         */\r\n        public url: string;\r\n\r\n        /**\r\n         * Width in pixels for image assets\r\n         */\r\n        public width?: number;\r\n\r\n        /**\r\n         * Height in pixels for image assets\r\n         */\r\n        public height?: number;\r\n\r\n        /**\r\n        * Represents Assets element\r\n        * @constructor\r\n        * @param {ElementContracts.IAssetContract} rawAsset - Raw asset contract\r\n        */\r\n        constructor(\r\n            public contract: ElementContracts.IAssetContract\r\n        ) {\r\n            this.name = contract.name;\r\n            this.type = contract.type;\r\n            this.size = contract.size,\r\n            this.description = contract.description,\r\n            this.url = contract.url;\r\n            this.width = contract.width;\r\n            this.height = contract.height;\r\n         }\r\n    }\r\n\r\n    export class MultipleChoiceOption {\r\n\r\n        /**\r\n        * Represents Kentico Kontent's multiple choice option\r\n        * @constructor\r\n        * @param {string} name - Name of the option\r\n        * @param {string} codename - Codename of the option\r\n        */\r\n        constructor(\r\n            public name: string,\r\n            public codename: string\r\n        ) { }\r\n    }\r\n\r\n    export class TaxonomyTerm {\r\n\r\n        /**\r\n       * Represents taxonomy term\r\n       * @constructor\r\n       * @param {string} name - Name of the taxonomy option\r\n       * @param {string} codename - Codename of the option\r\n       */\r\n        constructor(\r\n            public name: string,\r\n            public codename: string\r\n        ) { }\r\n    }\r\n}\r\n\r\n\r\n","/**\r\n* Represents codename of Kentico Kontent element types\r\n*/\r\nexport enum ElementType {\r\n    Text = 'text',\r\n    Number = 'number',\r\n    ModularContent = 'modular_content',\r\n    Asset = 'asset',\r\n    DateTime = 'date_time',\r\n    RichText = 'rich_text',\r\n    MultipleChoice = 'multiple_choice',\r\n    UrlSlug = 'url_slug',\r\n    Taxonomy = 'taxonomy',\r\n    Custom = 'custom',\r\n    Unknown = 'unknown'\r\n}\r\n","import { Link, RichTextImage } from '..';\r\nimport { ElementContracts } from '../data-contracts';\r\nimport { IContentItem } from '../models';\r\nimport { ElementModels } from './element-models';\r\nimport { ElementType } from './element-type';\r\n\r\nexport namespace Elements {\r\n    export abstract class BaseElement<TValue> implements ElementModels.IElement<TValue> {\r\n        /**\r\n         * Element name\r\n         */\r\n        public name: string;\r\n\r\n        /**\r\n         * Element type\r\n         */\r\n        public type: ElementType;\r\n\r\n        /**\r\n         * Raw element value (from JSON response)\r\n         */\r\n        public rawData: ElementContracts.IElementContract;\r\n\r\n        /**\r\n         * Mapped value of element.\r\n         * For example, value for number elements are converted to number javascript type\r\n         */\r\n        public abstract value: TValue;\r\n\r\n        constructor(data: { elementWrapper: ElementModels.IElementWrapper; elementType: ElementType }) {\r\n            this.rawData = data.elementWrapper.rawElement;\r\n            this.name = data.elementWrapper.rawElement.name;\r\n            this.type = data.elementType;\r\n        }\r\n    }\r\n\r\n    export class TextElement extends BaseElement<string> {\r\n        /**\r\n         * Text value\r\n         */\r\n        public value: string;\r\n\r\n        /**\r\n         * Represents text element of Kentico Kontent item\r\n         * @param {ElementModels.IElementWrapper} elementWrapper - Element data\r\n         */\r\n        constructor(elementWrapper: ElementModels.IElementWrapper) {\r\n            super({\r\n                elementType: ElementType.Text,\r\n                elementWrapper: elementWrapper\r\n            });\r\n\r\n            this.value = elementWrapper.rawElement.value;\r\n        }\r\n    }\r\n\r\n    export class LinkedItemsElement<TItem = IContentItem> extends BaseElement<TItem[]> {\r\n        /**\r\n         * Mapped linked items - contains only those items which are present in 'modular_content' section\r\n         * of the response which depends on the 'depth' of the query request.\r\n         * Codenames of all linked items are stored in 'itemCodenames' property.\r\n         */\r\n        public value: TItem[];\r\n\r\n        public itemCodenames: string[];\r\n\r\n        /**\r\n         * Represents text element of Kentico Kontent item\r\n         * @param {ElementModels.IElementWrapper} elementWrapper - Element data\r\n         * @param {IContentItem} mappedLinkedItems - Array of mapped linked items\r\n         */\r\n        constructor(elementWrapper: ElementModels.IElementWrapper, mappedLinkedItems: TItem[]) {\r\n            super({\r\n                elementType: ElementType.ModularContent,\r\n                elementWrapper: elementWrapper\r\n            });\r\n\r\n            this.itemCodenames = elementWrapper.rawElement.value;\r\n            this.value = mappedLinkedItems;\r\n        }\r\n    }\r\n\r\n    export class MultipleChoiceElement extends BaseElement<ElementModels.MultipleChoiceOption[]> {\r\n        /**\r\n         * Multiple choice options\r\n         */\r\n        public value: ElementModels.MultipleChoiceOption[] = [];\r\n\r\n        /**\r\n         * Represents multiple choice element of Kentico Kontent item\r\n         * @constructor\r\n         * @param {ElementModels.IElementWrapper} elementWrapper - Element data\r\n         */\r\n        constructor(elementWrapper: ElementModels.IElementWrapper) {\r\n            super({\r\n                elementType: ElementType.MultipleChoice,\r\n                elementWrapper: elementWrapper\r\n            });\r\n\r\n            if (elementWrapper.rawElement.value && Array.isArray(elementWrapper.rawElement.value)) {\r\n                for (const valueItem of elementWrapper.rawElement.value) {\r\n                    const rawOption = valueItem as ElementContracts.IMultipleChoiceOptionContract;\r\n                    if (rawOption && rawOption.name && rawOption.codename) {\r\n                        this.value.push(new ElementModels.MultipleChoiceOption(rawOption.name, rawOption.codename));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    export class DateTimeElement extends BaseElement<Date | null> {\r\n        /**\r\n         * Date time value\r\n         */\r\n        public value: Date | null;\r\n\r\n        /**\r\n         * Type of the element\r\n         */\r\n        public type: ElementType = ElementType.DateTime;\r\n\r\n        /**\r\n         * Represents date time element of Kentico Kontent item\r\n         * @constructor\r\n         * @param {ElementModels.IElementWrapper} elementWrapper - Element data\r\n         */\r\n        constructor(elementWrapper: ElementModels.IElementWrapper) {\r\n            super({\r\n                elementType: ElementType.DateTime,\r\n                elementWrapper: elementWrapper\r\n            });\r\n            if (elementWrapper.rawElement.value) {\r\n                this.value = new Date(elementWrapper.rawElement.value);\r\n            } else {\r\n                this.value = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    export class RichTextElement extends BaseElement<string> {\r\n        /**\r\n         * Function that is responsible for getting resolved HTML of the element\r\n         */\r\n        private resolveRichTextFunc: () => ElementModels.IRichTextResolverData;\r\n\r\n        /**\r\n         * Resolved rich text element result\r\n         */\r\n        private resolvedData?: ElementModels.IRichTextResolverData;\r\n\r\n        /**\r\n         * Unresolved html value of rich text element\r\n         */\r\n        public value: string;\r\n\r\n        /**\r\n         * Type of the element\r\n         */\r\n        public type: ElementType = ElementType.RichText;\r\n\r\n        /**\r\n         * Links\r\n         */\r\n        public links: Link[];\r\n\r\n        /**\r\n         * Images included within rich text element\r\n         */\r\n        public images: RichTextImage[];\r\n\r\n        /**\r\n         * Array of linked item codenames\r\n         */\r\n        public linkedItemCodenames: string[];\r\n\r\n        /**\r\n         * Represents rich text element of Kentico Kontent item\r\n         * @constructor\r\n         * @param {ElementModels.IElementWrapper} elementWrapper - Element data\r\n         * @param {string[]} linkedItemCodenames - Array of linked codenames\r\n         */\r\n        constructor(\r\n            elementWrapper: ElementModels.IElementWrapper,\r\n            linkedItemCodenames: string[],\r\n            data: {\r\n                resolveRichTextFunc: () => ElementModels.IRichTextResolverData;\r\n                links: Link[];\r\n                images: RichTextImage[];\r\n            }\r\n        ) {\r\n            super({\r\n                elementType: ElementType.RichText,\r\n                elementWrapper: elementWrapper\r\n            });\r\n\r\n            this.linkedItemCodenames = linkedItemCodenames;\r\n            this.resolveRichTextFunc = data.resolveRichTextFunc;\r\n            this.links = data.links;\r\n            this.images = data.images;\r\n\r\n            this.value = elementWrapper.rawElement.value;\r\n        }\r\n\r\n        resolveData(): ElementModels.IRichTextResolverData {\r\n            if (this.resolvedData) {\r\n                return this.resolvedData;\r\n            }\r\n            this.resolvedData = this.resolveRichTextFunc();\r\n\r\n            return this.resolvedData;\r\n        }\r\n\r\n        resolveHtml(): string {\r\n            if (this.resolvedData) {\r\n                return this.resolvedData.html;\r\n            }\r\n\r\n            this.resolvedData = this.resolveRichTextFunc();\r\n\r\n            return this.resolvedData.html;\r\n        }\r\n    }\r\n\r\n    export class NumberElement extends BaseElement<number | null> {\r\n        /**\r\n         * Number value of this element\r\n         */\r\n        public value: number | null;\r\n\r\n        /**\r\n         * Represents number element of Kentico Kontent item\r\n         * @constructor\r\n         * @param {ElementModels.IElementWrapper} elementWrapper - Element data\r\n         */\r\n        constructor(elementWrapper: ElementModels.IElementWrapper) {\r\n            super({\r\n                elementType: ElementType.Number,\r\n                elementWrapper: elementWrapper\r\n            });\r\n            if (elementWrapper.rawElement.value === 0) {\r\n                this.value = 0;\r\n            } else if (elementWrapper.rawElement.value) {\r\n                this.value = +elementWrapper.rawElement.value;\r\n            } else {\r\n                this.value = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    export class AssetsElement extends BaseElement<ElementModels.AssetModel[]> {\r\n        /**\r\n         * List of assets used in this element\r\n         */\r\n        public value: ElementModels.AssetModel[] = [];\r\n\r\n        /**\r\n         * Represents asset element of Kentico Kontent item\r\n         * @constructor\r\n         * @param {ElementModels.IElementWrapper} elementWrapper - Element data\r\n         */\r\n        constructor(elementWrapper: ElementModels.IElementWrapper) {\r\n            super({\r\n                elementType: ElementType.Asset,\r\n                elementWrapper: elementWrapper\r\n            });\r\n            if (elementWrapper.rawElement.value && Array.isArray(elementWrapper.rawElement.value)) {\r\n                const rawAssets = elementWrapper.rawElement.value as ElementContracts.IAssetContract[];\r\n                for (const rawAsset of rawAssets) {\r\n                    this.value.push(new ElementModels.AssetModel(rawAsset));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    export class UrlSlugElement extends BaseElement<string> {\r\n        private resolvedUrl?: string;\r\n\r\n        private resolveLinkFunc: () => string;\r\n\r\n        public value: string;\r\n\r\n        /**\r\n         * Represents URL slug element of Kentico Kontent item\r\n         * @constructor\r\n         * @param {ElementModels.IElementWrapper} elementWrapper - Element data\r\n         */\r\n        constructor(\r\n            elementWrapper: ElementModels.IElementWrapper,\r\n            data: {\r\n                /**\r\n                 * Callback for resolving link\r\n                 */\r\n                resolveLinkFunc: () => string;\r\n            }\r\n        ) {\r\n            super({\r\n                elementType: ElementType.UrlSlug,\r\n                elementWrapper: elementWrapper\r\n            });\r\n\r\n            this.value = elementWrapper.rawElement.value;\r\n            this.resolveLinkFunc = data.resolveLinkFunc;\r\n        }\r\n\r\n        resolveUrl(): string {\r\n            if (this.resolvedUrl) {\r\n                return this.resolvedUrl;\r\n            }\r\n\r\n            this.resolvedUrl = this.resolveLinkFunc();\r\n\r\n            return this.resolvedUrl;\r\n        }\r\n    }\r\n\r\n    export class TaxonomyElement extends BaseElement<ElementModels.TaxonomyTerm[]> {\r\n        /**\r\n         * List of assigned taxonomy terms\r\n         */\r\n        public value: ElementModels.TaxonomyTerm[] = [];\r\n\r\n        /**\r\n         * Taxonomy group\r\n         */\r\n        public taxonomyGroup: string;\r\n\r\n        /**\r\n         * Represents number element of Kentico Kontent item\r\n         * @constructor\r\n         * @param {ElementModels.IElementWrapper} elementWrapper - Element data\r\n         */\r\n        constructor(elementWrapper: ElementModels.IElementWrapper) {\r\n            super({\r\n                elementType: ElementType.Taxonomy,\r\n                elementWrapper: elementWrapper\r\n            });\r\n\r\n            if (elementWrapper.rawElement.taxonomy_group) {\r\n                this.taxonomyGroup = elementWrapper.rawElement.taxonomy_group;\r\n            } else {\r\n                console.warn(\r\n                    `Taxonomy group for element '${elementWrapper.rawElement.name}' is invalid. Assigning empty string`\r\n                );\r\n                this.taxonomyGroup = '';\r\n            }\r\n\r\n            if (elementWrapper.rawElement.value && Array.isArray(elementWrapper.rawElement.value)) {\r\n                const rawTerms = elementWrapper.rawElement.value as ElementContracts.ITaxonomyTerm[];\r\n                for (const rawTerm of rawTerms) {\r\n                    this.value.push(new ElementModels.TaxonomyTerm(rawTerm.name, rawTerm.codename));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    export class UnknownElement extends BaseElement<any> {\r\n        public value: any;\r\n\r\n        constructor(elementWrapper: ElementModels.IElementWrapper) {\r\n            super({\r\n                elementType: ElementType.Unknown,\r\n                elementWrapper: elementWrapper\r\n            });\r\n\r\n            this.value = elementWrapper.rawElement.value;\r\n        }\r\n    }\r\n\r\n    export abstract class CustomElement extends BaseElement<string | null> {\r\n        public value: string | null;\r\n\r\n        constructor(elementWrapper: ElementModels.IElementWrapper) {\r\n            super({\r\n                elementType: ElementType.Custom,\r\n                elementWrapper: elementWrapper\r\n            });\r\n\r\n            this.value = elementWrapper.rawElement.value;\r\n        }\r\n    }\r\n\r\n    export class DefaultCustomElement extends BaseElement<string | null> {\r\n        /**\r\n         * Resolved value of custom element\r\n         */\r\n        public value: string | null;\r\n\r\n        /**\r\n         * Represents base custom element\r\n         * @constructor\r\n         * @param {ElementModels.IElementWrapper} elementWrapper - Element data\r\n         */\r\n        constructor(elementWrapper: ElementModels.IElementWrapper) {\r\n            super({\r\n                elementType: ElementType.Custom,\r\n                elementWrapper: elementWrapper\r\n            });\r\n            this.value = elementWrapper.rawElement.value;\r\n        }\r\n    }\r\n}\r\n","export * from './element-decorators';\r\nexport * from './element-models';\r\nexport * from './element-type';\r\nexport * from './elements';\r\nexport * from './element-resolver';\r\n","import { IQueryParameter } from '@kentico/kontent-core';\r\n\r\nimport { Parameters } from '../models';\r\nimport { ImageCompressionEnum, ImageFitModeEnum, ImageFormatEnum } from './image.models';\r\n\r\nexport class ImageUrlBuilder {\r\n  private queryParams: IQueryParameter[] = [];\r\n  private readonly automaticFormatValue: string = 'format';\r\n\r\n  constructor(\r\n    /** Image url */\r\n    public imageUrl: string\r\n  ) { }\r\n\r\n  /**\r\n   * Used to add custom parameters to existing query string\r\n   * @param param Parameter (may or may not include value)\r\n   */\r\n  withCustomParam(param: string): this {\r\n    this.queryParams.push(\r\n      new Parameters.CustomParameter(param)\r\n    );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * The dpr transformation is used to serve correctly sized images for devices that expose a device pixel ratio.\r\n   * @param dpr A required DPR value.\r\n   */\r\n  withDpr(dpr: number): this {\r\n    this.queryParams.push(\r\n      new Parameters.QueryParameter('dpr', dpr.toString())\r\n    );\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Applies the crop transformation that removes pixels from an image outside the specified rectangle.\r\n   * @param x Rectangle offset on the X-axis.\r\n   * @param y Rectangle offset on the Y-axis.\r\n   * @param width Rectangle width.\r\n   * @param height Rectangle height.\r\n   */\r\n  withRectangleCrop(x: number, y: number, width: number, height: number): this {\r\n    this.queryParams.push(\r\n      new Parameters.QueryParameter('rect', [x, y, width, height].join(','))\r\n    );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Applies the crop transformation centered on the specified point.\r\n   * @param x Focal point X coordinate.\r\n   * @param y Focal point Y coordinate.\r\n   * @param z Zoom of the transformation.\r\n   */\r\n  withFocalPointCrop(x: number, y: number, z: number): this {\r\n    this.withFitMode(ImageFitModeEnum.Crop);\r\n\r\n    this.queryParams.push(new Parameters.QueryParameter('crop', 'focalpoint'));\r\n    this.queryParams.push(new Parameters.QueryParameter('fp-x', x.toString()));\r\n    this.queryParams.push(new Parameters.QueryParameter('fp-y', y.toString()));\r\n    this.queryParams.push(new Parameters.QueryParameter('fp-z', z.toString()));\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Enables WebP image support.\r\n   * @param compression Specifies the lossy or lossless compression.\r\n   */\r\n  withAutomaticFormat(backupFormat?: ImageFormatEnum): this {\r\n    this.queryParams.push(\r\n      new Parameters.QueryParameter('auto', this.automaticFormatValue)\r\n    );\r\n\r\n    if (backupFormat) {\r\n      this.withFormat(backupFormat);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * The fit transformation controls how the output image is fit to its target dimensions after resizing.\r\n   * @param fitMode Specifies the mode for the transformation.\r\n   */\r\n  withFitMode(fitMode: ImageFitModeEnum): this {\r\n    this.queryParams.push(new Parameters.QueryParameter('fit', fitMode));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Specifies the compression mode for the WebP image transformations.\r\n   * @param compression Specifies the lossy or lossless compression.\r\n   */\r\n  withCompression(compression: ImageCompressionEnum): this {\r\n    this.queryParams.push(\r\n      new Parameters.QueryParameter(\r\n        'lossless',\r\n        compression === ImageCompressionEnum.Lossless ? 'true' : 'false'\r\n      )\r\n    );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Applies the quality parameter that enables control over the compression level for lossy file-formatted images.\r\n   * @param quality The required quality of the image.\r\n   */\r\n  withQuality(quality: number): this {\r\n    this.queryParams.push(\r\n      new Parameters.QueryParameter('q', quality.toString())\r\n    );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * The format transformation enables the source image to be converted (a.k.a., \"transcoded\") from\r\n   * one encoded format to another. This is very useful when the source image has been saved in a sub-optimal\r\n   * file format that hinders performance.\r\n   * @param format Target image file type.\r\n   */\r\n  withFormat(format: ImageFormatEnum): this {\r\n    this.queryParams.push(\r\n      new Parameters.QueryParameter('fm', format)\r\n    );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * The height transformation enables dynamic height resizing based on pixels and percent values.\r\n   * @param height A required image height.\r\n   */\r\n  withHeight(height: number): this {\r\n    this.queryParams.push(\r\n      new Parameters.QueryParameter('h', height.toString())\r\n    );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * The width transformation enables dynamic width resizing based on pixels and percent values.\r\n   * @param width A required image width.\r\n   */\r\n  withWidth(width: number): this {\r\n    this.queryParams.push(new Parameters.QueryParameter('w', width.toString()));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Gets params applied to image\r\n   */\r\n  getParams(): IQueryParameter[] {\r\n    return this.queryParams;\r\n  }\r\n\r\n  /**\r\n   * Gets query string part of the image URL\r\n   */\r\n  getQueryString(): string {\r\n    let query: string = '';\r\n    this.queryParams.forEach(filter => {\r\n      if (query.indexOf('?') > -1) {\r\n        query = query + '&' + filter.getParam();\r\n      } else {\r\n        query = query + '?' + filter.getParam();\r\n      }\r\n    });\r\n\r\n    return query;\r\n  }\r\n\r\n  /**\r\n   * Gets full transformed url to image with parameters\r\n   */\r\n  getUrl(): string {\r\n    return this.imageUrl + this.getQueryString();\r\n  }\r\n}\r\n","export enum ImageFitModeEnum {\r\n    Clip = 'clip',\r\n    Scale = 'scale',\r\n    Crop = 'crop'\r\n}\r\n\r\nexport enum ImageFormatEnum {\r\n    Gif = 'gif',\r\n    Png = 'png',\r\n    Png8 = 'png8',\r\n    Jpg = 'jpg',\r\n    Pjpg = 'pjpg',\r\n    Webp = 'webp'\r\n}\r\n\r\nexport enum ImageCompressionEnum {\r\n    /**\r\n     * Allows the original data to be perfectly reconstructed from the compressed data.\r\n     */\r\n    Lossless,\r\n    /**\r\n     * Irreversible compression where partial data are discarded.\r\n     */\r\n    Lossy\r\n}\r\n","export * from './image-url-builder';\r\nexport * from './image.models';\r\n","// Public API\r\nexport * from './client';\r\nexport * from './sdk-info.generated';\r\nexport * from './config';\r\nexport * from './data-contracts';\r\nexport * from './elements';\r\nexport * from './parser';\r\nexport * from './resolvers';\r\nexport * from './services';\r\nexport * from './mappers';\r\nexport * from './query';\r\nexport * from './models';\r\nexport * from './images';\r\n\r\n","import { enumHelper } from '@kentico/kontent-core';\r\n\r\nimport { defaultCollissionResolver, IDeliveryClientConfig } from '../config';\r\nimport { ElementContracts, ItemContracts } from '../data-contracts';\r\nimport { ElementDecorators, ElementModels, Elements, ElementType } from '../elements';\r\nimport {\r\n    ElementCollisionResolver,\r\n    IContentItem,\r\n    IContentItemsContainer,\r\n    IItemQueryConfig,\r\n    IMapElementsResult,\r\n    ItemUrlSlugResolver,\r\n    Link,\r\n    RichTextImage,\r\n} from '../models';\r\nimport { IRichTextHtmlParser } from '../parser/parse-models';\r\nimport { richTextResolver, stronglyTypedResolver, urlSlugResolver } from '../resolvers';\r\n\r\nexport class ElementMapper {\r\n    private readonly defaultLinkedItemWrapperTag: string = 'p';\r\n    private readonly defaultLinkedItemWrapperClasses: string[] = ['kc-linked-item-wrapper'];\r\n\r\n    constructor(\r\n        private readonly config: IDeliveryClientConfig,\r\n        private readonly richTextHtmlParser: IRichTextHtmlParser\r\n    ) {}\r\n\r\n    /**\r\n     * Maps all element in given content item and returns strongly typed content item based on the resolver specified\r\n     * in DeliveryClientConfig\r\n     */\r\n    mapElements<TItem extends IContentItem>(data: {\r\n        item: ItemContracts.IContentItemContract;\r\n        queryConfig: IItemQueryConfig;\r\n        processedItems: IContentItemsContainer;\r\n        processingStartedForCodenames: string[];\r\n        preparedItems: IContentItemsContainer;\r\n    }): IMapElementsResult<TItem> | undefined {\r\n        // return processed item if possible (to avoid infinite recursion)\r\n        const processedItem = data.processedItems[data.item.system.codename];\r\n        if (processedItem) {\r\n            // item was already resolved, return it\r\n            return {\r\n                item: processedItem as TItem,\r\n                processedItems: data.processedItems,\r\n                preparedItems: data.preparedItems,\r\n                processingStartedForCodenames: data.processingStartedForCodenames\r\n            };\r\n        }\r\n\r\n        const elementCodenames = Object.getOwnPropertyNames(data.item.elements);\r\n        const itemInstance = data.preparedItems[data.item.system.codename] as TItem | undefined;\r\n\r\n        if (!itemInstance) {\r\n            // item is not present in response, no need to do any mapping\r\n            return undefined;\r\n        }\r\n\r\n        elementCodenames.forEach(elementCodename => {\r\n            const elementMap = this.resolveElementMap(itemInstance, elementCodename);\r\n            const elementWrapper: ElementModels.IElementWrapper = {\r\n                contentItemSystem: data.item.system,\r\n                rawElement: data.item.elements[elementCodename],\r\n                propertyName: elementMap.resolvedName\r\n            };\r\n            if (elementMap.shouldMapElement) {\r\n                const mappedElement = this.mapElement({\r\n                    elementWrapper: elementWrapper,\r\n                    item: itemInstance,\r\n                    preparedItems: data.preparedItems,\r\n                    processingStartedForCodenames: data.processingStartedForCodenames,\r\n                    processedItems: data.processedItems,\r\n                    queryConfig: data.queryConfig\r\n                });\r\n                // set mapped element to item instance\r\n                (itemInstance as IContentItem)[elementMap.resolvedName] = mappedElement;\r\n            }\r\n        });\r\n\r\n        return {\r\n            item: itemInstance,\r\n            processedItems: data.processedItems,\r\n            preparedItems: data.preparedItems,\r\n            processingStartedForCodenames: data.processingStartedForCodenames\r\n        };\r\n    }\r\n\r\n    private mapElement(data: {\r\n        elementWrapper: ElementModels.IElementWrapper;\r\n        item: IContentItem;\r\n        queryConfig: IItemQueryConfig;\r\n        processedItems: IContentItemsContainer;\r\n        processingStartedForCodenames: string[];\r\n        preparedItems: IContentItemsContainer;\r\n    }): ElementModels.IElement<any> {\r\n        const elementType = enumHelper.getEnumFromValue<ElementType>(ElementType, data.elementWrapper.rawElement.type);\r\n        if (elementType) {\r\n            if (elementType === ElementType.ModularContent) {\r\n                return this.mapLinkedItemsElement({\r\n                    elementWrapper: data.elementWrapper,\r\n                    preparedItems: data.preparedItems,\r\n                    processingStartedForCodenames: data.processingStartedForCodenames,\r\n                    processedItems: data.processedItems,\r\n                    queryConfig: data.queryConfig\r\n                });\r\n            }\r\n\r\n            if (elementType === ElementType.Text) {\r\n                return this.mapTextElement(data.elementWrapper);\r\n            }\r\n            if (elementType === ElementType.Asset) {\r\n                return this.mapAssetsElement(data.elementWrapper);\r\n            }\r\n\r\n            if (elementType === ElementType.Number) {\r\n                return this.mapNumberElement(data.elementWrapper);\r\n            }\r\n            if (elementType === ElementType.MultipleChoice) {\r\n                return this.mapMultipleChoiceElement(data.elementWrapper);\r\n            }\r\n\r\n            if (elementType === ElementType.DateTime) {\r\n                return this.mapDateTimeElement(data.elementWrapper);\r\n            }\r\n\r\n            if (elementType === ElementType.RichText) {\r\n                return this.mapRichTextElement(\r\n                    data.item,\r\n                    data.elementWrapper,\r\n                    data.queryConfig,\r\n                    data.processedItems,\r\n                    data.processingStartedForCodenames,\r\n                    data.preparedItems\r\n                );\r\n            }\r\n\r\n            if (elementType === ElementType.UrlSlug) {\r\n                return this.mapUrlSlugElement(data.elementWrapper, data.item, data.queryConfig);\r\n            }\r\n\r\n            if (elementType === ElementType.Taxonomy) {\r\n                return this.mapTaxonomyElement(data.elementWrapper);\r\n            }\r\n\r\n            if (elementType === ElementType.Custom) {\r\n                return this.mapCustomElement(data.elementWrapper);\r\n            }\r\n        }\r\n        console.warn(\r\n            `Could not map element '${data.elementWrapper.rawElement.name}' of type '${data.elementWrapper.rawElement.type}'. Returning unknown element instead.`\r\n        );\r\n        return this.mapUnknowElement(data.elementWrapper);\r\n    }\r\n\r\n    private mapRichTextElement(\r\n        item: IContentItem,\r\n        elementWrapper: ElementModels.IElementWrapper,\r\n        queryConfig: IItemQueryConfig,\r\n        processedItems: IContentItemsContainer,\r\n        processingStartedForCodenames: string[],\r\n        preparedItems: IContentItemsContainer\r\n    ): Elements.RichTextElement {\r\n        // get all linked items nested in rich text\r\n        const richTextLinkedItems: IContentItem[] = [];\r\n\r\n        const rawElement = elementWrapper.rawElement as ElementContracts.IRichTextElementContract;\r\n\r\n        if (rawElement.modular_content) {\r\n            if (Array.isArray(rawElement.modular_content)) {\r\n                rawElement.modular_content.forEach(codename => {\r\n                    // get linked item and check if it exists (it might not be included in response due to 'Depth' parameter)\r\n                    const preparedItem = preparedItems[codename];\r\n\r\n                    // first try to get existing item\r\n                    const existingLinkedItem = this.getOrSaveLinkedItemForElement(\r\n                        codename,\r\n                        rawElement,\r\n                        queryConfig,\r\n                        processedItems,\r\n                        processingStartedForCodenames,\r\n                        preparedItems\r\n                    );\r\n\r\n                    if (existingLinkedItem) {\r\n                        // item was found, add it to linked items\r\n                        richTextLinkedItems.push(existingLinkedItem);\r\n                    } else {\r\n                        let throwErrorForMissingLinkedItems = false;\r\n\r\n                        // check if errors should be thrown for missing linked items\r\n                        if (\r\n                            queryConfig.throwErrorForMissingLinkedItems === false ||\r\n                            queryConfig.throwErrorForMissingLinkedItems === true\r\n                        ) {\r\n                            // variable is a boolean\r\n                            throwErrorForMissingLinkedItems = queryConfig.throwErrorForMissingLinkedItems;\r\n                        }\r\n\r\n                        // throw error if raw item is not available and errors are not skipped\r\n                        if (!preparedItem) {\r\n                            const msg = `Mapping RichTextElement element '${rawElement.name}' failed because referenced linked item with codename '${codename}' could not be found in Delivery response.\r\n                            Increasing 'depth' parameter may solve this issue as it will include nested items. Alternatively you may disable 'throwErrorForMissingLinkedItems' in your query`;\r\n\r\n                            if (throwErrorForMissingLinkedItems) {\r\n                                throw Error(msg);\r\n                            }\r\n                        }\r\n\r\n                        // item was not found or not yet resolved\r\n                        if (preparedItem) {\r\n                            const mappedLinkedItemResult = this.mapElements({\r\n                                item: preparedItem._raw,\r\n                                preparedItems: preparedItems,\r\n                                processingStartedForCodenames: processingStartedForCodenames,\r\n                                processedItems: processedItems,\r\n                                queryConfig: queryConfig\r\n                            });\r\n\r\n                            // add mapped linked item to result\r\n                            if (mappedLinkedItemResult) {\r\n                                richTextLinkedItems.push(mappedLinkedItemResult.item);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        // extract and map links & images\r\n        const links: Link[] = this.mapRichTextLinks(rawElement.links);\r\n        const images: RichTextImage[] = this.mapRichTextImages(rawElement.images);\r\n\r\n        return new Elements.RichTextElement(elementWrapper, rawElement.modular_content, {\r\n            links: links,\r\n            resolveRichTextFunc: () =>\r\n                richTextResolver.resolveData(item.system.codename, rawElement.value, elementWrapper.propertyName, {\r\n                    enableAdvancedLogging: this.config.isDeveloperMode ? this.config.isDeveloperMode : false,\r\n                    getGlobalUrlSlugResolver: type => this.getGlobalUrlSlugResolverForType(type),\r\n                    images: images,\r\n                    richTextHtmlParser: this.richTextHtmlParser,\r\n                    getLinkedItem: codename =>\r\n                        this.getOrSaveLinkedItemForElement(\r\n                            codename,\r\n                            rawElement,\r\n                            queryConfig,\r\n                            processedItems,\r\n                            processingStartedForCodenames,\r\n                            preparedItems\r\n                        ),\r\n                    links: links,\r\n                    queryConfig: queryConfig,\r\n                    linkedItemWrapperTag:\r\n                        this.config.linkedItemResolver && this.config.linkedItemResolver.linkedItemWrapperTag\r\n                            ? this.config.linkedItemResolver.linkedItemWrapperTag\r\n                            : this.defaultLinkedItemWrapperTag,\r\n                    linkedItemWrapperClasses:\r\n                        this.config.linkedItemResolver && this.config.linkedItemResolver.linkedItemWrapperClasses\r\n                            ? this.config.linkedItemResolver.linkedItemWrapperClasses\r\n                            : this.defaultLinkedItemWrapperClasses\r\n                }),\r\n            images: images\r\n        });\r\n    }\r\n\r\n    private mapDateTimeElement(elementWrapper: ElementModels.IElementWrapper): Elements.DateTimeElement {\r\n        return new Elements.DateTimeElement(elementWrapper);\r\n    }\r\n\r\n    private mapMultipleChoiceElement(elementWrapper: ElementModels.IElementWrapper): Elements.MultipleChoiceElement {\r\n        return new Elements.MultipleChoiceElement(elementWrapper);\r\n    }\r\n\r\n    private mapNumberElement(elementWrapper: ElementModels.IElementWrapper): Elements.NumberElement {\r\n        return new Elements.NumberElement(elementWrapper);\r\n    }\r\n\r\n    private mapTextElement(elementWrapper: ElementModels.IElementWrapper): Elements.TextElement {\r\n        return new Elements.TextElement(elementWrapper);\r\n    }\r\n\r\n    private mapAssetsElement(elementWrapper: ElementModels.IElementWrapper): Elements.AssetsElement {\r\n        return new Elements.AssetsElement(elementWrapper);\r\n    }\r\n\r\n    private mapTaxonomyElement(elementWrapper: ElementModels.IElementWrapper): Elements.TaxonomyElement {\r\n        return new Elements.TaxonomyElement(elementWrapper);\r\n    }\r\n\r\n    private mapUnknowElement(elementWrapper: ElementModels.IElementWrapper): Elements.UnknownElement {\r\n        return new Elements.UnknownElement(elementWrapper);\r\n    }\r\n\r\n    private mapCustomElement(\r\n        elementWrapper: ElementModels.IElementWrapper\r\n    ): Elements.DefaultCustomElement | ElementModels.IElement<string> {\r\n        // try to find element resolver\r\n        if (this.config.elementResolver) {\r\n            const customElementClass = this.config.elementResolver(elementWrapper);\r\n\r\n            if (customElementClass) {\r\n                return customElementClass;\r\n            }\r\n        }\r\n        return new Elements.DefaultCustomElement(elementWrapper);\r\n    }\r\n\r\n    private mapUrlSlugElement(\r\n        elementWrapper: ElementModels.IElementWrapper,\r\n        item: IContentItem,\r\n        queryConfig: IItemQueryConfig\r\n    ): Elements.UrlSlugElement {\r\n        const resolver = this.getUrlSlugResolverForElement(item, elementWrapper, queryConfig);\r\n        return new Elements.UrlSlugElement(elementWrapper, {\r\n            resolveLinkFunc: () =>\r\n                urlSlugResolver.resolveUrl({\r\n                    elementName: elementWrapper.propertyName,\r\n                    elementValue: elementWrapper.rawElement.value,\r\n                    item: item,\r\n                    enableAdvancedLogging: this.config.isDeveloperMode ? this.config.isDeveloperMode : false,\r\n                    resolver: resolver\r\n                }).url || ''\r\n        });\r\n    }\r\n\r\n    private mapLinkedItemsElement(data: {\r\n        elementWrapper: ElementModels.IElementWrapper;\r\n        queryConfig: IItemQueryConfig;\r\n        processedItems: IContentItemsContainer;\r\n        processingStartedForCodenames: string[];\r\n        preparedItems: IContentItemsContainer;\r\n    }): Elements.LinkedItemsElement<IContentItem> {\r\n        // prepare linked items\r\n        const linkedItems: IContentItem[] = [];\r\n\r\n        // value = array of item codenames\r\n        const linkedItemCodenames = data.elementWrapper.rawElement.value as string[];\r\n        linkedItemCodenames.forEach(codename => {\r\n            const linkedItem = this.getOrSaveLinkedItemForElement(\r\n                codename,\r\n                data.elementWrapper.rawElement,\r\n                data.queryConfig,\r\n                data.processedItems,\r\n                data.processingStartedForCodenames,\r\n                data.preparedItems\r\n            );\r\n            if (linkedItem) {\r\n                // add item to result\r\n                linkedItems.push(linkedItem);\r\n            } else {\r\n                // item was not found\r\n                if (this.config.isDeveloperMode) {\r\n                    // tslint:disable-next-line:max-line-length\r\n                    console.warn(\r\n                        `Linked item with codename '${codename}' in linked items element '${data.elementWrapper.rawElement.name}' of '${data.elementWrapper.rawElement.type}' type could not be found. If you require this item, consider increasing 'depth' of your query. This warning can be turned off by disabling 'enableAdvancedLogging' option.`\r\n                    );\r\n                }\r\n            }\r\n        });\r\n\r\n        return new Elements.LinkedItemsElement(data.elementWrapper, linkedItems);\r\n    }\r\n\r\n    private getUrlSlugResolverForElement(\r\n        item: IContentItem,\r\n        elementWrapper: ElementModels.IElementWrapper,\r\n        queryConfig: IItemQueryConfig\r\n    ): ItemUrlSlugResolver {\r\n        // query `urlSlugResolver` has priority over global resolver\r\n        if (queryConfig.urlSlugResolver) {\r\n            return queryConfig.urlSlugResolver;\r\n        }\r\n\r\n        if (item._config && item._config.urlSlugResolver) {\r\n            return item._config.urlSlugResolver;\r\n        }\r\n\r\n        // resolve default link value\r\n        return () => elementWrapper.rawElement.value;\r\n    }\r\n\r\n    private getOrSaveLinkedItemForElement(\r\n        codename: string,\r\n        element: ElementContracts.IElementContract,\r\n        queryConfig: IItemQueryConfig,\r\n        processedItems: IContentItemsContainer,\r\n        mappingStartedForCodenames: string[],\r\n        preparedItems: IContentItemsContainer\r\n    ): IContentItem | undefined {\r\n        // first check if item was already resolved and return it if it was\r\n        const processedItem = processedItems[codename];\r\n\r\n        if (processedItem) {\r\n            // item was already resolved\r\n            return processedItem;\r\n        }\r\n\r\n        const preparedItem = preparedItems[codename];\r\n\r\n        if (mappingStartedForCodenames.includes(codename)) {\r\n            return preparedItem;\r\n        }\r\n\r\n        mappingStartedForCodenames.push(codename);\r\n\r\n        // by default errors are not thrown\r\n        const throwErrorForMissingLinkedItems: boolean =\r\n            queryConfig.throwErrorForMissingLinkedItems === true ? true : false;\r\n\r\n        // throw error if item is not in response and errors are not skipped\r\n        if (!preparedItem) {\r\n            if (throwErrorForMissingLinkedItems) {\r\n                throw Error(`Linked item with codename '${codename}' could not be found in Delivery response.\r\n                This linked item was requested by '${element.name}' element of '${element.type}'.\r\n                Error can usually be solved by increasing 'Depth' parameter of your query.\r\n                Alternatively, you may prevent this error by disabling 'throwErrorForMissingLinkedItems' in query configuration.`);\r\n            }\r\n\r\n            return undefined;\r\n        }\r\n\r\n        let mappedLinkedItem: IContentItem | undefined;\r\n\r\n        // original resolving if item is still undefined\r\n        const mappedLinkedItemResult = this.mapElements({\r\n            item: preparedItem._raw,\r\n            preparedItems: preparedItems,\r\n            processingStartedForCodenames: mappingStartedForCodenames,\r\n            processedItems: processedItems,\r\n            queryConfig: queryConfig\r\n        });\r\n\r\n        if (mappedLinkedItemResult) {\r\n            mappedLinkedItem = mappedLinkedItemResult.item;\r\n\r\n            // add to processed items\r\n            processedItems[codename] = mappedLinkedItem;\r\n        }\r\n\r\n        return mappedLinkedItem;\r\n    }\r\n\r\n    private mapRichTextLinks(linksJson: ElementContracts.IRichTextElementLinkWrapperContract): Link[] {\r\n        const links: Link[] = [];\r\n\r\n        for (const linkId of Object.keys(linksJson)) {\r\n            const linkRaw = linksJson[linkId];\r\n            links.push(\r\n                new Link({\r\n                    codename: linkRaw.codename,\r\n                    linkId: linkId,\r\n                    urlSlug: linkRaw.url_slug,\r\n                    type: linkRaw.type\r\n                })\r\n            );\r\n        }\r\n\r\n        return links;\r\n    }\r\n\r\n    private mapRichTextImages(imagesJson: ElementContracts.IRichTextElementImageWrapperContract): RichTextImage[] {\r\n        const images: RichTextImage[] = [];\r\n\r\n        for (const imageId of Object.keys(imagesJson)) {\r\n            const imageRaw = imagesJson[imageId];\r\n            images.push(\r\n                new RichTextImage({\r\n                    description: imageRaw.description,\r\n                    imageId: imageRaw.image_id,\r\n                    url: imageRaw.url,\r\n                    height: imageRaw.height,\r\n                    width: imageRaw.width\r\n                })\r\n            );\r\n        }\r\n\r\n        return images;\r\n    }\r\n\r\n    private resolveElementMap(\r\n        item: IContentItem,\r\n        originalElementCodename: string\r\n    ): {\r\n        shouldMapElement: boolean;\r\n        resolvedName: string;\r\n    } {\r\n        let resolvedElementPropertyName: string | undefined = undefined;\r\n\r\n        // resolve using property resolver\r\n        if (item._config && item._config.propertyResolver) {\r\n            resolvedElementPropertyName = item._config.propertyResolver(originalElementCodename);\r\n        }\r\n\r\n        // if property hasn't been resolved, try getting name using decorator\r\n        if (resolvedElementPropertyName === originalElementCodename || !resolvedElementPropertyName) {\r\n            resolvedElementPropertyName = ElementDecorators.getPropertyName(item, originalElementCodename);\r\n        }\r\n\r\n        if (!resolvedElementPropertyName) {\r\n            // use original element codename\r\n            resolvedElementPropertyName = originalElementCodename;\r\n        }\r\n\r\n        // check for collissions\r\n        if (this.collidesWithAnotherProperty(resolvedElementPropertyName, item)) {\r\n            // try to resolve collission using dedicated resolver\r\n            const collisionResolver = this.getCollisionResolver();\r\n            resolvedElementPropertyName = collisionResolver(resolvedElementPropertyName);\r\n\r\n            // verify again if the new element collides\r\n            if (this.collidesWithAnotherProperty(resolvedElementPropertyName, item)) {\r\n                console.warn(\r\n                    `Element '${resolvedElementPropertyName}' collides with another element in same type. Element mapping is skipped. Source item: '${item.system.codename}'`\r\n                );\r\n                return {\r\n                    shouldMapElement: false,\r\n                    resolvedName: ''\r\n                };\r\n            }\r\n        }\r\n\r\n        return {\r\n            resolvedName: resolvedElementPropertyName,\r\n            shouldMapElement: true\r\n        };\r\n    }\r\n\r\n    private getGlobalUrlSlugResolverForType(type: string): ItemUrlSlugResolver | undefined {\r\n        const item = stronglyTypedResolver.createEmptyItemInstanceOfType(type, this.config.typeResolvers || []);\r\n        if (item && item._config && item._config.urlSlugResolver) {\r\n            return item._config.urlSlugResolver;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    private getCollisionResolver(): ElementCollisionResolver {\r\n        return this.config.collisionResolver ? this.config.collisionResolver : defaultCollissionResolver;\r\n    }\r\n\r\n    private collidesWithAnotherProperty(elementName: string, item: IContentItem): boolean {\r\n        return item[elementName] ? true : false;\r\n    }\r\n}\r\n","import { ElementContracts } from '../data-contracts';\r\nimport { GenericElement } from '../models';\r\n\r\nexport class GenericElementMapper {\r\n\r\n    mapElement(response: ElementContracts.IViewContentTypeElementContract): GenericElement {\r\n        if (!response) {\r\n            throw Error(`Invalid response for mapping element`);\r\n        }\r\n\r\n        return new GenericElement({\r\n            codename: response.codename,\r\n            name: response.name,\r\n            type: response.type,\r\n            options: response.options ? response.options : [],\r\n            taxonomyGroup: response.taxonomy_group\r\n        });\r\n    }\r\n}\r\n\r\n","export * from './element.mapper';\r\nexport * from './item.mapper';\r\nexport * from './taxonomy.mapper';\r\nexport * from './type.mapper';\r\nexport * from './generic-element.mapper';\r\n","import { IDeliveryClientConfig } from '../config';\r\nimport { ItemContracts } from '../data-contracts';\r\nimport { IContentItem, IContentItemsContainer, IItemQueryConfig } from '../models';\r\nimport { IRichTextHtmlParser } from '../parser';\r\nimport { stronglyTypedResolver } from '../resolvers';\r\nimport { ElementMapper } from './element.mapper';\r\n\r\nexport interface IMapItemResult<TItem extends IContentItem = IContentItem> {\r\n    item: TItem;\r\n    processedItems: IContentItemsContainer;\r\n    preparedItems: IContentItemsContainer;\r\n    processingStartedForCodenames: string[];\r\n}\r\n\r\nexport interface IMultipleItemsMapResult<TItem extends IContentItem = IContentItem> {\r\n    items: TItem[];\r\n    linkedItems: IContentItemsContainer;\r\n}\r\n\r\nexport interface ISingleItemMapResult<TItem extends IContentItem = IContentItem> {\r\n    item: TItem;\r\n    linkedItems: IContentItemsContainer;\r\n}\r\n\r\nexport class ItemMapper {\r\n    private readonly elementMapper: ElementMapper;\r\n\r\n    constructor(readonly config: IDeliveryClientConfig, readonly richTextHtmlParser: IRichTextHtmlParser) {\r\n        this.elementMapper = new ElementMapper(config, richTextHtmlParser);\r\n    }\r\n\r\n    /**\r\n     * Maps single item to its proper strongly typed model from the given Kontent response\r\n     * @param response Kontent response used to map the item\r\n     * @param queryConfig Query configuration\r\n     */\r\n    mapSingleItemFromResponse<TItem extends IContentItem = IContentItem>(\r\n        response: ItemContracts.IViewContentItemContract,\r\n        queryConfig: IItemQueryConfig\r\n    ): ISingleItemMapResult<TItem> {\r\n        const mapResult = this.mapItems<TItem>({\r\n            mainItems: [response.item],\r\n            linkedItems: Object.values(response.modular_content),\r\n            queryConfig: queryConfig\r\n        });\r\n\r\n        return {\r\n            item: mapResult.items[0],\r\n            linkedItems: mapResult.linkedItems\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Maps multiple items to their strongly typed model from the given Kontent response\r\n     * @param response Kontent response used to map the item\r\n     * @param queryConfig Query configuration\r\n     */\r\n    mapMultipleItemsFromResponse<TItem extends IContentItem = IContentItem>(\r\n        response: ItemContracts.IItemsWithModularContentContract,\r\n        queryConfig: IItemQueryConfig\r\n    ): IMultipleItemsMapResult<TItem> {\r\n        const mapResult = this.mapItems<TItem>({\r\n            mainItems: response.items,\r\n            linkedItems: Object.values(response.modular_content),\r\n            queryConfig: queryConfig\r\n        });\r\n\r\n        return mapResult;\r\n    }\r\n\r\n    /**\r\n     * Maps item contracts to full models\r\n     */\r\n    mapItems<TItem extends IContentItem = IContentItem>(data: {\r\n        mainItems: ItemContracts.IContentItemContract[];\r\n        linkedItems: ItemContracts.IContentItemContract[];\r\n        queryConfig: IItemQueryConfig;\r\n    }): IMultipleItemsMapResult<TItem> {\r\n        const that = this;\r\n        const itemResolver =\r\n            data.queryConfig && data.queryConfig.itemResolver ? data.queryConfig.itemResolver : undefined;\r\n        const processedItems: IContentItemsContainer = {};\r\n        const preparedItems: IContentItemsContainer = {};\r\n        const processingStartedForCodenames: string[] = [];\r\n        const mappedMainItems: TItem[] = [];\r\n        const mappedLinkedItems: IContentItemsContainer = {};\r\n        const itemsToResolve: ItemContracts.IContentItemContract[] = [...data.mainItems, ...data.linkedItems];\r\n\r\n        // first prepare reference for all items\r\n        for (const item of itemsToResolve) {\r\n            preparedItems[item.system.codename] = stronglyTypedResolver.createItemInstance(\r\n                {\r\n                    item: item\r\n                },\r\n                this.config.typeResolvers || [],\r\n                itemResolver\r\n            );\r\n        }\r\n\r\n        // then resolve items\r\n        for (const item of data.mainItems) {\r\n            const itemResult = that.mapItem<TItem>({\r\n                item: item,\r\n                processedItems: processedItems,\r\n                queryConfig: data.queryConfig,\r\n                preparedItems: preparedItems,\r\n                processingStartedForCodenames: processingStartedForCodenames\r\n            });\r\n\r\n            mappedMainItems.push(itemResult.item);\r\n        }\r\n\r\n        for (const item of data.linkedItems) {\r\n            const itemResult = that.mapItem<TItem>({\r\n                item: item,\r\n                processedItems: processedItems,\r\n                queryConfig: data.queryConfig,\r\n                preparedItems: preparedItems,\r\n                processingStartedForCodenames: processingStartedForCodenames\r\n            });\r\n\r\n            mappedLinkedItems[item.system.codename] = itemResult.item;\r\n        }\r\n\r\n        return {\r\n            items: mappedMainItems,\r\n            linkedItems: mappedLinkedItems\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Maps item contract to full model\r\n     */\r\n    private mapItem<TItem extends IContentItem = IContentItem>(data: {\r\n        item: ItemContracts.IContentItemContract;\r\n        queryConfig: IItemQueryConfig;\r\n        processedItems: IContentItemsContainer;\r\n        processingStartedForCodenames: string[];\r\n        preparedItems: IContentItemsContainer;\r\n    }): IMapItemResult<TItem> {\r\n        if (!data.item) {\r\n            throw Error(`Could not map item because its undefined`);\r\n        }\r\n\r\n        const result = this.elementMapper.mapElements<TItem>({\r\n            item: data.item,\r\n            preparedItems: data.preparedItems,\r\n            processingStartedForCodenames: [],\r\n            processedItems: data.processedItems,\r\n            queryConfig: data.queryConfig\r\n        });\r\n\r\n        if (!result) {\r\n            throw Error(`Mapping of content item '${data.item.system.codename}' failed`);\r\n        }\r\n        return {\r\n            item: result.item,\r\n            processedItems: result.processedItems,\r\n            preparedItems: result.preparedItems,\r\n            processingStartedForCodenames: result.processingStartedForCodenames\r\n        };\r\n    }\r\n}\r\n","import { TaxonomyContracts } from '../data-contracts';\r\nimport { TaxonomyGroup, TaxonomySystemAttributes, TaxonomyTerms } from '../models';\r\n\r\nexport class TaxonomyMapper {\r\n\r\n    mapTaxonomy(taxonomySystem: TaxonomyContracts.ITaxonomySystemAttributesContract, taxonomyTerms: TaxonomyContracts.ITaxonomyTermsContract[]): TaxonomyGroup {\r\n        if (!taxonomySystem) {\r\n            throw Error(`Cannot map taxonomy due to missing 'system' property`);\r\n        }\r\n\r\n        if (!taxonomyTerms) {\r\n            throw Error(`Cannot map taxonomy due to missing 'terms' property`);\r\n        }\r\n\r\n        if (!Array.isArray(taxonomyTerms)) {\r\n            throw Error(`Cannot map terms because no terms array was provided`);\r\n        }\r\n\r\n        const mappedSystemAttributes: TaxonomySystemAttributes = new TaxonomySystemAttributes({\r\n            name: taxonomySystem.name,\r\n            codename: taxonomySystem.codename,\r\n            id: taxonomySystem.id,\r\n            lastModified: taxonomySystem.last_modified\r\n        });\r\n\r\n        const mappedTerms: TaxonomyTerms[] = this.mapTaxonomyTerms(taxonomyTerms);\r\n\r\n        return new TaxonomyGroup(mappedSystemAttributes, mappedTerms);\r\n    }\r\n\r\n    mapTaxonomies(taxonomies: TaxonomyContracts.ITaxonomyGroupContract[]): TaxonomyGroup[] {\r\n        if (!taxonomies) {\r\n            throw Error(`Cannot map taxonomy due to missing 'taxonomies' property`);\r\n        }\r\n\r\n        if (!Array.isArray(taxonomies)) {\r\n            throw Error(`Cannot map taxonomies because the 'taxonomies' property is not an array `);\r\n        }\r\n\r\n        const mappedTaxonomies: TaxonomyGroup[] = [];\r\n\r\n        taxonomies.forEach(taxonomy => {\r\n            mappedTaxonomies.push(this.mapTaxonomy(taxonomy.system, taxonomy.terms));\r\n        });\r\n\r\n        return mappedTaxonomies;\r\n    }\r\n\r\n    /**\r\n     * Recursively map array of taxonomy terms\r\n     * @param termsArray Terms array to map\r\n     */\r\n    private mapTaxonomyTerms(termsArray: TaxonomyContracts.ITaxonomyTermsContract[]): TaxonomyTerms[] {\r\n        if (termsArray.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        const mappedTermsArray: TaxonomyTerms[] = [];\r\n\r\n        termsArray.forEach(terms => {\r\n            const mappedTerms = new TaxonomyTerms({\r\n                codename: terms.codename,\r\n                name: terms.name,\r\n                terms: this.mapTaxonomyTerms(terms.terms)\r\n            });\r\n\r\n            mappedTermsArray.push(mappedTerms);\r\n        });\r\n\r\n        return mappedTermsArray;\r\n    }\r\n}\r\n","import { ElementContracts, IElementOptionContract, TypeContracts } from '../data-contracts';\r\nimport { ContentType, ContentTypeSystemAttributes, GenericElement, GenericElementOption } from '../models';\r\n\r\nexport class TypeMapper {\r\n\r\n    mapSingleType(response: TypeContracts.IViewContentTypeContract): ContentType {\r\n        return this.mapType(response);\r\n    }\r\n\r\n    mapMultipleTypes(response: TypeContracts.IListContentTypeContract): ContentType[] {\r\n        const that = this;\r\n        return response.types.map(function (type) {\r\n            return that.mapType(type);\r\n        });\r\n    }\r\n\r\n    private mapType(type: TypeContracts.IContentTypeContract): ContentType {\r\n        if (!type) {\r\n            throw Error(`Cannot map type`);\r\n        }\r\n\r\n        if (!type.elements) {\r\n            throw Error(`Cannot map type elements`);\r\n        }\r\n\r\n        const typeSystem = new ContentTypeSystemAttributes({\r\n            codename: type.system.codename,\r\n            id: type.system.id,\r\n            name: type.system.name,\r\n            lastModified: type.system.last_modified\r\n        });\r\n\r\n        const elements: GenericElement[] = [];\r\n\r\n        const elementNames = Object.getOwnPropertyNames(type.elements);\r\n        elementNames.forEach((elementName: string) => {\r\n            const typeElement = type.elements[elementName] as ElementContracts.IViewContentTypeElementContract;\r\n\r\n            if (!typeElement) {\r\n                throw Error(`Cannot find element '${elementName}' on type '${type}'`);\r\n            }\r\n\r\n            // use json property as a codename of the type element\r\n            const elementCodename = elementName;\r\n\r\n            // extra properties for certain element types\r\n            const taxonomyGroup: string | undefined = typeElement.taxonomy_group;\r\n            const options: IElementOptionContract[] = [];\r\n\r\n            // some elements can contain options\r\n            const rawOptions = typeElement.options;\r\n            if (rawOptions) {\r\n                if (!Array.isArray(rawOptions)) {\r\n                    throw Error(`Content type 'options' property has to be an array`);\r\n                }\r\n\r\n                rawOptions.forEach(rawOption => {\r\n                    options.push(new GenericElementOption(rawOption.name, rawOption.codename));\r\n                });\r\n            }\r\n\r\n            elements.push(new GenericElement({\r\n                codename: elementCodename,\r\n                taxonomyGroup: taxonomyGroup,\r\n                options: options,\r\n                name: typeElement.name,\r\n                type: typeElement.type\r\n            }));\r\n        });\r\n        return new ContentType({\r\n            system: typeSystem,\r\n            elements: elements\r\n        });\r\n    }\r\n\r\n}\r\n","import { IBaseResponse } from '@kentico/kontent-core';\r\n\r\nimport { IKontentResponse, IKontentResponseDebug } from './common-models';\r\n\r\nconst staleContentHeaderName: string = 'X-Stale-Content';\r\n\r\nfunction getHasStaleContent(response: IBaseResponse<any>): boolean {\r\n    const hasStaleContentHeader = response.headers.find(\r\n        m => m.header.toLowerCase() === staleContentHeaderName.toLowerCase()\r\n    );\r\n\r\n    if (hasStaleContentHeader) {\r\n        if (hasStaleContentHeader.value.toString() === '1') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction getResponseDebug(response: IBaseResponse<any>): IKontentResponseDebug {\r\n    return {\r\n        response: response.response,\r\n        headers: response.headers,\r\n        status: response.status\r\n    };\r\n}\r\n\r\nexport abstract class BaseKontentResponse<TDebugData> implements IKontentResponse<TDebugData> {\r\n\r\n    public readonly debug?: TDebugData;\r\n    public abstract hasStaleContent: boolean;\r\n    public abstract isDeveloperMode: boolean;\r\n\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport class BaseKontentResponseStandardDebug extends BaseKontentResponse<IKontentResponseDebug> {\r\n\r\n    public readonly debug?: IKontentResponseDebug;\r\n    public readonly hasStaleContent: boolean;\r\n    public readonly isDeveloperMode: boolean;\r\n\r\n    constructor(response: IBaseResponse<any>, isDeveloperMode: boolean) {\r\n        super();\r\n        this.hasStaleContent = getHasStaleContent(response);\r\n        this.isDeveloperMode = isDeveloperMode;\r\n\r\n        if (isDeveloperMode) {\r\n            this.debug = getResponseDebug(response);\r\n        }\r\n    }\r\n}\r\n\r\nexport class BaseKontentResponseArrayDebug extends BaseKontentResponse<IKontentResponseDebug[]> {\r\n\r\n    public readonly debug?: IKontentResponseDebug[] = [];\r\n    /**\r\n     * Always false for joined response data\r\n     */\r\n    public readonly hasStaleContent: boolean = false;\r\n    public readonly isDeveloperMode: boolean;\r\n\r\n    constructor(responses: IBaseResponse<any>[], isDeveloperMode: boolean) {\r\n        super();\r\n        this.isDeveloperMode = isDeveloperMode;\r\n\r\n        if (isDeveloperMode) {\r\n            for (const response of responses) {\r\n                if (this.debug) {\r\n                    this.debug.push(getResponseDebug(response));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { IHeader, IQueryParameter } from '@kentico/kontent-core';\r\n\r\nexport interface IProxyUrlData {\r\n    action: string;\r\n    domain: string;\r\n    queryParameters: IQueryParameter[];\r\n    queryString: string;\r\n    queryConfig: IQueryConfig;\r\n    projectId: string;\r\n}\r\n\r\nexport interface IKontentResponseDebug {\r\n    response: any;\r\n    status: number;\r\n    headers: IHeader[];\r\n}\r\n\r\nexport interface ISDKInfo {\r\n    /**\r\n     * Name of SDK\r\n     */\r\n    name: string;\r\n    /**\r\n     * Version SDK\r\n     */\r\n    version: string;\r\n    /**\r\n     * Host of SDK\r\n     */\r\n    host: string;\r\n}\r\n\r\nexport interface IKontentResponse<TDebugData> {\r\n    debug?: TDebugData;\r\n    hasStaleContent: boolean;\r\n}\r\n\r\nexport interface IQueryConfig {\r\n    /**\r\n     * Indicates if query should use preview mode. Overrides global settings of Delivery Client\r\n     */\r\n    usePreviewMode?: boolean;\r\n\r\n    /**\r\n     * Indicates if query should use secured delivery API mode. Overrides global settings of Delivery Client\r\n     */\r\n    useSecuredMode?: boolean;\r\n\r\n    /**\r\n     * If the requested content has changed since the last request, the header determines whether\r\n     * to wait while fetching content. This can be useful when retrieving changed content\r\n     * in reaction to a webhook call. By default, when the header is not set, the API\r\n     * serves old content (if cached by the CDN) while it's fetching the new content\r\n     * to minimize wait time.\r\n     */\r\n    waitForLoadingNewContent?: boolean;\r\n\r\n    customHeaders?: IHeader[];\r\n}\r\n\r\nexport interface IDeliveryErrorRaw {\r\n    message: string;\r\n    request_id: string | null;\r\n    error_code: number;\r\n    specific_code: number;\r\n}\r\n\r\nexport class DeliveryError {\r\n    public message: string;\r\n    public requestId: string | null;\r\n    public errorCode: number;\r\n    public specificCode: number;\r\n\r\n    constructor(data: { message: string; requestId: string | null; errorCode: number; specificCode: number }) {\r\n        this.message = data.message;\r\n        this.requestId = data.requestId;\r\n        this.errorCode = data.errorCode;\r\n        this.specificCode = data.specificCode;\r\n    }\r\n}\r\n","import { IQueryParameter } from '@kentico/kontent-core';\r\n\r\nexport namespace Filters {\r\n\r\n    const valueSeparator: string = ',';\r\n    const defaultValue: string = '';\r\n\r\n    const getParamValueForSystemFilter = (param: string | string[]): string | undefined => {\r\n        if (!param) {\r\n            return defaultValue;\r\n        }\r\n\r\n        if (Array.isArray(param)) {\r\n            let value = '';\r\n            // use [in] filter\r\n            for (let i = 0; i < param.length; i++) {\r\n\r\n                value = value + param[i].toString();\r\n\r\n                if (i !== param.length - 1) {\r\n                    // append separator if its not last item\r\n                    value = value + valueSeparator;\r\n                }\r\n            }\r\n\r\n            return value;\r\n        }\r\n\r\n        // single param was given\r\n        return param.toString();\r\n    };\r\n\r\n    export class TypeFilter implements IQueryParameter {\r\n        constructor(\r\n            public type: string | string[]\r\n        ) {\r\n        }\r\n\r\n        getParam(): string {\r\n            if (Array.isArray(this.type)) {\r\n                // multiple types\r\n                return `system.type[in]=${getParamValueForSystemFilter(this.type)}`;\r\n            }\r\n\r\n            // single type\r\n            return `system.type=${getParamValueForSystemFilter(this.type)}`;\r\n        }\r\n    }\r\n\r\n    export class CollectionFilter implements IQueryParameter {\r\n        constructor(\r\n            public collection: string | string[]\r\n        ) {\r\n        }\r\n\r\n        getParam(): string {\r\n            if (Array.isArray(this.collection)) {\r\n                // multiple collections\r\n                return `system.collection[in]=${getParamValueForSystemFilter(this.collection)}`;\r\n            }\r\n\r\n            // single collection\r\n            return `system.collection=${getParamValueForSystemFilter(this.collection)}`;\r\n        }\r\n    }\r\n\r\n    export class EmptyFilter implements IQueryParameter {\r\n        constructor(\r\n            public element: string,\r\n        ) {\r\n            if (!this.element) {\r\n                throw Error(`Element specified in 'EmptyFilter' is undefined `);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[empty]`;\r\n        }\r\n    }\r\n\r\n    export class NotEmptyFilter implements IQueryParameter {\r\n        constructor(\r\n            public element: string,\r\n        ) {\r\n            if (!this.element) {\r\n                throw Error(`Element specified in 'NotEmptyFilter' is undefined `);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[nempty]`;\r\n        }\r\n    }\r\n\r\n    export class EqualsFilter implements IQueryParameter {\r\n        constructor(\r\n            public element: string,\r\n            public value: string\r\n        ) {\r\n            if (!this.element) {\r\n                throw Error(`Element specified in 'EqualsFilter' is undefined `);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[eq]=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            if (!this.value) {\r\n                return defaultValue;\r\n            }\r\n\r\n            return this.value;\r\n        }\r\n    }\r\n\r\n    export class NotEqualsFilter implements IQueryParameter {\r\n        constructor(\r\n            public element: string,\r\n            public value: string\r\n        ) {\r\n            if (!this.element) {\r\n                throw Error(`Element specified in 'NotEqualsFilter' is undefined `);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[neq]=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            if (!this.value) {\r\n                return defaultValue;\r\n            }\r\n\r\n            return this.value;\r\n        }\r\n    }\r\n\r\n    export class AllFilter implements IQueryParameter {\r\n        constructor(\r\n            public element: string,\r\n            public values: string[]\r\n        ) {\r\n            if (!this.element) {\r\n                throw Error(`Element specified in 'AllFilter' is undefined `);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[all]=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            if (!this.values || !Array.isArray(this.values)) {\r\n                return defaultValue;\r\n            }\r\n\r\n            return this.values.map(m => m.trim()).join(',');\r\n        }\r\n    }\r\n\r\n    export class AnyFilter implements IQueryParameter {\r\n        constructor(\r\n            public element: string,\r\n            public values: string[]\r\n        ) {\r\n            if (!this.element) {\r\n                throw Error(`Element specified in 'AnyFilter' is undefined `);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[any]=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            if (!this.values || !Array.isArray(this.values)) {\r\n                return defaultValue;\r\n            }\r\n\r\n            return this.values.map(m => m.trim()).join(',');\r\n        }\r\n    }\r\n\r\n    export class ContainsFilter implements IQueryParameter {\r\n        constructor(\r\n            public element: string,\r\n            public values: string[]\r\n        ) {\r\n            if (!this.element) {\r\n                throw Error(`Element specified in 'ContainsFilter' is undefined `);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[contains]=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            if (!this.values || !Array.isArray(this.values)) {\r\n                return defaultValue;\r\n            }\r\n\r\n            return this.values.map(m => m.trim()).join(',');\r\n        }\r\n    }\r\n\r\n    export class GreaterThanFilter implements IQueryParameter {\r\n        constructor(\r\n            public element: string,\r\n            public value: string\r\n        ) {\r\n            if (!this.element) {\r\n                throw Error(`Element specified in 'GreaterThanFilter' is undefined `);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n\r\n            return `${this.element.trim()}[gt]=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            if (!this.value) {\r\n                return defaultValue;\r\n            }\r\n\r\n            return this.value;\r\n        }\r\n    }\r\n\r\n    export class GreaterThanOrEqualFilter implements IQueryParameter {\r\n        constructor(\r\n            public element: string,\r\n            public value: string\r\n        ) {\r\n            if (!this.element) {\r\n                throw Error(`Element specified in 'GreaterThanOrEqualFilter' is undefined `);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n\r\n            return `${this.element.trim()}[gte]=${this.getParamValue()}`;\r\n        }\r\n\r\n        getParamValue(): string | undefined {\r\n            if (!this.value) {\r\n                return defaultValue;\r\n            }\r\n\r\n            return this.value;\r\n        }\r\n    }\r\n\r\n    export class InFilter implements IQueryParameter {\r\n        constructor(\r\n            public element: string,\r\n            public values: string[]\r\n        ) {\r\n            if (!this.element) {\r\n                throw Error(`Element specified in 'Infilter' is undefined`);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[in]=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            if (!this.values || !Array.isArray(this.values)) {\r\n                return defaultValue;\r\n            }\r\n\r\n            return this.values.map(m => {\r\n                return m.trim();\r\n            }\r\n            ).join(',');\r\n        }\r\n    }\r\n\r\n    export class NotInFilter implements IQueryParameter {\r\n        constructor(\r\n            public element: string,\r\n            public values: string[]\r\n        ) {\r\n            if (!this.element) {\r\n                throw Error(`Element specified in 'NotInFilter' is undefined`);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[nin]=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            if (!this.values || !Array.isArray(this.values)) {\r\n                return defaultValue;\r\n            }\r\n\r\n            return this.values.map(m => {\r\n                return m.trim();\r\n            }\r\n            ).join(',');\r\n        }\r\n    }\r\n\r\n    export class LessThanFilter implements IQueryParameter {\r\n        constructor(\r\n            public element: string,\r\n            public value: string\r\n        ) {\r\n            if (!this.element) {\r\n                throw Error(`Element specified in 'LessThanFilter' is undefined `);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[lt]=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            if (!this.value) {\r\n                return defaultValue;\r\n            }\r\n            return this.value;\r\n        }\r\n    }\r\n\r\n    export class LessThanOrEqualFilter implements IQueryParameter {\r\n        constructor(\r\n            public element: string,\r\n            public value: string\r\n        ) {\r\n            if (!this.element) {\r\n                throw Error(`Element specified in 'LessThanOrEqualFilter' is undefined `);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n\r\n            return `${this.element.trim()}[lte]=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            if (!this.value) {\r\n                return defaultValue;\r\n            }\r\n\r\n            return this.value;\r\n        }\r\n    }\r\n\r\n    export class RangeFilter implements IQueryParameter {\r\n        constructor(\r\n            public element: string,\r\n            public lowerValue: number,\r\n            public higherValue: number\r\n        ) {\r\n            if (!this.element) {\r\n                throw Error(`Element specified in 'RangeFilter' is undefined `);\r\n            }\r\n\r\n            if (lowerValue > higherValue) {\r\n                throw Error(`'lowerValue' cannot be higher then 'higherValue' in 'RangeFilter'`);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[range]=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            let lowerVal = defaultValue;\r\n            let higherVal = defaultValue;\r\n\r\n            if (this.lowerValue) {\r\n                lowerVal = this.lowerValue.toString();\r\n            }\r\n\r\n            if (this.higherValue) {\r\n                higherVal = this.higherValue.toString();\r\n            }\r\n\r\n            return `${lowerVal},${higherVal}`;\r\n        }\r\n    }\r\n}\r\n","export * from './filters';\r\nexport * from './pagination.class';\r\nexport * from './parameters';\r\nexport * from './sort-order.enum';\r\nexport * from './common-models';\r\nexport * from './base-responses';\r\n","export class Pagination {\r\n\r\n    public skip: number;\r\n    public limit: number;\r\n    public count: number;\r\n    public nextPage: string;\r\n    public totalCount?: number;\r\n\r\n    constructor(\r\n        data: {\r\n            skip: number;\r\n            limit: number;\r\n            count: number;\r\n            nextPage: string;\r\n            totalCount?: number;\r\n        }\r\n    ) {\r\n        this.skip = data.skip;\r\n        this.limit = data.limit;\r\n        this.count = data.count;\r\n        this.nextPage = data.nextPage;\r\n        this.totalCount = data.totalCount;\r\n    }\r\n}\r\n","import { IQueryParameter } from '@kentico/kontent-core';\r\n\r\nimport { SortOrder } from './sort-order.enum';\r\n\r\nexport namespace Parameters {\r\n    const defaultValue: string = '';\r\n\r\n    export class QueryParameter implements IQueryParameter {\r\n        /**\r\n         * Parameter\r\n         * @constructor\r\n         * @param {string} name - Name of the parameter\r\n         * @param {string} value - Value of the parameter\r\n         */\r\n        constructor(public name: string, public value: string) {\r\n            if (!name) {\r\n                throw Error(`Name of the parameter is not specified`);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n            return `${this.name}=${this.value}`;\r\n        }\r\n    }\r\n\r\n    export class ElementsParameter implements IQueryParameter {\r\n        /**\r\n         * Sets elements (projection) so that only certain elements from a content item are returned\r\n         * @constructor\r\n         * @param {string[]} elementCodenames - Array of element codenames to include in response.\r\n         */\r\n        constructor(public elementCodenames: string[]) {}\r\n\r\n        getParam(): string {\r\n            return `elements=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            if (!this.elementCodenames) {\r\n                return defaultValue;\r\n            }\r\n\r\n            return this.elementCodenames\r\n                .map((m) => {\r\n                    if (!m) {\r\n                        throw Error(`Codename of 'ElementsParameter' cannot be null or empty`);\r\n                    }\r\n                    return m.trim();\r\n                })\r\n                .join(',');\r\n        }\r\n    }\r\n\r\n    export class LimitParameter implements IQueryParameter {\r\n        /**\r\n         * Limits the number of items that are returned from response\r\n         * @constructor\r\n         * @param {number} limit - Number of elements that will be returned\r\n         */\r\n        constructor(public limit: number) {\r\n            if (limit <= 0) {\r\n                throw Error(`'LimitParameter' must specify a positive integer`);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n            return `limit=${this.limit}`;\r\n        }\r\n\r\n    }\r\n\r\n    export class IncludeTotalCountParameter implements IQueryParameter {\r\n        /**\r\n         * Adds 'includeTotalCount' query parameter to query\r\n         * @constructor\r\n         */\r\n        constructor() {}\r\n\r\n        getParam(): string {\r\n            return `includeTotalCount=true`;\r\n        }\r\n    }\r\n\r\n    export class SkipParameter implements IQueryParameter {\r\n        /**\r\n         * Configures response to skip certain number of items\r\n         * @constructor\r\n         * @param {number} skip - Number of content items that will be skipped\r\n         */\r\n        constructor(public skip: number) {\r\n            if (skip < 0) {\r\n                throw Error(`'SkipParameter' must specify a positive integer number or zero.\"`);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n            return `skip=${this.skip}`;\r\n        }\r\n    }\r\n\r\n    export class OrderParameter implements IQueryParameter {\r\n        /**\r\n         * Sorts the response based on given element.\r\n         * @constructor\r\n         * @param {string} element - Element that will be used for sorting (can be both elements.<elementname> or system.<elementname>)\r\n         * @param {SortOrder} sortOrder - Order type (desc/asc). Defaults to 'asc' if SortOrder is null or invalid.\r\n         */\r\n        constructor(public element: string, public sortOrder: SortOrder) {\r\n            if (!element) {\r\n                throw Error(`Element specified in 'OrderParameter' is null or empty`);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n            return `order=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            let order: string;\r\n            if (this.sortOrder === SortOrder.desc) {\r\n                order = 'desc';\r\n            } else {\r\n                order = 'asc';\r\n            }\r\n            return `${this.element.trim()}[${order}]`;\r\n        }\r\n    }\r\n\r\n    export class CustomParameter implements IQueryParameter {\r\n        constructor(public param: string) {}\r\n\r\n        getParam(): string {\r\n            return this.param;\r\n        }\r\n    }\r\n\r\n    export class DepthParameter implements IQueryParameter {\r\n        /**\r\n         * Configures the depth of the response. Content items might reference another 'linked items' using the Linked items element.\r\n         * Recursively, these linked items can reference another linked items.\r\n         * By default, only one level of linked content is returned.\r\n         * @constructor\r\n         * @param {number} depth - Depth fo the response\r\n         */\r\n        constructor(public depth: number) {\r\n            if (depth < 0) {\r\n                throw Error(`'DepthParameter' must specify a positive integer or zero`);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n            return `depth=${this.depth}`;\r\n        }\r\n    }\r\n\r\n    export class LanguageParameter implements IQueryParameter {\r\n        /**\r\n         * Specifies language version to fetch\r\n         * @constructor\r\n         * @param {string} languageCodename - Codename of the language\r\n         */\r\n        constructor(public languageCodename: string) {\r\n            if (!languageCodename) {\r\n                throw Error(`'LanguageParameter' must specify codename of the language`);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n            return `language=${this.languageCodename}`;\r\n        }\r\n    }\r\n}\r\n","export enum SortOrder {\r\n    asc = 'asc',\r\n    desc = 'desc'\r\n}\r\n","import { IQueryConfig } from '../common/common-models';\r\nimport { GenericElement } from '../element/element-models';\r\n\r\nexport class ContentTypeSystemAttributes {\r\n\r\n    /**\r\n    * Id of the type\r\n    */\r\n    public id!: string;\r\n\r\n    /**\r\n     * Name of the type\r\n     */\r\n    public name!: string;\r\n\r\n    /**\r\n     * Codename of the type\r\n     */\r\n    public codename!: string;\r\n\r\n    /**\r\n     * Date of last modification\r\n     */\r\n    public lastModified!: Date;\r\n\r\n    constructor(\r\n        data: {\r\n            id: string,\r\n            name: string,\r\n            codename: string,\r\n            lastModified: Date\r\n        }\r\n    ) {\r\n        Object.assign(this, data);\r\n    }\r\n}\r\n\r\nexport class ContentType {\r\n\r\n    /**\r\n    * Content type system attributes\r\n    */\r\n    public system!: ContentTypeSystemAttributes;\r\n\r\n    /**\r\n    * Elements (elements) assigned to content type\r\n    */\r\n    public elements!: GenericElement[];\r\n\r\n    constructor(\r\n        data: {\r\n            system: ContentTypeSystemAttributes,\r\n            elements: GenericElement[]\r\n        }\r\n    ) {\r\n        Object.assign(this, data);\r\n    }\r\n}\r\n\r\nexport interface IContentTypeQueryConfig extends IQueryConfig {\r\n    /**\r\n     * No dedicated properties required at this moment\r\n     */\r\n}\r\n\r\n","export * from './content-type-models';\r\nexport * from './responses';\r\n","import { IBaseResponse } from '@kentico/kontent-core';\r\n\r\nimport { BaseKontentResponseStandardDebug, Pagination } from '../common';\r\nimport { ContentType } from './content-type-models';\r\n\r\nexport namespace TypeResponses {\r\n    export class ListContentTypesResponse extends BaseKontentResponseStandardDebug {\r\n        /**\r\n         * Response containing multiple types\r\n         * @constructor\r\n         * @param {IContentType[]} types - Content types\r\n         * @param {Pagination} pagination - Pagination object\r\n         */\r\n        constructor(\r\n            public types: ContentType[],\r\n            public pagination: Pagination,\r\n            response: IBaseResponse<any>,\r\n            isDeveloperMode: boolean\r\n        ) {\r\n            super(response, isDeveloperMode);\r\n        }\r\n    }\r\n\r\n    export class ViewContentTypeResponse extends BaseKontentResponseStandardDebug {\r\n        /**\r\n         * Response containing single type\r\n         * @constructor\r\n         * @param {IContentType} type - Content type\r\n         */\r\n        constructor(public type: ContentType, response: IBaseResponse<any>, isDeveloperMode: boolean) {\r\n            super(response, isDeveloperMode);\r\n        }\r\n    }\r\n}\r\n","import { IQueryConfig } from '../common/common-models';\r\n\r\nexport interface IElementQueryConfig extends IQueryConfig {\r\n    /**\r\n     * No dedicated properties required at this moment\r\n     */\r\n}\r\n\r\nexport class GenericElementOption {\r\n    constructor(\r\n        /**\r\n         * Name of the option\r\n         */\r\n        public name: string,\r\n\r\n        /**\r\n         * Value of the option\r\n         */\r\n        public codename: string\r\n    ) { }\r\n}\r\n\r\n\r\nexport class GenericElement {\r\n\r\n    /**\r\n     * Indexer\r\n     */\r\n    [key: string]: any;\r\n\r\n    /**\r\n     * Codename of the element\r\n     */\r\n    public codename!: string;\r\n\r\n    /**\r\n     * Type of the element\r\n     */\r\n    public type!: string;\r\n\r\n    /**\r\n     * Name of the element\r\n     */\r\n    public name!: string;\r\n\r\n    /**\r\n     * Taxonomy group in case the element is a taxonomy\r\n     */\r\n    public taxonomyGroup?: string;\r\n\r\n    /**\r\n     * Array of options if the element has some\r\n     */\r\n    public options: GenericElementOption[] = [];\r\n\r\n    constructor(\r\n        data: {\r\n            codename: string,\r\n            type: string,\r\n            name: string,\r\n            taxonomyGroup?: string,\r\n            options: GenericElementOption[]\r\n        }\r\n    ) {\r\n        Object.assign(this, data);\r\n    }\r\n}\r\n\r\n","export * from './element-models';\r\nexport * from './responses';\r\n","import { IBaseResponse } from '@kentico/kontent-core';\r\n\r\nimport { BaseKontentResponseStandardDebug } from '../common';\r\nimport { GenericElement } from './element-models';\r\n\r\nexport namespace ElementResponses {\r\n    export class ViewContentTypeElementResponse extends BaseKontentResponseStandardDebug {\r\n        /**\r\n         * Response containing content type element\r\n         *\r\n         * @constructor\r\n         * @param {GenericElement} element - Content type element\r\n         */\r\n        constructor(public element: GenericElement, response: IBaseResponse<any>, isDeveloperMode: boolean) {\r\n            super(response, isDeveloperMode);\r\n        }\r\n    }\r\n}\r\n","export * from './common';\r\nexport * from './element';\r\nexport * from './item';\r\nexport * from './taxonomy';\r\nexport * from './content-type';\r\n\r\n","export * from './item-models';\r\nexport * from './responses';\r\nexport * from './item-resolvers';\r\nexport * from './type-resolver.class';\r\n\r\n","import { ItemContracts } from '../../data-contracts/item-contracts';\r\nimport { IQueryConfig } from '../common/common-models';\r\nimport {\r\n    ItemUrlSlugResolver,\r\n    ItemPropertyResolver,\r\n    ItemResolver,\r\n    ItemRichTextResolver,\r\n    RichTextImageResolver,\r\n} from './item-resolvers';\r\nimport { ElementModels } from '../../elements/element-models';\r\nimport { Elements } from '../../elements/elements';\r\n\r\nexport interface IMapElementsResult<TItem extends IContentItem = IContentItem> {\r\n    item: TItem;\r\n    processedItems: IContentItemsContainer;\r\n    preparedItems: IContentItemsContainer;\r\n    processingStartedForCodenames: string[];\r\n}\r\n\r\nexport interface IContentItemSystemAttributes {\r\n    /**\r\n   * Id of the item\r\n   */\r\n    id: string;\r\n\r\n    /**\r\n     * Name of the item\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * Codename of the item\r\n     */\r\n    codename: string;\r\n\r\n    /**\r\n     * Codename of the type this item is using\r\n     */\r\n    type: string;\r\n\r\n    /**\r\n     * Date when the item was last modified\r\n     */\r\n    lastModified: Date;\r\n\r\n    /**\r\n     * Codename of the language\r\n     */\r\n    language: string;\r\n\r\n    /**\r\n     * Array of sitemap locations\r\n     */\r\n    sitemapLocations: string[];\r\n\r\n    /**\r\n     * Codename of the collection this item belongs to\r\n     */\r\n    collection: string;\r\n}\r\n\r\n/**\r\n * Indexer is defined as 'any' because models can contain custom methods, different field types, linked items ...\r\n */\r\nexport type ContentItemIndexer = any;\r\n\r\nexport type ContentItemType = 'component' | 'linkedItem';\r\n\r\nexport interface IContentItem {\r\n\r\n    /**\r\n    * Indexer\r\n    */\r\n    [key: string]: ContentItemIndexer;\r\n\r\n    /**\r\n     * Content item system elements\r\n     */\r\n    system: IContentItemSystemAttributes;\r\n\r\n    /**\r\n     * Debug data of the item\r\n     */\r\n    _raw: ItemContracts.IContentItemContract;\r\n\r\n    /**\r\n     * Content item configuration\r\n     */\r\n    _config?: IContentItemConfig;\r\n\r\n    /**\r\n     * Gets array of all elements assigned to content item.\r\n     * This is an alternative to accessing elements via properties.\r\n     */\r\n    getAllElements(): ElementModels.IElement<any>[];\r\n}\r\n\r\nexport class ContentItem implements IContentItem {\r\n\r\n    /**\r\n     * Indexer\r\n     */\r\n    [key: string]: ContentItemIndexer;\r\n\r\n    /**\r\n     * Content item system elements\r\n     */\r\n    public system!: ContentItemSystemAttributes;\r\n\r\n    /**\r\n     * Raw data\r\n     */\r\n    public _raw!: ItemContracts.IContentItemContract;\r\n\r\n    /**\r\n     * configuration\r\n     */\r\n    public _config?: IContentItemConfig;\r\n\r\n    /**\r\n    * Base class representing content item type. All content type models need to extend this class.\r\n    * @constructor\r\n    */\r\n    constructor(config?: IContentItemConfig) {\r\n        this._config = config;\r\n    }\r\n\r\n    /**\r\n     * Gets array of all elements assigned to content item.\r\n     * This is an alternative to accessing elements via properties.\r\n     */\r\n    getAllElements(): ElementModels.IElement<any>[] {\r\n        const elements: ElementModels.IElement<any>[] = [];\r\n\r\n        // get all props\r\n        for (const key of Object.keys(this)) {\r\n            const prop = this[key];\r\n\r\n            if (prop instanceof Elements.BaseElement) {\r\n                elements.push(prop);\r\n            }\r\n        }\r\n\r\n        return elements;\r\n    }\r\n\r\n}\r\n\r\nexport class ContentItemSystemAttributes implements IContentItemSystemAttributes {\r\n\r\n    /**\r\n    * Id of the item\r\n    */\r\n    public id!: string;\r\n\r\n    /**\r\n     * Name of the item\r\n     */\r\n    public name!: string;\r\n\r\n    /**\r\n     * Codename of the item\r\n     */\r\n    public codename!: string;\r\n\r\n    /**\r\n     * Codename of the type this item is using\r\n     */\r\n    public type!: string;\r\n\r\n    /**\r\n     * Date when the item was last modified\r\n     */\r\n    public lastModified!: Date;\r\n\r\n    /**\r\n     * Codename of the language\r\n     */\r\n    public language!: string;\r\n\r\n    /**\r\n     * Array of sitemap locations\r\n     */\r\n    public sitemapLocations!: string[];\r\n\r\n    /**\r\n     * Codename of the collection this item belongs to\r\n     */\r\n    public collection!: string;\r\n\r\n    constructor(\r\n        data: {\r\n            id: string,\r\n            name: string,\r\n            codename: string,\r\n            type: string,\r\n            lastModified: Date,\r\n            language: string,\r\n            sitemapLocations: string[],\r\n            collection: string\r\n        }\r\n    ) {\r\n        Object.assign(this, data);\r\n    }\r\n}\r\n\r\nexport class Link {\r\n\r\n    /**\r\n     * Id of the link\r\n     */\r\n    public linkId!: string;\r\n\r\n    /**\r\n     * Codename of the content item\r\n     */\r\n    public codename!: string;\r\n\r\n    /**\r\n     * Type codename of the content item\r\n     */\r\n    public type!: string;\r\n\r\n    /**\r\n     * Url slug defined for the content item\r\n     */\r\n    public urlSlug!: string;\r\n\r\n    constructor(\r\n        data: {\r\n            linkId: string;\r\n            codename: string,\r\n            type: string,\r\n            urlSlug: string,\r\n        }\r\n    ) {\r\n        Object.assign(this, data);\r\n    }\r\n}\r\n\r\nexport interface IContentItemsContainer<TItem extends IContentItem = IContentItem> {\r\n    [key: string]: TItem;\r\n}\r\n\r\nexport class RichTextImage {\r\n\r\n    public imageId!: string;\r\n    public url!: string;\r\n    public description?: string;\r\n    public width?: number;\r\n    public height?: number;\r\n\r\n    constructor(\r\n        data: {\r\n            imageId: string,\r\n            url: string,\r\n            description?: string,\r\n            height?: number;\r\n            width?: number;\r\n        }\r\n    ) {\r\n        Object.assign(this, data);\r\n    }\r\n}\r\n\r\nexport interface ITypeResolverData {\r\n    item: ItemContracts.IContentItemContract;\r\n}\r\n\r\nexport interface IItemQueryConfig extends IQueryConfig {\r\n    throwErrorForMissingLinkedItems?: boolean;\r\n    urlSlugResolver?: ItemUrlSlugResolver;\r\n    richTextResolver?: ItemRichTextResolver<IContentItem>;\r\n    itemResolver?: ItemResolver;\r\n    richTextImageResolver?: RichTextImageResolver;\r\n}\r\n\r\nexport interface IUrlSlugResolverContext {\r\n\r\n    /**\r\n     * Original link text (available only for links in rich text element)\r\n     */\r\n    linkText?: string;\r\n\r\n    /**\r\n     * Content item if available\r\n     */\r\n    item?: IContentItem;\r\n\r\n    /**\r\n     * Link id (equal to `contentItem` id). Available only for links inside `richTextElement`\r\n     */\r\n    linkId?: string;\r\n}\r\n\r\nexport interface IUrlSlugResolverResult {\r\n    html?: string;\r\n    url?: string;\r\n}\r\n\r\nexport interface IRichTextResolverContext {\r\n    contentType: RichTextItemDataType;\r\n}\r\n\r\nexport interface IRichTextImageResolverResult {\r\n    url: string;\r\n}\r\n\r\nexport enum RichTextItemDataType {\r\n    Item = 'item',\r\n}\r\n\r\nexport interface IContentItemConfig {\r\n    /**\r\n    * Function used to bind elements returned from Kentico Kontent to a model property.\r\n    * Common use is to bind e.g. 'FirstName' element from Kentico Kontent response to 'firstName' element in model\r\n    */\r\n    propertyResolver?: ItemPropertyResolver;\r\n\r\n    /**\r\n     *  Function used to resolve url slug elements\r\n     */\r\n    urlSlugResolver?: ItemUrlSlugResolver;\r\n\r\n    /**\r\n     * Function used to resolve linked items in rich text elements to HTML\r\n     */\r\n    richTextResolver?: ItemRichTextResolver<any>;\r\n}\r\n","import { IBaseResponse, IHeader } from '@kentico/kontent-core';\r\n\r\nimport { BaseKontentResponseArrayDebug, BaseKontentResponseStandardDebug, Pagination } from '../common';\r\nimport { IContentItem, IContentItemsContainer } from './item-models';\r\n\r\nexport namespace ItemResponses {\r\n    export class ItemsFeedAllResponse<TItem extends IContentItem = IContentItem> extends BaseKontentResponseArrayDebug {\r\n        constructor(\r\n            public items: TItem[],\r\n            public linkedItems: IContentItemsContainer,\r\n            responses: IBaseResponse<any>[],\r\n            isDeveloperMode: boolean\r\n        ) {\r\n            super(responses, isDeveloperMode);\r\n        }\r\n    }\r\n\r\n    export class ItemsFeedResponse<TItem extends IContentItem = IContentItem> extends BaseKontentResponseStandardDebug {\r\n        private readonly continuationTokenHeaderName: string = 'X-Continuation';\r\n        public continuationToken?: string;\r\n\r\n        constructor(\r\n            public items: TItem[],\r\n            public linkedItems: IContentItemsContainer,\r\n            response: IBaseResponse<any>,\r\n            isDeveloperMode: boolean\r\n        ) {\r\n            super(response, isDeveloperMode);\r\n            this.continuationToken = this.getContinuationToken(response.headers);\r\n        }\r\n\r\n        private getContinuationToken(headers: IHeader[]): string | undefined {\r\n            const header = headers.find(m => m.header.toLowerCase() === this.continuationTokenHeaderName.toLowerCase());\r\n            return header ? header.value : undefined;\r\n        }\r\n    }\r\n\r\n    export class ListContentItemsResponse<\r\n        TItem extends IContentItem = IContentItem\r\n    > extends BaseKontentResponseStandardDebug {\r\n        /**\r\n         * Indicates if response contains any items\r\n         */\r\n        public isEmpty: boolean;\r\n\r\n        /**\r\n         * First item or undefined if none is found\r\n         */\r\n        public firstItem?: TItem;\r\n\r\n        /**\r\n         * Last item or undefined if response contains no items\r\n         */\r\n        public lastItem?: TItem;\r\n\r\n        /**\r\n         * Response containing multiple item\r\n         * @constructor\r\n         * @param {TItem[]} items - Collection of content items\r\n         * @param {Pagination} pagination - Pagination object\r\n         * @param {IContentItemsContainer} linkedItems - Content items that were processed during request\r\n         */\r\n        constructor(\r\n            public items: TItem[],\r\n            public pagination: Pagination,\r\n            public linkedItems: IContentItemsContainer,\r\n            response: IBaseResponse<any>,\r\n            isDeveloperMode: boolean\r\n        ) {\r\n            super(response, isDeveloperMode);\r\n            this.isEmpty = this.getIsEmpty();\r\n            this.lastItem = this.getLastItem();\r\n            this.firstItem = this.getFirstItem();\r\n        }\r\n\r\n        /**\r\n         * Flattens linkedItems object to an array\r\n         */\r\n        getLinkedItemsAsArray(): IContentItem[] {\r\n            return Object.values(this.items);\r\n        }\r\n\r\n        getIsEmpty(): boolean {\r\n            if (!this.items) {\r\n                return true;\r\n            }\r\n            return this.items.length === 0;\r\n        }\r\n\r\n        getFirstItem(): TItem | undefined {\r\n            if (!this.items) {\r\n                return;\r\n            }\r\n\r\n            if (this.items.length < 1) {\r\n                return;\r\n            }\r\n\r\n            return this.items[0];\r\n        }\r\n\r\n        getLastItem(): TItem | undefined {\r\n            if (!this.items) {\r\n                return;\r\n            }\r\n\r\n            if (this.items.length < 1) {\r\n                return;\r\n            }\r\n\r\n            return this.items[this.items.length - 1];\r\n        }\r\n    }\r\n\r\n    export class ViewContentItemResponse<\r\n        TItem extends IContentItem = IContentItem\r\n    > extends BaseKontentResponseStandardDebug {\r\n        /**\r\n         * Indicates if response contains item\r\n         */\r\n        public isEmpty: boolean;\r\n\r\n        /**\r\n         * Response containing single item\r\n         * @constructor\r\n         * @param {TItem} item - Returned item\r\n         * @param {IContentItemsContainer} linkedItems - Content items that were processed during request\r\n         */\r\n        constructor(\r\n            public item: TItem,\r\n            public linkedItems: IContentItemsContainer,\r\n            response: IBaseResponse<any>,\r\n            isDeveloperMode: boolean\r\n        ) {\r\n            super(response, isDeveloperMode);\r\n            this.isEmpty = this.getIsEmpty();\r\n        }\r\n\r\n        getIsEmpty(): boolean {\r\n            if (!this.item) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import { IContentItem, ITypeResolverData } from '../../models';\r\n\r\nexport class TypeResolver {\r\n\r\n    /**\r\n    * Resolver used to create instance of particular class representing your content item. This is useful if you want to access\r\n    * properties in a strongly types manner when using TypeScript or to define additional properties/functions on the class.\r\n    * For example if you create a class 'Character' which corresponds to 'character' code name of Kentico Kontent type, you\r\n    * typically register it like: 'new TypeResolver(\"code_example\", () => new CodeExample())'\r\n    * @constructor\r\n    * @param {string} type - Codename of the content item defined in your Kentico Kontent content types\r\n    * @param {(data?: ITypeResolverData) => IContentItem} resolve - Function used create new instance of your class\r\n    */\r\n    constructor(\r\n        public type: string,\r\n        public resolve: (data?: ITypeResolverData) => IContentItem\r\n    ) { }\r\n}\r\n","export * from './responses';\r\nexport * from './taxonomy-models';\r\n","import { IBaseResponse } from '@kentico/kontent-core';\r\n\r\nimport { BaseKontentResponseStandardDebug, Pagination } from '../common';\r\nimport { TaxonomyGroup } from './taxonomy-models';\r\n\r\nexport namespace TaxonomyResponses {\r\n    export class ViewTaxonomyGroupResponse extends BaseKontentResponseStandardDebug {\r\n        constructor(\r\n            /**\r\n             * Taxonomy group\r\n             */\r\n            public taxonomy: TaxonomyGroup,\r\n\r\n            /**\r\n             * Response\r\n             */\r\n            response: IBaseResponse<any>,\r\n            isDeveloperMode: boolean\r\n        ) {\r\n            super(response, isDeveloperMode);\r\n        }\r\n    }\r\n\r\n    export class ListTaxonomyGroupsResponse extends BaseKontentResponseStandardDebug {\r\n        constructor(\r\n            /**\r\n             * Taxonomies\r\n             */\r\n            public taxonomies: TaxonomyGroup[],\r\n\r\n            /**\r\n             * Pagination\r\n             */\r\n            public pagination: Pagination,\r\n\r\n            /**\r\n             * Response\r\n             */\r\n            response: IBaseResponse<any>,\r\n            isDeveloperMode: boolean\r\n        ) {\r\n            super(response, isDeveloperMode);\r\n        }\r\n    }\r\n}\r\n","import { IQueryConfig } from '../common/common-models';\r\n\r\nexport class TaxonomyGroup {\r\n    constructor(\r\n        public system: TaxonomySystemAttributes,\r\n        public terms: TaxonomyTerms[]\r\n    ) { }\r\n}\r\n\r\nexport class TaxonomySystemAttributes {\r\n\r\n    public id!: string;\r\n    public name!: string;\r\n    public codename!: string;\r\n    public lastModified!: Date;\r\n\r\n    constructor(\r\n        data: {\r\n            id: string,\r\n            name: string,\r\n            codename: string,\r\n            lastModified: Date\r\n        }\r\n    ) {\r\n        Object.assign(this, data);\r\n    }\r\n}\r\n\r\nexport class TaxonomyTerms {\r\n\r\n    public name!: string;\r\n    public codename!: string;\r\n    public terms!: TaxonomyTerms[];\r\n\r\n    constructor(\r\n        data: {\r\n            name: string,\r\n            codename: string,\r\n            terms: TaxonomyTerms[]\r\n        }\r\n    ) {\r\n        Object.assign(this, data);\r\n    }\r\n}\r\n\r\nexport interface ITaxonomyQueryConfig extends IQueryConfig {\r\n    /**\r\n     * No dedicated properties required at this moment\r\n     */\r\n}\r\n","import { ContentItemType, IUrlSlugResolverResult, RichTextItemDataType } from '../../models';\r\nimport {\r\n    IFeaturedObjects,\r\n    IHtmlResolverConfig,\r\n    IImageObject,\r\n    ILinkedItemContentObject,\r\n    ILinkObject,\r\n    IRichTextHtmlParser,\r\n    IRichTextReplacements,\r\n    IRichTextResolverResult,\r\n} from '../parse-models';\r\nimport { parserConfiguration } from '../parser-configuration';\r\n\r\nexport class BrowserRichTextParser implements IRichTextHtmlParser {\r\n    resolveRichTextElement(\r\n        contentItemCodename: string,\r\n        html: string,\r\n        elementName: string,\r\n        replacement: IRichTextReplacements,\r\n        config: IHtmlResolverConfig\r\n    ): IRichTextResolverResult {\r\n        const doc = this.createWrapperElement(html);\r\n\r\n        // get all linked items\r\n        const result = this.processRichTextElement(\r\n            contentItemCodename,\r\n            elementName,\r\n            doc.children,\r\n            replacement,\r\n            config,\r\n            {\r\n                links: [],\r\n                linkedItems: [],\r\n                images: []\r\n            }\r\n        );\r\n\r\n        return {\r\n            links: result.links,\r\n            linkedItems: result.linkedItems,\r\n            images: result.images,\r\n            resolvedHtml: doc.innerHTML\r\n        };\r\n    }\r\n\r\n    private createWrapperElement(html: string): HTMLElement {\r\n        const element = document.createElement(parserConfiguration.linkedItemWrapperElem);\r\n        element.innerHTML = html;\r\n\r\n        return element;\r\n    }\r\n\r\n    private processRichTextElement(\r\n        contentItemCodename: string,\r\n        elementName: string,\r\n        htmlCollection: HTMLCollection,\r\n        replacement: IRichTextReplacements,\r\n        config: IHtmlResolverConfig,\r\n        result: IFeaturedObjects\r\n    ): IFeaturedObjects {\r\n        if (!htmlCollection || htmlCollection.length === 0) {\r\n            // there are no more nodes\r\n        } else {\r\n            // extract objects\r\n            for (let i = 0; i < htmlCollection.length; i++) {\r\n                const element = htmlCollection[i];\r\n                const typeAttribute = element.attributes ? element.attributes.getNamedItem('type') : undefined;\r\n\r\n                // process linked items (modular items)\r\n                if (\r\n                    element.attributes &&\r\n                    typeAttribute &&\r\n                    typeAttribute.value &&\r\n                    typeAttribute.value.toLowerCase() ===\r\n                        parserConfiguration.modularContentElementData.type.toLowerCase()\r\n                ) {\r\n                    const dataCodenameAttribute = element.attributes.getNamedItem(\r\n                        parserConfiguration.modularContentElementData.dataCodename\r\n                    );\r\n                    const dataTypeAttribute = element.attributes.getNamedItem(\r\n                        parserConfiguration.modularContentElementData.dataType\r\n                    );\r\n\r\n                    if (!dataTypeAttribute) {\r\n                        throw Error('Missing data type attribute. This is likely an error caused by invalid response.');\r\n                    }\r\n\r\n                    const relAttribute = element.attributes.getNamedItem(\r\n                        parserConfiguration.modularContentElementData.relAttribute\r\n                    );\r\n\r\n                    let itemType: ContentItemType = 'linkedItem';\r\n\r\n                    if (\r\n                        relAttribute &&\r\n                        relAttribute.value === parserConfiguration.modularContentElementData.componentRel\r\n                    ) {\r\n                        itemType = 'component';\r\n                    }\r\n\r\n                    // prepare link item object\r\n                    const linkItemContentObject: ILinkedItemContentObject = {\r\n                        dataCodename: dataCodenameAttribute ? dataCodenameAttribute.value : '',\r\n                        dataType: dataTypeAttribute ? dataTypeAttribute.value : '',\r\n                        itemType: itemType\r\n                    };\r\n\r\n                    // replace html\r\n                    const parentElement = element.parentElement;\r\n\r\n                    if (!parentElement) {\r\n                        console.warn(\r\n                            `Could not replace linked item '${linkItemContentObject.dataCodename}' of '${\r\n                                linkItemContentObject.dataType\r\n                            }' because parent node is undefined. Please report this error if you are seeing this.`\r\n                        );\r\n                    } else {\r\n                        if (dataTypeAttribute.value === 'item') {\r\n                            // add to result\r\n                            result.linkedItems.push(linkItemContentObject);\r\n\r\n                            // create new element\r\n                            const newElem = document.createElement(config.linkedItemWrapperTag);\r\n\r\n                            // get type of resolving item\r\n                            let type: RichTextItemDataType | undefined;\r\n                            type = RichTextItemDataType.Item;\r\n\r\n                            const linkedItemHtml = replacement.getLinkedItemHtml(\r\n                                linkItemContentObject.dataCodename,\r\n                                type\r\n                            );\r\n\r\n                            // recursively run resolver on the HTML obtained by resolver\r\n                            newElem.innerHTML = this.resolveRichTextElement(\r\n                                linkItemContentObject.dataCodename,\r\n                                linkedItemHtml,\r\n                                elementName,\r\n                                replacement,\r\n                                config\r\n                            ).resolvedHtml;\r\n\r\n                            // add classes\r\n                            newElem.className = config.linkedItemWrapperClasses.map(m => m).join(' ');\r\n\r\n                            // replace original node with new one\r\n                            parentElement.replaceChild(newElem, element);\r\n                        } else {\r\n                            if (config.enableAdvancedLogging) {\r\n                                console.warn(\r\n                                    `Rich text element contains object with unsupported data type '${\r\n                                        dataTypeAttribute.value\r\n                                    }'`\r\n                                );\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // process links\r\n                if (element.nodeName.toLowerCase() === parserConfiguration.linkElementData.nodeName.toLowerCase()) {\r\n                    const dataItemIdAttribute = element.attributes.getNamedItem(\r\n                        parserConfiguration.linkElementData.dataItemId\r\n                    );\r\n\r\n                    if (dataItemIdAttribute) {\r\n                        const link: ILinkObject = {\r\n                            dataItemId: dataItemIdAttribute ? dataItemIdAttribute.value : ''\r\n                        };\r\n\r\n                        // add to result\r\n                        result.links.push(link);\r\n\r\n                        // get original link text (the one inside <a> tag)\r\n                        const linkText = element.innerHTML;\r\n\r\n                        const urlSlugResult = replacement.getUrlSlugResult(link.dataItemId, linkText);\r\n\r\n                        // html has priority over url resolver\r\n                        if (urlSlugResult.html) {\r\n                            // replace link html\r\n                            const linkHtml = (<IUrlSlugResolverResult>urlSlugResult).html;\r\n                            element.outerHTML = linkHtml ?? '';\r\n                        } else if (urlSlugResult.url) {\r\n                            // set link url only\r\n                            const hrefAttribute = element.attributes.getNamedItem('href');\r\n                            if (!hrefAttribute) {\r\n                                // href attribute is missing\r\n                                if (config.enableAdvancedLogging) {\r\n                                    console.warn(\r\n                                        `Cannot set url '${urlSlugResult}' because 'href' attribute is not present in the <a> tag.\r\n                                        Please report this issue if you are seeing this.\r\n                                        This warning can be turned off by disabling 'enableAdvancedLogging' option.`\r\n                                    );\r\n                                }\r\n                            } else {\r\n                                // get link url\r\n                                const linkUrlResult: string | undefined =\r\n                                    typeof urlSlugResult === 'string'\r\n                                        ? <string>urlSlugResult\r\n                                        : (<IUrlSlugResolverResult>urlSlugResult).url;\r\n                                hrefAttribute.value = linkUrlResult ? linkUrlResult : '';\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // process images\r\n                if (element.nodeName.toLowerCase() === parserConfiguration.imageElementData.nodeName.toLowerCase()) {\r\n                    const dataImageIdAttribute = element.attributes.getNamedItem(\r\n                        parserConfiguration.imageElementData.dataImageId\r\n                    );\r\n\r\n                    // continue only if data image id is present. There could be regular img tags included\r\n                    if (dataImageIdAttribute) {\r\n                        const imageObj: IImageObject = {\r\n                            imageId: dataImageIdAttribute.value\r\n                        };\r\n\r\n                        result.images.push(imageObj);\r\n\r\n                        // get image result\r\n                        const imageResult = replacement.getImageResult(\r\n                            contentItemCodename,\r\n                            imageObj.imageId,\r\n                            elementName\r\n                        );\r\n\r\n                        // get src attribute of img tag\r\n                        const srcAttribute = element.attributes.getNamedItem(\r\n                            parserConfiguration.imageElementData.srcAttribute\r\n                        );\r\n\r\n                        if (!srcAttribute) {\r\n                            throw Error(\r\n                                `Attribute '${\r\n                                    parserConfiguration.imageElementData.srcAttribute\r\n                                }' is missing. Source element: ${elementName}`\r\n                            );\r\n                        }\r\n\r\n                        // set new image url\r\n                        srcAttribute.value = imageResult.url;\r\n                    }\r\n                }\r\n\r\n                // recursively process child nodes\r\n                if (element.children && element.children.length > 0) {\r\n                    this.processRichTextElement(\r\n                        contentItemCodename,\r\n                        elementName,\r\n                        element.children,\r\n                        replacement,\r\n                        config,\r\n                        result\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n","import {\r\n    Attribute,\r\n    DefaultTreeDocumentFragment,\r\n    DefaultTreeElement,\r\n    DefaultTreeTextNode,\r\n    parseFragment,\r\n    serialize,\r\n} from 'parse5';\r\n\r\nimport { ContentItemType, IUrlSlugResolverResult, RichTextItemDataType } from '../../models';\r\nimport {\r\n    IFeaturedObjects,\r\n    IHtmlResolverConfig,\r\n    IImageObject,\r\n    ILinkedItemContentObject,\r\n    ILinkObject,\r\n    IRichTextHtmlParser,\r\n    IRichTextReplacements,\r\n    IRichTextResolverResult,\r\n} from '../parse-models';\r\nimport { parserConfiguration } from '../parser-configuration';\r\n\r\nexport class Parse5RichTextParser implements IRichTextHtmlParser {\r\n    private readonly resolvedLinkedItemAttribute = 'data-sdk-resolved';\r\n\r\n    resolveRichTextElement(\r\n        contentItemCodename: string,\r\n        html: string,\r\n        elementName: string,\r\n        replacement: IRichTextReplacements,\r\n        config: IHtmlResolverConfig\r\n    ): IRichTextResolverResult {\r\n        // create document\r\n        const documentFragment = parseFragment(html) as DefaultTreeDocumentFragment;\r\n\r\n        // get all linked items\r\n        const result = this.processRichTextElement(\r\n            contentItemCodename,\r\n            elementName,\r\n            this.getChildNodes(documentFragment),\r\n            replacement,\r\n            config,\r\n            {\r\n                links: [],\r\n                linkedItems: [],\r\n                images: []\r\n            }\r\n        );\r\n\r\n        const resolvedHtml = serialize(documentFragment);\r\n\r\n        return {\r\n            links: result.links,\r\n            linkedItems: result.linkedItems,\r\n            images: result.images,\r\n            resolvedHtml: resolvedHtml\r\n        };\r\n    }\r\n\r\n    private processRichTextElement(\r\n        contentItemCodename: string,\r\n        elementName: string,\r\n        elements: DefaultTreeElement[],\r\n        replacement: IRichTextReplacements,\r\n        config: IHtmlResolverConfig,\r\n        result: IFeaturedObjects\r\n    ): IFeaturedObjects {\r\n        if (!elements || elements.length === 0) {\r\n            // there are no more elements\r\n        } else {\r\n            elements.forEach(element => {\r\n                if (element.attrs) {\r\n                    this.processModularContentItem(elementName, element, replacement, config, result);\r\n                    this.processImage(\r\n                        contentItemCodename,\r\n                        elementName,\r\n                        element,\r\n                        replacement,\r\n                        config,\r\n                        result\r\n                    );\r\n                    this.processLink(element, replacement, config, result);\r\n                }\r\n\r\n                if (element.childNodes) {\r\n                    // recursively process all childs\r\n                    this.processRichTextElement(\r\n                        contentItemCodename,\r\n                        elementName,\r\n                        this.getChildNodes(element),\r\n                        replacement,\r\n                        config,\r\n                        result\r\n                    );\r\n                }\r\n            });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private processImage(\r\n        contentItemCodename: string,\r\n        elementName: string,\r\n        element: DefaultTreeElement,\r\n        replacement: IRichTextReplacements,\r\n        config: IHtmlResolverConfig,\r\n        result: IFeaturedObjects\r\n    ): void {\r\n        const attributes = element.attrs;\r\n\r\n        if (element.nodeName !== parserConfiguration.imageElementData.nodeName) {\r\n            // node is not an image\r\n            return;\r\n        }\r\n\r\n        // get image id attribute\r\n        const dataImageIdAttribute = attributes.find(m => m.name === parserConfiguration.imageElementData.dataImageId);\r\n        if (!dataImageIdAttribute) {\r\n            // image tag does not have image id attribute\r\n            return;\r\n        }\r\n\r\n        // prepare link object\r\n        const image: IImageObject = {\r\n            imageId: dataImageIdAttribute.value\r\n        };\r\n\r\n        // add link to result\r\n        result.images.push(image);\r\n\r\n        const linkResult = replacement.getImageResult(contentItemCodename, image.imageId, elementName);\r\n\r\n        // set url of image\r\n        const srcAttribute = attributes.find(m => m.name === parserConfiguration.imageElementData.srcAttribute);\r\n        if (srcAttribute) {\r\n            srcAttribute.value = linkResult.url;\r\n        }\r\n    }\r\n\r\n    private processLink(\r\n        element: DefaultTreeElement,\r\n        replacement: IRichTextReplacements,\r\n        config: IHtmlResolverConfig,\r\n        result: IFeaturedObjects\r\n    ): void {\r\n        const attributes = element.attrs;\r\n\r\n        if (element.nodeName !== parserConfiguration.linkElementData.nodeName) {\r\n            // node is not a link\r\n            return;\r\n        }\r\n\r\n        // get all links which have item it attribute, ignore all other links (they can be regular links in rich text)\r\n        const dataItemIdAttribute = attributes.find(m => m.name === parserConfiguration.linkElementData.dataItemId);\r\n        if (!dataItemIdAttribute) {\r\n            // its either a regular link or the attribute is not defined\r\n            return;\r\n        }\r\n\r\n        // prepare link object\r\n        const link: ILinkObject = {\r\n            dataItemId: dataItemIdAttribute ? dataItemIdAttribute.value : ''\r\n        };\r\n\r\n        // add link to result\r\n        result.links.push(link);\r\n\r\n        // get original link text (the one inside <a> tag from response)\r\n        let originalLinkText: string | undefined = undefined;\r\n\r\n        const linkTextNode = element.childNodes[0] as DefaultTreeTextNode;\r\n        if (linkTextNode) {\r\n            originalLinkText = linkTextNode.value;\r\n        }\r\n\r\n        const urlSlugResult = replacement.getUrlSlugResult(link.dataItemId, originalLinkText || '');\r\n\r\n        // html has priority over url\r\n        if (urlSlugResult.html) {\r\n            // replace entire link html\r\n            const linkHtml = (<IUrlSlugResolverResult>urlSlugResult).html\r\n                ? (<IUrlSlugResolverResult>urlSlugResult).html\r\n                : '';\r\n            if (linkHtml) {\r\n                const linkRootNodes = (parseFragment(linkHtml) as any).childNodes;\r\n\r\n                if (linkRootNodes.length !== 1) {\r\n                    throw Error(`Invalid number of root nodes.`);\r\n                }\r\n\r\n                const linkRootNode = linkRootNodes[0];\r\n                const linkNodes = linkRootNode.childNodes;\r\n\r\n                if (linkNodes.length !== 1) {\r\n                    throw Error(`When specifying 'html' in urlSlugResolver be sure to use single wrapper element.\r\n                    Valid syntax: '<p>data</p>'\r\n                    Invalid syntax: '<p><data></p><p>another data</p>'`);\r\n                }\r\n                element.attrs = linkRootNode.attrs; //  preserve attributes from top node\r\n                element.tagName = linkRootNodes[0].tagName; // use first node as a tag wrapper\r\n                element.childNodes = linkNodes;\r\n            }\r\n        } else if (urlSlugResult.url) {\r\n            // replace just link href\r\n            const hrefAttribute = attributes.find(m => m.name === 'href');\r\n            if (!hrefAttribute) {\r\n                // href attribute is missing\r\n                if (config.enableAdvancedLogging) {\r\n                    console.warn(\r\n                        `Cannot set url '${urlSlugResult}' because 'href' attribute is not present in the <a> tag. Please report this issue if you are seeing this. This warning can be turned off by disabling 'enableAdvancedLogging' option.`\r\n                    );\r\n                }\r\n            } else {\r\n                // get link url\r\n                const linkUrlResult: string | undefined =\r\n                    typeof urlSlugResult === 'string'\r\n                        ? <string>urlSlugResult\r\n                        : (<IUrlSlugResolverResult>urlSlugResult).url;\r\n                hrefAttribute.value = linkUrlResult ? linkUrlResult : '';\r\n            }\r\n        }\r\n    }\r\n\r\n    private processModularContentItem(\r\n        elementName: string,\r\n        element: DefaultTreeElement,\r\n        replacement: IRichTextReplacements,\r\n        config: IHtmlResolverConfig,\r\n        result: IFeaturedObjects\r\n    ): void {\r\n        const attributes = element.attrs;\r\n\r\n        const dataTypeAttribute = attributes.find(\r\n            m => m.name === parserConfiguration.modularContentElementData.dataType\r\n        );\r\n        const resolvedDataAttribute = attributes.find(m => m.name === this.resolvedLinkedItemAttribute);\r\n\r\n        // process linked itmes\r\n        if (dataTypeAttribute && !resolvedDataAttribute) {\r\n            // get type of resolving item\r\n            let type: RichTextItemDataType | undefined;\r\n            if (dataTypeAttribute.value === 'item') {\r\n                type = RichTextItemDataType.Item;\r\n\r\n                // get codename of the modular content\r\n                const dataCodenameAttribute: Attribute | undefined = attributes.find(\r\n                    m => m.name === parserConfiguration.modularContentElementData.dataCodename\r\n                );\r\n                if (dataCodenameAttribute == null) {\r\n                    throw Error(\r\n                        `The '${parserConfiguration.modularContentElementData.dataCodename}' attribute is missing and therefore linked item cannot be retrieved`\r\n                    );\r\n                }\r\n\r\n                const itemCodename = dataCodenameAttribute.value;\r\n                let itemType: ContentItemType = 'linkedItem';\r\n\r\n                // get rel attribute for components\r\n                const relAttribute: Attribute | undefined = attributes.find(\r\n                    m => m.name === parserConfiguration.modularContentElementData.relAttribute\r\n                );\r\n                if (relAttribute && relAttribute.value === parserConfiguration.modularContentElementData.componentRel) {\r\n                    itemType = 'component';\r\n                }\r\n\r\n                const linkedItem: ILinkedItemContentObject = {\r\n                    dataCodename: dataCodenameAttribute ? dataCodenameAttribute.value : '',\r\n                    dataType: dataTypeAttribute ? dataTypeAttribute.value : '',\r\n                    itemType: itemType\r\n                };\r\n\r\n                // add to result\r\n                result.linkedItems.push(linkedItem);\r\n\r\n                const linkedItemHtml = replacement.getLinkedItemHtml(itemCodename, type);\r\n\r\n                // flag element as resolved to avoid duplicate resolving\r\n                element.attrs.push({\r\n                    name: this.resolvedLinkedItemAttribute,\r\n                    value: '1'\r\n                });\r\n\r\n                // get html\r\n                const resultHtml = this.resolveRichTextElement(\r\n                    itemCodename,\r\n                    linkedItemHtml,\r\n                    elementName,\r\n                    replacement,\r\n                    config\r\n                ).resolvedHtml;\r\n\r\n                // replace 'object' tag name\r\n                element.tagName = config.linkedItemWrapperTag;\r\n\r\n                // add classes\r\n                element.attrs.push({\r\n                    name: 'class',\r\n                    value: config.linkedItemWrapperClasses.map(m => m).join(' ')\r\n                });\r\n\r\n                // get serialized set of nodes from HTML\r\n                const serializedChildNodes = parseFragment(resultHtml) as any;\r\n\r\n                // add child nodes\r\n                element.childNodes = serializedChildNodes.childNodes;\r\n            } else {\r\n                if (config.enableAdvancedLogging) {\r\n                    console.warn(\r\n                        `Rich text element contains object with unsupported data type '${dataTypeAttribute.value}'`\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private getChildNodes(documentFragment: DefaultTreeElement | DefaultTreeDocumentFragment): DefaultTreeElement[] {\r\n        return (documentFragment as DefaultTreeDocumentFragment).childNodes as DefaultTreeElement[];\r\n    }\r\n}\r\n","export * from './parse-models';\r\nexport * from './parser-adapter';\r\nexport * from './parser-configuration';\r\nexport * from './adapters/browser-rich-text.parser';\r\nexport * from './adapters/parse5-rich-text.parser';\r\n","import { IRichTextHtmlParser } from './parse-models';\r\n\r\nexport function getParserAdapter(): IRichTextHtmlParser {\r\n    let parser: IRichTextHtmlParser | undefined;\r\n\r\n    const adapter = require('./adapters/browser-rich-text.parser');\r\n\r\n    // instantiate class\r\n    parser = new adapter.BrowserRichTextParser();\r\n\r\n    if (!parser) {\r\n        throw Error(`Invalid or unsupported parser adapter`);\r\n    }\r\n\r\n    return parser;\r\n}\r\n\r\n","\r\nexport const parserConfiguration = {\r\n    linkedItemWrapperElem: 'div',\r\n    modularContentElementData: {\r\n        type: 'application/kenticocloud',\r\n        dataType: 'data-type',\r\n        dataCodename: 'data-codename',\r\n        relAttribute: 'data-rel',\r\n        componentRel: 'component'\r\n    },\r\n    linkElementData: {\r\n        nodeName: 'a',\r\n        dataItemId: 'data-item-id',\r\n    },\r\n    imageElementData: {\r\n        nodeName: 'img',\r\n        dataImageId: 'data-image-id',\r\n        srcAttribute: 'src'\r\n    }\r\n};\r\n","import { IHeader, IQueryParameter } from '@kentico/kontent-core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport { IKontentResponse, IQueryConfig, Parameters } from '../../models';\r\nimport { QueryService } from '../../services';\r\n\r\nexport abstract class BaseQuery<TResponse extends IKontentResponse<any>> {\r\n  protected parameters: IQueryParameter[] = [];\r\n  protected customUrl?: string;\r\n\r\n  protected abstract _queryConfig: IQueryConfig;\r\n\r\n  constructor(\r\n    protected config: IDeliveryClientConfig,\r\n    protected queryService: QueryService\r\n  ) { }\r\n\r\n  abstract getUrl(): string;\r\n  abstract toObservable(): Observable<TResponse>;\r\n\r\n  /**\r\n   * Adds parameter to query\r\n   * @param name Name of parameter\r\n   * @param value Value of parameter\r\n   */\r\n  withParameter(name: string, value: string): this {\r\n    this.parameters.push(new Parameters.QueryParameter(name, value));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds parameters to query\r\n   * @param parameters Array of parameters\r\n   */\r\n  withParameters(parameters: IQueryParameter[]): this {\r\n    this.parameters.push(...parameters);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Gets headers used by this query\r\n   */\r\n  getHeaders(): IHeader[] {\r\n    return this.queryService.getHeaders(this._queryConfig);\r\n  }\r\n\r\n  withUrl(url: string): this {\r\n    this.customUrl = url;\r\n    return this;\r\n  }\r\n\r\n  getParameters(): IQueryParameter[] {\r\n    return this.parameters;\r\n  }\r\n\r\n  toPromise(): Promise<TResponse> {\r\n    return this.toObservable().toPromise();\r\n  }\r\n\r\n  protected resolveUrlInternal(action: string): string {\r\n    // use custom URL if user specified it\r\n    if (this.customUrl) {\r\n      return this.customUrl;\r\n    }\r\n\r\n    // use original url\r\n    return this.queryService.getUrl(\r\n      action,\r\n      this._queryConfig,\r\n      this.getParameters()\r\n    );\r\n  }\r\n}\r\n","import { IHeader } from '@kentico/kontent-core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport { ElementResponses, IElementQueryConfig, IKontentResponse, IKontentResponseDebug } from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseQuery } from '../common/base-query.class';\r\n\r\nexport abstract class BaseElementQuery<TResponse extends IKontentResponse<IKontentResponseDebug>> extends BaseQuery<\r\n    TResponse\r\n> {\r\n    protected _queryConfig: IElementQueryConfig = {};\r\n\r\n    constructor(protected config: IDeliveryClientConfig, protected queryService: QueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    /**\r\n     * Use to configure query\r\n     * @param queryConfig Query configuration\r\n     */\r\n    queryConfig(queryConfig: IElementQueryConfig): this {\r\n        this._queryConfig = queryConfig;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets headers used by this query\r\n     */\r\n    getHeaders(): IHeader[] {\r\n        return this.queryService.getHeaders(this._queryConfig);\r\n    }\r\n\r\n    protected getElementQueryUrl(typeCodename: string, elementCodename: string): string {\r\n        const action = '/types/' + typeCodename + '/elements/' + elementCodename;\r\n\r\n        return super.resolveUrlInternal(action);\r\n    }\r\n\r\n    protected runElementQuery(\r\n        typeCodename: string,\r\n        elementCodename: string\r\n    ): Observable<ElementResponses.ViewContentTypeElementResponse> {\r\n        return this.queryService.getElement(this.getElementQueryUrl(typeCodename, elementCodename), this._queryConfig);\r\n    }\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport { ElementResponses } from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseElementQuery } from './base-element-query.class';\r\n\r\nexport class ElementQuery extends BaseElementQuery<ElementResponses.ViewContentTypeElementResponse> {\r\n\r\n    constructor(\r\n        protected config: IDeliveryClientConfig,\r\n        protected queryService: QueryService,\r\n        private typeCodename: string,\r\n        private elementCodename: string\r\n    ) {\r\n        super(config, queryService);\r\n\r\n        if (!typeCodename) {\r\n            throw Error(`Codename of the type has to be provided`);\r\n        }\r\n\r\n        if (!elementCodename) {\r\n            throw Error(`Codename of the element has to be provided`);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Gets the runnable Observable\r\n    */\r\n    toObservable(): Observable<ElementResponses.ViewContentTypeElementResponse> {\r\n        return super.runElementQuery(this.typeCodename, this.elementCodename);\r\n    }\r\n\r\n    /**\r\n    * Gets 'Url' representation of query\r\n    */\r\n    getUrl(): string {\r\n        return super.getElementQueryUrl(this.typeCodename, this.elementCodename);\r\n    }\r\n}\r\n","export * from './common/base-query.class';\r\nexport * from './element/base-element-query.class';\r\nexport * from './element/element-query.class';\r\nexport * from './item/base-item-query.class';\r\nexport * from './item/multiple-item-query.class';\r\nexport * from './item/single-item-query.class';\r\nexport * from './taxonomy/base-taxonomy-query.class';\r\nexport * from './taxonomy/taxonomies-query.class';\r\nexport * from './taxonomy/taxonomy-query.class';\r\nexport * from './type/base-type-query.class';\r\nexport * from './type/multiple-type-query.class';\r\nexport * from './type/single-type-query.class';\r\nexport * from './items-feed/items-feed-query.class';\r\nexport * from './items-feed/items-feed-query-all.class';\r\n","import { Observable } from 'rxjs';\r\n\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport {\r\n    ContentItem,\r\n    IItemQueryConfig,\r\n    IKontentResponse,\r\n    IKontentResponseDebug,\r\n    ItemResponses,\r\n    Parameters,\r\n} from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseQuery } from '../common/base-query.class';\r\n\r\nexport abstract class BaseItemQuery<\r\n    TItem extends ContentItem,\r\n    TResponse extends IKontentResponse<IKontentResponseDebug | IKontentResponseDebug[]>\r\n> extends BaseQuery<TResponse> {\r\n    protected _queryConfig: IItemQueryConfig = {};\r\n\r\n    constructor(protected config: IDeliveryClientConfig, protected queryService: QueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    /**\r\n     * Used to configure query\r\n     * @param queryConfig Query configuration\r\n     */\r\n    queryConfig(queryConfig: IItemQueryConfig): this {\r\n        this._queryConfig = queryConfig;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Language codename\r\n     * @param languageCodename Codename of the language\r\n     */\r\n    languageParameter(languageCodename: string): this {\r\n        this.parameters.push(new Parameters.LanguageParameter(languageCodename));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used to limit the number of elements returned by query.\r\n     * @param elementCodenames Array of element codenames to fetch\r\n     */\r\n    elementsParameter(elementCodenames: string[]): this {\r\n        this.parameters.push(new Parameters.ElementsParameter(elementCodenames));\r\n        return this;\r\n    }\r\n\r\n    protected getItemFeedQueryUrl(): string {\r\n        const action = '/items-feed';\r\n\r\n        // add default language is necessry\r\n        this.processDefaultLanguageParameter();\r\n\r\n        return super.resolveUrlInternal(action);\r\n    }\r\n\r\n    protected getMultipleItemsQueryUrl(): string {\r\n        const action = '/items';\r\n\r\n        // add default language is necessry\r\n        this.processDefaultLanguageParameter();\r\n\r\n        return super.resolveUrlInternal(action);\r\n    }\r\n\r\n    protected getSingleItemQueryUrl(codename: string): string {\r\n        const action = '/items/' + codename;\r\n\r\n        // add default language is necessry\r\n        this.processDefaultLanguageParameter();\r\n\r\n        return super.resolveUrlInternal(action);\r\n    }\r\n\r\n    protected runItemsFeedQuery(): Observable<ItemResponses.ItemsFeedResponse<TItem>> {\r\n        const url = this.getItemFeedQueryUrl();\r\n\r\n        return this.queryService.getItemsFeed(url, this._queryConfig);\r\n    }\r\n\r\n    protected runItemsFeedQueryAll(): Observable<ItemResponses.ItemsFeedAllResponse<TItem>> {\r\n        const url = this.getItemFeedQueryUrl();\r\n\r\n        return this.queryService.getItemsFeedAll(url, this._queryConfig);\r\n    }\r\n\r\n    protected runMultipleItemsQuery(): Observable<ItemResponses.ListContentItemsResponse<TItem>> {\r\n        const url = this.getMultipleItemsQueryUrl();\r\n\r\n        return this.queryService.getMultipleItems(url, this._queryConfig);\r\n    }\r\n\r\n    protected runSingleItemQuery(codename: string): Observable<ItemResponses.ViewContentItemResponse<TItem>> {\r\n        const url = this.getSingleItemQueryUrl(codename);\r\n\r\n        return this.queryService.getSingleItem(url, this._queryConfig);\r\n    }\r\n\r\n    private processDefaultLanguageParameter(): void {\r\n        // add default language if none is specified && default language is specified globally\r\n        if (this.config.defaultLanguage) {\r\n            const languageParameter = this.getParameters().find(m => m.getParam() === 'language');\r\n            if (!languageParameter) {\r\n                // language parameter was not specified in query, use globally defined language\r\n                this.parameters.push(new Parameters.LanguageParameter(this.config.defaultLanguage));\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport { ContentItem, Filters, ItemResponses, Parameters, SortOrder } from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseItemQuery } from './base-item-query.class';\r\n\r\nexport class MultipleItemQuery<TItem extends ContentItem> extends BaseItemQuery<\r\n    TItem,\r\n    ItemResponses.ListContentItemsResponse<TItem>\r\n> {\r\n    constructor(protected config: IDeliveryClientConfig, protected queryService: QueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    /**\r\n     * Adds information about the total number of content items matching your query.\r\n     * When set to true, the pagination object returned in the API response contains\r\n     * an additional total_count property.\r\n     */\r\n    includeTotalCountParameter(): this {\r\n        this.parameters.push(new Parameters.IncludeTotalCountParameter());\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets only item of given type\r\n     * @param type Codename of type to get\r\n     */\r\n    type(type: string): this {\r\n        this.parameters.push(new Filters.TypeFilter(type));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets items of given types (logical or)\r\n     * I.e. get items of either 'Actor' or 'Movie' type\r\n     * @param types Types to get\r\n     */\r\n    types(types: string[]): this {\r\n        this.parameters.push(new Filters.TypeFilter(types));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets only item from given collection\r\n     * @param collection Codename of collection to get\r\n     */\r\n    collection(collection: string): this {\r\n        this.parameters.push(new Filters.CollectionFilter(collection));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets items from given collections (logical or)\r\n     * I.e. get items of either 'default' or 'christmas-campaign' collection\r\n     * @param collections Collections to get\r\n     */\r\n    collections(collections: string[]): this {\r\n        this.parameters.push(new Filters.CollectionFilter(collections));\r\n        return this;\r\n    }\r\n\r\n     /**\r\n     * Empty filter condition\r\n     * @param element Element with empty value\r\n     */\r\n    emptyFilter(element: string): this {\r\n        this.parameters.push(new Filters.EmptyFilter(element));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Not empty filter condition\r\n     * @param element Element with non-empty value\r\n     */\r\n    notEmptyFilter(element: string): this {\r\n        this.parameters.push(new Filters.NotEmptyFilter(element));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Equals filter condition\r\n     * @param element Element to filter. Example: 'elements.movie'\r\n     * @param value Value to match. Example: 'Kingsman'\r\n     */\r\n    equalsFilter(element: string, value: string): this {\r\n        this.parameters.push(new Filters.EqualsFilter(element, value));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Not equals filter condition\r\n     * @param element Element to filter. Example: 'elements.movie'\r\n     * @param value Value to match. Example: 'Kingsman'\r\n     */\r\n    notEqualsFilter(element: string, value: string): this {\r\n        this.parameters.push(new Filters.NotEqualsFilter(element, value));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * All filter\r\n     * @param element Element to filter.\r\n     * @param values Values\r\n     */\r\n    allFilter(element: string, values: string[]): this {\r\n        this.parameters.push(new Filters.AllFilter(element, values));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Any filter\r\n     * @param element Element to filter.\r\n     * @param values Values\r\n     */\r\n    anyFilter(element: string, values: string[]): this {\r\n        this.parameters.push(new Filters.AnyFilter(element, values));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Contains filter\r\n     * @param element Element to filter.\r\n     * @param values Values\r\n     */\r\n    containsFilter(element: string, values: string[]): this {\r\n        this.parameters.push(new Filters.ContainsFilter(element, values));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Greater then filter\r\n     * @param element Element to filter.\r\n     * @param value Value\r\n     */\r\n    greaterThanFilter(element: string, value: string): this {\r\n        this.parameters.push(new Filters.GreaterThanFilter(element, value));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Greater then or equals filter\r\n     * @param element Element to filter.\r\n     * @param value Value\r\n     */\r\n    greaterThanOrEqualFilter(element: string, value: string): this {\r\n        this.parameters.push(new Filters.GreaterThanOrEqualFilter(element, value));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Indicates depth of query that affects loading of nested linked items.\r\n     * @param depth Depth of the query (> 0)\r\n     */\r\n    depthParameter(depth: number): this {\r\n        this.parameters.push(new Parameters.DepthParameter(depth));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * In filter\r\n     * @param element Element to filter.\r\n     * @param values Values\r\n     */\r\n    inFilter(element: string, values: string[]): this {\r\n        this.parameters.push(new Filters.InFilter(element, values));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Not in filter\r\n     * @param element Element to filter.\r\n     * @param values Values\r\n     */\r\n    notInFilter(element: string, values: string[]): this {\r\n        this.parameters.push(new Filters.NotInFilter(element, values));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Less then filter\r\n     * @param element Element to filter.\r\n     * @param value Value\r\n     */\r\n    lessThanFilter(element: string, value: string): this {\r\n        this.parameters.push(new Filters.LessThanFilter(element, value));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param element Element to filter.\r\n     * @param value Value\r\n     */\r\n    lessThanOrEqualFilter(element: string, value: string): this {\r\n        this.parameters.push(new Filters.LessThanOrEqualFilter(element, value));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param element Element to filter.\r\n     * @param lowerValue Lower value of range (e.g. 2)\r\n     * @param higherValue Higher value of range (e.g. 10)\r\n     */\r\n    rangeFilter(element: string, lowerValue: number, higherValue: number): this {\r\n        this.parameters.push(new Filters.RangeFilter(element, lowerValue, higherValue));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Limits the number of items returned by query\r\n     * @param limit Number of items to load\r\n     */\r\n    limitParameter(limit: number): this {\r\n        this.parameters.push(new Parameters.LimitParameter(limit));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Orders query based on given element and sort order\r\n     * @param element Element by which to order\r\n     * @param sortOrder Asc/Desc order type\r\n     */\r\n    orderParameter(element: string, sortOrder: SortOrder): this {\r\n        this.parameters.push(new Parameters.OrderParameter(element, sortOrder));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Sets descending order on given element\r\n     * @param element Element by which to order\r\n     */\r\n    orderByDescending(element: string): this {\r\n        this.parameters.push(new Parameters.OrderParameter(element, SortOrder.desc));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Sets Ascending order on given element\r\n     * @param element Element by which to order\r\n     */\r\n    orderByAscending(element: string): this {\r\n        this.parameters.push(new Parameters.OrderParameter(element, SortOrder.asc));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Skips the selected number of items\r\n     * @param skip Number of items to skip\r\n     */\r\n    skipParameter(skip: number): this {\r\n        this.parameters.push(new Parameters.SkipParameter(skip));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets the runnable Observable\r\n     */\r\n    toObservable(): Observable<ItemResponses.ListContentItemsResponse<TItem>> {\r\n        return super.runMultipleItemsQuery();\r\n    }\r\n\r\n    /**\r\n     * Gets 'Url' representation of query\r\n     */\r\n    getUrl(): string {\r\n        return super.getMultipleItemsQueryUrl();\r\n    }\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport { ContentItem, ItemResponses, Parameters } from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseItemQuery } from './base-item-query.class';\r\n\r\nexport class SingleItemQuery<TItem extends ContentItem> extends BaseItemQuery<\r\n    TItem,\r\n    ItemResponses.ViewContentItemResponse<TItem>\r\n> {\r\n    constructor(\r\n        protected config: IDeliveryClientConfig,\r\n        protected queryService: QueryService,\r\n        private codename: string\r\n    ) {\r\n        super(config, queryService);\r\n\r\n        if (!codename) {\r\n            throw Error(`'codename' has to be configured for 'SingleItemQuery' query`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Indicates depth of query that affects loading of nested linked items.\r\n     * @param depth Depth of the query (> 0)\r\n     */\r\n    depthParameter(depth: number): this {\r\n        this.parameters.push(new Parameters.DepthParameter(depth));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets the runnable Observable\r\n     */\r\n    toObservable(): Observable<ItemResponses.ViewContentItemResponse<TItem>> {\r\n        return super.runSingleItemQuery(this.codename);\r\n    }\r\n\r\n    /**\r\n     * Gets 'Url' representation of query\r\n     */\r\n    getUrl(): string {\r\n        return super.getSingleItemQueryUrl(this.codename);\r\n    }\r\n}\r\n","import { IDeliveryClientConfig } from '../../config';\r\nimport { BaseKontentResponse, ContentItem, Filters, Parameters, SortOrder } from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseItemQuery } from '../item/base-item-query.class';\r\n\r\nexport abstract class BaseItemsFeedQuery<\r\n    TItem extends ContentItem,\r\n    TResponse extends BaseKontentResponse<any>\r\n> extends BaseItemQuery<TItem, TResponse> {\r\n    constructor(protected config: IDeliveryClientConfig, protected queryService: QueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    /**\r\n     * Gets only item of given type\r\n     * @param type Codename of type to get\r\n     */\r\n    type(type: string): this {\r\n        this.parameters.push(new Filters.TypeFilter(type));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets items of given types (logical or)\r\n     * I.e. get items of either 'Actor' or 'Movie' type\r\n     * @param types Types to get\r\n     */\r\n    types(types: string[]): this {\r\n        this.parameters.push(new Filters.TypeFilter(types));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Equals filter condition\r\n     * @param element Element to filter. Example: 'elements.movie'\r\n     * @param value Value to match. Example: 'Kingsman'\r\n     */\r\n    equalsFilter(element: string, value: string): this {\r\n        this.parameters.push(new Filters.EqualsFilter(element, value));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * All filter\r\n     * @param element Element to filter.\r\n     * @param values Values\r\n     */\r\n    allFilter(element: string, values: string[]): this {\r\n        this.parameters.push(new Filters.AllFilter(element, values));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Any filter\r\n     * @param element Element to filter.\r\n     * @param values Values\r\n     */\r\n    anyFilter(element: string, values: string[]): this {\r\n        this.parameters.push(new Filters.AnyFilter(element, values));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Contains filter\r\n     * @param element Element to filter.\r\n     * @param values Values\r\n     */\r\n    containsFilter(element: string, values: string[]): this {\r\n        this.parameters.push(new Filters.ContainsFilter(element, values));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Greater then filter\r\n     * @param element Element to filter.\r\n     * @param value Value\r\n     */\r\n    greaterThanFilter(element: string, value: string): this {\r\n        this.parameters.push(new Filters.GreaterThanFilter(element, value));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Greater then or equals filter\r\n     * @param element Element to filter.\r\n     * @param value Value\r\n     */\r\n    greaterThanOrEqualFilter(element: string, value: string): this {\r\n        this.parameters.push(new Filters.GreaterThanOrEqualFilter(element, value));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * In filter\r\n     * @param element Element to filter.\r\n     * @param values Values\r\n     */\r\n    inFilter(element: string, values: string[]): this {\r\n        this.parameters.push(new Filters.InFilter(element, values));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Less then filter\r\n     * @param element Element to filter.\r\n     * @param value Value\r\n     */\r\n    lessThanFilter(element: string, value: string): this {\r\n        this.parameters.push(new Filters.LessThanFilter(element, value));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param element Element to filter.\r\n     * @param value Value\r\n     */\r\n    lessThanOrEqualFilter(element: string, value: string): this {\r\n        this.parameters.push(new Filters.LessThanOrEqualFilter(element, value));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param element Element to filter.\r\n     * @param lowerValue Lower value of range (e.g. 2)\r\n     * @param higherValue Higher value of range (e.g. 10)\r\n     */\r\n    rangeFilter(element: string, lowerValue: number, higherValue: number): this {\r\n        this.parameters.push(new Filters.RangeFilter(element, lowerValue, higherValue));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Orders query based on given element and sort order\r\n     * @param element Element by which to order\r\n     * @param sortOrder Asc/Desc order type\r\n     */\r\n    orderParameter(element: string, sortOrder: SortOrder): this {\r\n        this.parameters.push(new Parameters.OrderParameter(element, sortOrder));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Sets descending order on given element\r\n     * @param element Element by which to order\r\n     */\r\n    orderByDescending(element: string): this {\r\n        this.parameters.push(new Parameters.OrderParameter(element, SortOrder.desc));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Sets Ascending order on given element\r\n     * @param element Element by which to order\r\n     */\r\n    orderByAscending(element: string): this {\r\n        this.parameters.push(new Parameters.OrderParameter(element, SortOrder.asc));\r\n        return this;\r\n    }\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport { ContentItem, ItemResponses } from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseItemsFeedQuery } from './base-items-feed-query.class';\r\n\r\nexport class ItemsFeedQueryAll<TItem extends ContentItem> extends BaseItemsFeedQuery<\r\n    TItem,\r\n    ItemResponses.ItemsFeedAllResponse<TItem>\r\n> {\r\n    constructor(protected config: IDeliveryClientConfig, protected queryService: QueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    /**\r\n     * Gets the runnable Observable\r\n     */\r\n    toObservable(): Observable<ItemResponses.ItemsFeedAllResponse<TItem>> {\r\n        return super.runItemsFeedQueryAll();\r\n    }\r\n\r\n    /**\r\n     * Gets 'Url' representation of query\r\n     */\r\n    getUrl(): string {\r\n        return super.getItemFeedQueryUrl();\r\n    }\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport { ContentItem, ItemResponses } from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseItemsFeedQuery } from './base-items-feed-query.class';\r\n\r\nexport class ItemsFeedQuery<TItem extends ContentItem> extends BaseItemsFeedQuery<\r\n    TItem,\r\n    ItemResponses.ItemsFeedResponse<TItem>\r\n> {\r\n    constructor(protected config: IDeliveryClientConfig, protected queryService: QueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    /**\r\n     * Gets the runnable Observable\r\n     */\r\n    toObservable(): Observable<ItemResponses.ItemsFeedResponse<TItem>> {\r\n        return super.runItemsFeedQuery();\r\n    }\r\n\r\n    /**\r\n     * Gets 'Url' representation of query\r\n     */\r\n    getUrl(): string {\r\n        return super.getItemFeedQueryUrl();\r\n    }\r\n}\r\n","import { IHeader } from '@kentico/kontent-core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport { IKontentResponse, ITaxonomyQueryConfig, TaxonomyResponses, IKontentResponseDebug } from '../../models/';\r\nimport { QueryService } from '../../services';\r\nimport { BaseQuery } from '../common/base-query.class';\r\n\r\nexport abstract class BaseTaxonomyQuery<TResponse extends IKontentResponse<IKontentResponseDebug>> extends BaseQuery<TResponse> {\r\n\r\n    /**\r\n     * Taxonomies endpoint URL action\r\n     */\r\n    protected readonly taxonomiesEndpoint: string = 'taxonomies';\r\n\r\n    /**\r\n     * Query configuration\r\n     */\r\n    protected _queryConfig: ITaxonomyQueryConfig = {};\r\n\r\n    constructor(\r\n        protected config: IDeliveryClientConfig,\r\n        protected queryService: QueryService\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    /**\r\n     * Used to configure query\r\n     * @param queryConfig Query configuration\r\n     */\r\n    queryConfig(queryConfig: ITaxonomyQueryConfig): this {\r\n        this._queryConfig = queryConfig;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets headers used by this query\r\n     */\r\n    getHeaders(): IHeader[] {\r\n        return this.queryService.getHeaders(this._queryConfig);\r\n    }\r\n\r\n    protected getTaxonomyQueryUrl(taxonomyCodename: string): string {\r\n        const action = '/' + this.taxonomiesEndpoint + '/' + taxonomyCodename;\r\n\r\n        return super.resolveUrlInternal(action);\r\n    }\r\n\r\n    protected getTaxonomiesQueryUrl(): string {\r\n        const action = '/' + this.taxonomiesEndpoint;\r\n\r\n        return super.resolveUrlInternal(action);\r\n    }\r\n\r\n    protected runTaxonomyQuery(codename: string): Observable<TaxonomyResponses.ViewTaxonomyGroupResponse> {\r\n        return this.queryService.getTaxonomy(this.getTaxonomyQueryUrl(codename), this._queryConfig);\r\n    }\r\n\r\n    protected runTaxonomiesQuery(): Observable<TaxonomyResponses.ListTaxonomyGroupsResponse> {\r\n        return this.queryService.getTaxonomies(this.getTaxonomiesQueryUrl(), this._queryConfig);\r\n    }\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport { Parameters, TaxonomyResponses } from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseTaxonomyQuery } from './base-taxonomy-query.class';\r\n\r\nexport class TaxonomiesQuery extends BaseTaxonomyQuery<TaxonomyResponses.ListTaxonomyGroupsResponse> {\r\n\r\n    constructor(\r\n        protected config: IDeliveryClientConfig,\r\n        protected queryService: QueryService\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    /**\r\n    * Limits the number of taxonomies returned by query\r\n    * @param limit Number of taxonomies to load\r\n    */\r\n    limitParameter(limit: number): this {\r\n        this.parameters.push(new Parameters.LimitParameter(limit));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n    * Skips the selected number of taxonomies\r\n    * @param skip Number of taxonomies to skip\r\n    */\r\n    skipParameter(skip: number): this {\r\n        this.parameters.push(new Parameters.SkipParameter(skip));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n    * Gets the runnable Observable\r\n    */\r\n    toObservable(): Observable<TaxonomyResponses.ListTaxonomyGroupsResponse> {\r\n        return super.runTaxonomiesQuery();\r\n    }\r\n\r\n    // debug\r\n\r\n    /**\r\n    * Gets 'Url' representation of query\r\n    */\r\n    getUrl(): string {\r\n        return super.getTaxonomiesQueryUrl();\r\n    }\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport { TaxonomyResponses } from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseTaxonomyQuery } from './base-taxonomy-query.class';\r\n\r\nexport class TaxonomyQuery extends BaseTaxonomyQuery<TaxonomyResponses.ViewTaxonomyGroupResponse> {\r\n\r\n    constructor(\r\n        protected config: IDeliveryClientConfig,\r\n        protected queryService: QueryService,\r\n        private taxonomyCodename: string\r\n    ) {\r\n        super(config, queryService);\r\n\r\n        if (!taxonomyCodename) {\r\n            throw Error(`Cannot create taxonomy query without codename of the taxonomy`);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Gets the runnable Observable\r\n    */\r\n    toObservable(): Observable<TaxonomyResponses.ViewTaxonomyGroupResponse> {\r\n        return super.runTaxonomyQuery(this.taxonomyCodename);\r\n    }\r\n\r\n    /**\r\n    * Gets 'Url' representation of query\r\n    */\r\n    getUrl(): string {\r\n        return super.getTaxonomyQueryUrl(this.taxonomyCodename);\r\n    }\r\n}\r\n","import { IHeader, IQueryParameter } from '@kentico/kontent-core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport { IContentTypeQueryConfig, IKontentResponse, IKontentResponseDebug, TypeResponses } from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseQuery } from '../common/base-query.class';\r\n\r\nexport abstract class BaseTypeQuery<TResponse extends IKontentResponse<IKontentResponseDebug>> extends BaseQuery<\r\n    TResponse\r\n> {\r\n    protected parameters: IQueryParameter[] = [];\r\n    protected _queryConfig: IContentTypeQueryConfig = {};\r\n\r\n    constructor(protected config: IDeliveryClientConfig, protected queryService: QueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    /**\r\n     * Used to configure query\r\n     * @param queryConfig Query configuration\r\n     */\r\n    queryConfig(queryConfig: IContentTypeQueryConfig): this {\r\n        this._queryConfig = queryConfig;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets headers used by this query\r\n     */\r\n    getHeaders(): IHeader[] {\r\n        return this.queryService.getHeaders(this._queryConfig);\r\n    }\r\n\r\n    protected getSingleTypeQueryUrl(codename: string): string {\r\n        const action = '/types/' + codename;\r\n\r\n        return super.resolveUrlInternal(action);\r\n    }\r\n\r\n    protected getMultipleTypesQueryUrl(): string {\r\n        const action = '/types';\r\n\r\n        return super.resolveUrlInternal(action);\r\n    }\r\n\r\n    protected runMultipleTypesQuery(): Observable<TypeResponses.ListContentTypesResponse> {\r\n        return this.queryService.getMultipleTypes(this.getMultipleTypesQueryUrl(), this._queryConfig);\r\n    }\r\n\r\n    protected runSingleTypeQuery(codename: string): Observable<TypeResponses.ViewContentTypeResponse> {\r\n        return this.queryService.getSingleType(this.getSingleTypeQueryUrl(codename), this._queryConfig);\r\n    }\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport { Parameters, TypeResponses } from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseTypeQuery } from './base-type-query.class';\r\n\r\nexport class MultipleTypeQuery extends BaseTypeQuery<TypeResponses.ListContentTypesResponse> {\r\n\r\n    constructor(\r\n        protected config: IDeliveryClientConfig,\r\n        protected queryService: QueryService\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    /**\r\n    * Limits the number of types returned by query\r\n    * @param limit Number of types to load\r\n    */\r\n    limitParameter(limit: number): this {\r\n        this.parameters.push(new Parameters.LimitParameter(limit));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Skips the selected number of types\r\n     * @param skip Number of types to skip\r\n     */\r\n    skipParameter(skip: number): this {\r\n        this.parameters.push(new Parameters.SkipParameter(skip));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n    * Gets the runnable Observable\r\n    */\r\n    toObservable(): Observable<TypeResponses.ListContentTypesResponse> {\r\n        return super.runMultipleTypesQuery();\r\n    }\r\n\r\n    /**\r\n    * Gets 'Url' representation of query\r\n    */\r\n    getUrl(): string {\r\n        return super.getMultipleTypesQueryUrl();\r\n    }\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport { TypeResponses } from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseTypeQuery } from './base-type-query.class';\r\n\r\nexport class SingleTypeQuery extends BaseTypeQuery<TypeResponses.ViewContentTypeResponse> {\r\n\r\n    constructor(\r\n        protected config: IDeliveryClientConfig,\r\n        protected queryService: QueryService,\r\n        private typeCodename: string\r\n    ) {\r\n        super(config, queryService);\r\n\r\n        if (!typeCodename) {\r\n            throw Error(`Cannot create type query without the codename of the type`);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Gets the runnable Observable\r\n    */\r\n    toObservable(): Observable<TypeResponses.ViewContentTypeResponse> {\r\n        return super.runSingleTypeQuery(this.typeCodename);\r\n    }\r\n\r\n    /**\r\n    * Gets 'Url' representation of query\r\n    */\r\n    getUrl(): string {\r\n        return super.getSingleTypeQueryUrl(this.typeCodename);\r\n    }\r\n}\r\n","import { ItemContracts } from '../data-contracts';\r\nimport { ContentItem, ContentItemSystemAttributes, IContentItem, ItemResolver, ITypeResolverData } from '../models';\r\nimport { TypeResolver } from '../models/item/type-resolver.class';\r\n\r\nexport class DeliveryItemStronglyTypeResolver {\r\n\r\n    createEmptyItemInstanceOfType<TItem extends IContentItem = IContentItem>(\r\n        type: string,\r\n        typeResolvers: TypeResolver[]\r\n    ): TItem {\r\n        const resolver = this.getTypeResolver(type, typeResolvers);\r\n        if (!resolver) {\r\n            return this.createContentItem(undefined) as TItem;\r\n        }\r\n        return this.createInstanceWithResolver<TItem>(resolver, undefined);\r\n    }\r\n\r\n    /**\r\n     * Creates item instance using either TypeResolver (if registered) or returns ContentItem\r\n     */\r\n    createItemInstance<TItem extends IContentItem = IContentItem>(\r\n        data: ITypeResolverData,\r\n        typeResolvers: TypeResolver[],\r\n        itemResolver?: ItemResolver\r\n    ): TItem {\r\n        let itemInstance: TItem | undefined;\r\n\r\n        if (itemResolver) {\r\n            itemInstance = itemResolver(data.item) as TItem;\r\n        }\r\n\r\n        if (!itemInstance) {\r\n            const typeResolver = this.getTypeResolver(data.item.system.type, typeResolvers);\r\n            if (typeResolver) {\r\n                // type resolver is registered, create new instance of given type\r\n                itemInstance = this.createInstanceWithResolver<TItem>(typeResolver, data);\r\n            } else {\r\n                // not type resolver is register for this type, use ContentItem\r\n                itemInstance = this.createContentItem(data.item) as TItem;\r\n            }\r\n        }\r\n\r\n        if (!itemInstance) {\r\n            throw Error(`Item with codename '${data.item.system.codename}' could not be instantiated`);\r\n        }\r\n\r\n        this.assignRequiredContentItemData(itemInstance, data.item);\r\n        return itemInstance;\r\n    }\r\n\r\n    /**\r\n     * Maps raw system response to strongly typed class\r\n     * @param rawSystem Raw system response\r\n     */\r\n    mapSystemAttributes(rawSystem: ItemContracts.IContentItemSystemAttributesContract): ContentItemSystemAttributes {\r\n        return new ContentItemSystemAttributes({\r\n            name: rawSystem.name,\r\n            codename: rawSystem.codename,\r\n            id: rawSystem.id,\r\n            lastModified: new Date(rawSystem.last_modified),\r\n            language: rawSystem.language,\r\n            type: rawSystem.type,\r\n            sitemapLocations: rawSystem.sitemap_locations,\r\n            collection: rawSystem.collection\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Creates new instance of given type\r\n     * @param resolver Type resolver\r\n     * @param type Type of the content item\r\n     */\r\n    private createInstanceWithResolver<TItem extends IContentItem>(\r\n        resolver: TypeResolver,\r\n        data?: ITypeResolverData\r\n    ): TItem {\r\n        return resolver.resolve(data) as TItem;\r\n    }\r\n\r\n    /**\r\n     * Gets TypeResolver associated with given type (type = codename of Kentico Kontent content type)\r\n     * @param type Kentico Kontent content type codename\r\n     * @param resolvers Array of TypeResolver\r\n     */\r\n    private getTypeResolver(type: string, resolvers: TypeResolver[]): TypeResolver | undefined {\r\n        return resolvers.find(m => m.type.toLowerCase() === type.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Creates base ContentItem when content type does not have a strongly typed model\r\n     */\r\n    private createContentItem(item?: ItemContracts.IContentItemContract): IContentItem {\r\n        const contentItem = new ContentItem();\r\n        if (item) {\r\n            this.assignRequiredContentItemData(contentItem, item);\r\n        }\r\n        return contentItem;\r\n    }\r\n\r\n    /**\r\n     * Maps default properties (system & elements)\r\n     * @param item Mapped content item\r\n     * @param rawItem Raw content item from response\r\n     */\r\n    private assignRequiredContentItemData(item: IContentItem, rawItem: ItemContracts.IContentItemContract): void {\r\n        item.system = this.mapSystemAttributes(rawItem.system);\r\n        item._raw = rawItem;\r\n    }\r\n}\r\n\r\nexport const stronglyTypedResolver = new DeliveryItemStronglyTypeResolver();\r\n","export * from './delivery-item-strongly-type.resolver';\r\nexport * from './rich-text.resolver';\r\nexport * from './url-slug.resolver';\r\n\r\n\r\n","import { ElementModels, Elements } from '../elements';\r\nimport {\r\n    IContentItem,\r\n    IItemQueryConfig,\r\n    IRichTextImageResolverResult,\r\n    ItemRichTextResolver,\r\n    ItemUrlSlugResolver,\r\n    IUrlSlugResolverContext,\r\n    IUrlSlugResolverResult,\r\n    Link,\r\n    RichTextImage,\r\n    RichTextItemDataType,\r\n} from '../models';\r\nimport { IHtmlResolverConfig, IRichTextHtmlParser } from '../parser';\r\n\r\nexport class RichTextResolver {\r\n    /**\r\n     * Resolves linked items inside the Rich text element.\r\n     * Rich text resolved needs to be configured either on the model or query level\r\n     */\r\n    resolveData(\r\n        contentItemCodename: string,\r\n        html: string,\r\n        elementName: string,\r\n        data: {\r\n            richTextHtmlParser: IRichTextHtmlParser;\r\n            getLinkedItem: (codename: string) => IContentItem | undefined;\r\n            getGlobalUrlSlugResolver: (type: string) => ItemUrlSlugResolver | undefined;\r\n            links: Link[];\r\n            images: RichTextImage[];\r\n            enableAdvancedLogging: boolean;\r\n            queryConfig: IItemQueryConfig;\r\n            linkedItemWrapperTag: string;\r\n            linkedItemWrapperClasses: string[];\r\n        }\r\n    ): ElementModels.IRichTextResolverData {\r\n        // prepare config\r\n        const config: IHtmlResolverConfig = {\r\n            enableAdvancedLogging: data.enableAdvancedLogging,\r\n            queryConfig: data.queryConfig,\r\n            linkedItemWrapperTag: data.linkedItemWrapperTag,\r\n            linkedItemWrapperClasses: data.linkedItemWrapperClasses\r\n        };\r\n\r\n        const result = data.richTextHtmlParser.resolveRichTextElement(\r\n            contentItemCodename,\r\n            html,\r\n            elementName,\r\n            {\r\n                getUrlSlugResult: (itemId: string, linkText: string) =>\r\n                    this.getUrlSlugResult({\r\n                        config: config,\r\n                        links: data.links,\r\n                        itemId: itemId,\r\n                        getLinkedItem: data.getLinkedItem,\r\n                        linkText: linkText,\r\n                        getGlobalUrlSlugResolver: data.getGlobalUrlSlugResolver\r\n                    }),\r\n                getLinkedItemHtml: (itemCodename: string, itemType: RichTextItemDataType) =>\r\n                    this.getLinkedItemHtml({\r\n                        itemCodename: itemCodename,\r\n                        config: config,\r\n                        getLinkedItem: data.getLinkedItem,\r\n                        itemType: itemType\r\n                    }),\r\n                getImageResult: (\r\n                    itemCodename: string,\r\n                    imageId: string,\r\n                    xElementName: string\r\n                ) =>\r\n                    this.getImageResult({\r\n                        getLinkedItem: data.getLinkedItem,\r\n                        itemCodename: itemCodename,\r\n                        config: config,\r\n                        imageId: imageId,\r\n                        images: data.images,\r\n                        html: html,\r\n                        elementName: xElementName\r\n                    })\r\n            },\r\n            {\r\n                enableAdvancedLogging: data.enableAdvancedLogging,\r\n                queryConfig: data.queryConfig,\r\n                linkedItemWrapperTag: data.linkedItemWrapperTag,\r\n                linkedItemWrapperClasses: data.linkedItemWrapperClasses\r\n            }\r\n        );\r\n\r\n        return {\r\n            html: result.resolvedHtml,\r\n            componentCodenames: result.linkedItems.filter(m => m.itemType === 'component').map(m => m.dataCodename),\r\n            linkedItemCodenames: result.linkedItems.filter(m => m.itemType === 'linkedItem').map(m => m.dataCodename)\r\n        };\r\n    }\r\n\r\n    private getImageResult(data: {\r\n        itemCodename: string;\r\n        getLinkedItem: (codename: string) => IContentItem | undefined;\r\n        config: IHtmlResolverConfig;\r\n        imageId: string;\r\n        images: RichTextImage[];\r\n        html: string;\r\n        elementName: string;\r\n    }): IRichTextImageResolverResult {\r\n        // get linked item\r\n        const linkedItem = data.getLinkedItem(data.itemCodename);\r\n\r\n        if (!linkedItem) {\r\n            if (data.config.queryConfig.throwErrorForMissingLinkedItems) {\r\n                throw Error(\r\n                    `Linked item with codename '${data.itemCodename}' was not found when resolving image with id '${data.imageId}'`\r\n                );\r\n            }\r\n            if (data.config.enableAdvancedLogging) {\r\n                console.warn(\r\n                    `Cannot resolve image with id '${data.imageId}' because linked item with codename '${data.itemCodename}' is not available. Empty image URL is returned.`\r\n                );\r\n            }\r\n            return {\r\n                url: ''\r\n            };\r\n        }\r\n\r\n        // if image is resolved within nested linked item (e.g. rich text element resolves html of linked item which contains images)\r\n        // the element name is equal to the 'root' element on which the html is resolved. For this reason we have to go through all\r\n        // elements in linked item and find the image there.\r\n        let image: RichTextImage | undefined;\r\n\r\n        // try getting image from direct element richtext\r\n        const richTextElement = linkedItem[data.elementName] as Elements.RichTextElement | undefined;\r\n        if (richTextElement) {\r\n            if (!(richTextElement instanceof Elements.RichTextElement)) {\r\n                throw Error(\r\n                    `Linked item with codename '${data.itemCodename}' has invalid element '${data.elementName}'. This element is required to be of RichText type.`\r\n                );\r\n            }\r\n            image = richTextElement.images.find(m => m.imageId === data.imageId);\r\n        }\r\n\r\n        // image may be nested, go through all available content items & elements\r\n        if (!image) {\r\n            image = this.tryGetImageFromLinkedItem(data.imageId, linkedItem, data.getLinkedItem);\r\n        }\r\n\r\n        if (!image) {\r\n            throw Error(\r\n                `Image with id '${data.imageId}' was not found in images data for linked item '${data.itemCodename}' and element '${data.elementName}'`\r\n            );\r\n        }\r\n\r\n        // use custom resolver if present\r\n        if (data.config.queryConfig.richTextImageResolver) {\r\n            return data.config.queryConfig.richTextImageResolver(image, data.elementName);\r\n        }\r\n\r\n        // use default resolver\r\n        return {\r\n            url: image.url\r\n        };\r\n    }\r\n\r\n    private tryGetImageFromLinkedItem(imageId: string, contentItem: IContentItem, getLinkedItem: (codename: string) => IContentItem | undefined): RichTextImage | undefined {\r\n        for (const propName of Object.keys(contentItem)) {\r\n            const richTextElementProperty = contentItem[propName];\r\n            if (richTextElementProperty instanceof Elements.RichTextElement) {\r\n                const image = richTextElementProperty.images.find(m => m.imageId === imageId);\r\n\r\n                if (image) {\r\n                    return image;\r\n                }\r\n\r\n                // try getting images recursively from referenced linked items\r\n                for (const linkedItemCodename of richTextElementProperty.linkedItemCodenames) {\r\n                    const linkedItem = getLinkedItem(linkedItemCodename);\r\n\r\n                    if (linkedItem) {\r\n                        const linkedImage = this.tryGetImageFromLinkedItem(imageId, linkedItem, getLinkedItem);\r\n\r\n                        if (linkedImage) {\r\n                            return linkedImage;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    private getLinkedItemHtml(data: {\r\n        itemCodename: string;\r\n        config: IHtmlResolverConfig;\r\n        getLinkedItem: (codename: string) => IContentItem | undefined;\r\n        itemType: RichTextItemDataType;\r\n    }): string {\r\n        // get linked item\r\n        const linkedItem = data.getLinkedItem(data.itemCodename);\r\n\r\n        // resolving cannot be done if the item is not present in response\r\n        if (!linkedItem) {\r\n            if (data.config.queryConfig.throwErrorForMissingLinkedItems) {\r\n                throw Error(\r\n                    `Linked item with codename '${data.itemCodename}' could not be found in response and therefore the HTML of rich text element could not be evaluated. Increasing 'depth' parameter of your query may solve this issue.`\r\n                );\r\n            }\r\n            if (data.config.enableAdvancedLogging) {\r\n                console.warn(\r\n                    `Cannot resolve linked item '${data.itemCodename}' because it is not available in response. Increasing 'depth' parameter of query may help. Item is resolved to empty string.`\r\n                );\r\n            }\r\n            return '';\r\n        }\r\n        // get html to replace object using Rich text resolver function\r\n        let resolver: ItemRichTextResolver<IContentItem> | undefined = undefined;\r\n        if (data.config.queryConfig.richTextResolver) {\r\n            // use resolved defined by query if available\r\n            resolver = data.config.queryConfig.richTextResolver;\r\n        } else {\r\n            // use default resolver defined in models\r\n            if (linkedItem._config && linkedItem._config.richTextResolver) {\r\n                resolver = linkedItem._config.richTextResolver;\r\n            }\r\n        }\r\n\r\n        // check resolver\r\n        if (!resolver) {\r\n            if (data.config.enableAdvancedLogging) {\r\n                console.warn(\r\n                    `Cannot resolve html of '${linkedItem.system.type}' used by item '${data.itemCodename}' type in 'RichTextElement' because no rich text resolver was configured. Item is resolved to empty string.`\r\n                );\r\n                return '';\r\n            }\r\n            return '';\r\n        }\r\n        return resolver(linkedItem, {\r\n            contentType: data.itemType\r\n        });\r\n    }\r\n\r\n    private getUrlSlugResult(data: {\r\n        itemId: string;\r\n        config: IHtmlResolverConfig;\r\n        links: Link[];\r\n        getLinkedItem: (codename: string) => IContentItem | undefined;\r\n        getGlobalUrlSlugResolver: (type: string) => ItemUrlSlugResolver | undefined;\r\n        linkText: string;\r\n    }): IUrlSlugResolverResult {\r\n        // find link with the id of content item\r\n        const existingLink = data.links.find(m => m.linkId === data.itemId);\r\n\r\n        if (!existingLink) {\r\n            if (data.config.enableAdvancedLogging) {\r\n                console.warn(`Cannot resolve URL for item '${data.itemId}' because no link with this id was found.`);\r\n            }\r\n            return {\r\n                html: '',\r\n                url: ''\r\n            };\r\n        }\r\n\r\n        const linkedItem = data.getLinkedItem(existingLink.codename);\r\n\r\n        // prepare link context\r\n        const linkContext: IUrlSlugResolverContext = {\r\n            linkText: data.linkText,\r\n            item: linkedItem,\r\n            linkId: data.itemId\r\n        };\r\n\r\n        // try to resolve link using the resolver passed through the query config\r\n        const queryUrlSlugResolver = data.config.queryConfig.urlSlugResolver;\r\n\r\n        if (queryUrlSlugResolver) {\r\n            // resolve url using query config\r\n            const queryUrlSlugResult = queryUrlSlugResolver(existingLink, linkContext);\r\n            if (queryUrlSlugResult) {\r\n                return queryUrlSlugResult;\r\n            }\r\n        }\r\n\r\n        // url was not resolved, try using global link resolver for item\r\n        const globalUrlSlugResolver = data.getGlobalUrlSlugResolver(existingLink.type);\r\n        if (globalUrlSlugResolver) {\r\n            const globalUrlSlugResolverResult = globalUrlSlugResolver(existingLink, linkContext);\r\n            if (globalUrlSlugResolverResult) {\r\n                return globalUrlSlugResolverResult;\r\n            }\r\n        }\r\n\r\n        // url wasn't resolved\r\n        if (data.config.enableAdvancedLogging) {\r\n            console.warn(\r\n                `Url for item of '${existingLink.type}' type with id '${existingLink.linkId}' wasn't resolved. This might be caused by missing 'urlSlugResolver' for given type.`\r\n            );\r\n        }\r\n\r\n        return {\r\n            html: '',\r\n            url: ''\r\n        };\r\n    }\r\n}\r\n\r\nexport const richTextResolver = new RichTextResolver();\r\n","import { IContentItem, ItemUrlSlugResolver, IUrlSlugResolverResult, Link } from '../models';\r\n\r\nexport class UrlSlugResolver {\r\n  resolveUrl(data: {\r\n    elementValue: string;\r\n    elementName: string;\r\n    item: IContentItem;\r\n    resolver: ItemUrlSlugResolver;\r\n    enableAdvancedLogging: boolean;\r\n  }): IUrlSlugResolverResult {\r\n    const url = data.resolver(\r\n      new Link({\r\n        urlSlug: data.elementValue,\r\n        type: data.item.system.type,\r\n        codename: data.item.system.codename,\r\n        linkId: data.item.system.id,\r\n      }), {\r\n        item: data.item,\r\n        linkId: undefined, // available only for links in rich text elements,\r\n        linkText: undefined // available only for links in rich text elements,\r\n      }\r\n    );\r\n\r\n    if (!url) {\r\n      if (data.enableAdvancedLogging) {\r\n        console.warn(\r\n        `'urlSlugResolver' is set, but url resolved for '${\r\n          data.item.system.codename\r\n          }' item of '${data.item.system.type}' type in element '${\r\n          data.elementName\r\n          }' is undefined. This warning can be turned off by disabling 'enableAdvancedLogging' option.`\r\n        );\r\n      }\r\n      return {\r\n        html: '',\r\n        url: ''\r\n      };\r\n    }\r\n\r\n    return url;\r\n  }\r\n}\r\n\r\nexport const urlSlugResolver = new UrlSlugResolver();\r\n","\nimport { ISDKInfo } from '@kentico/kontent-core';\nexport const sdkInfo: ISDKInfo = {\n    host: 'npmjs.com',\n    version: '10.1.0',\n    name: '@kentico/kontent-delivery'\n};\n","import {\r\n    IBaseResponse,\r\n    IHeader,\r\n    IHttpService,\r\n    IQueryParameter,\r\n    urlHelper,\r\n} from '@kentico/kontent-core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AxiosError } from 'axios';\r\n\r\nimport { IDeliveryClientConfig } from '../config';\r\nimport { IQueryConfig, ISDKInfo, IDeliveryErrorRaw, DeliveryError } from '../models/common/common-models';\r\nimport { IMappingService } from './mapping.service';\r\n\r\nexport abstract class BaseDeliveryQueryService {\r\n\r\n    /**\r\n     * Header name for SDK usage\r\n     */\r\n    private readonly sdkVersionHeader: string = 'X-KC-SDKID';\r\n\r\n    /**\r\n     * Default base Url to Kentico Delivery API\r\n     */\r\n    private readonly defaultBaseDeliveryApiUrl: string =\r\n        'https://deliver.kontent.ai';\r\n\r\n    /**\r\n     * Default preview url to Kentico Delivery API\r\n     */\r\n    private readonly defaultPreviewDeliveryApiUrl: string =\r\n        'https://preview-deliver.kontent.ai';\r\n\r\n    /**\r\n     * Name of the header used when 'wait for loading new content' feature is used\r\n     */\r\n    private readonly waitForLoadingNewContentHeader: string =\r\n        'X-KC-Wait-For-Loading-New-Content';\r\n\r\n    constructor(\r\n        /**\r\n         * Delivery client configuration\r\n         */\r\n        protected readonly config: IDeliveryClientConfig,\r\n        /**\r\n         * Http service for fetching data\r\n         */\r\n        protected readonly httpService: IHttpService,\r\n        /**\r\n         * Information about the SDK\r\n         */\r\n        protected readonly sdkInfo: ISDKInfo,\r\n        /**\r\n         * Mapping service\r\n         */\r\n        protected readonly mappingService: IMappingService\r\n    ) {\r\n    }\r\n\r\n    /**\r\n    * Gets url based on the action, query configuration and options (parameters)\r\n    * @param action Action (= url part) that will be hit\r\n    * @param queryConfig Query configuration\r\n    * @param options Query options\r\n    */\r\n    getUrl(\r\n        action: string,\r\n        queryConfig: IQueryConfig,\r\n        options?: IQueryParameter[]\r\n    ): string {\r\n        if (!this.config.proxy || !this.config.proxy.advancedProxyUrlResolver) {\r\n            return urlHelper.addOptionsToUrl(this.getBaseUrl(queryConfig) + action, options);\r\n        }\r\n        return this.config.proxy.advancedProxyUrlResolver({\r\n            queryParameters: options ? options : [],\r\n            queryString: urlHelper.addOptionsToUrl('', options),\r\n            action: action,\r\n            domain: this.getDomain(queryConfig),\r\n            queryConfig: queryConfig,\r\n            projectId: this.config.projectId\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Gets proper set of headers for given request.\r\n    * @param queryConfig Query configuration\r\n    * @param additionalHeaders Custom headers\r\n    */\r\n    getHeaders(queryConfig: IQueryConfig, additionalHeaders?: IHeader[]): IHeader[] {\r\n        const headers: IHeader[] = [];\r\n\r\n        if (additionalHeaders) {\r\n            headers.push(...additionalHeaders);\r\n        }\r\n\r\n        // add SDK Id header for monitoring SDK usage\r\n        headers.push(this.getSdkIdHeader());\r\n\r\n        // add headers from global config\r\n        if (this.config.globalHeaders) {\r\n            headers.push(...this.config.globalHeaders(queryConfig));\r\n        }\r\n\r\n        // add query / global headers from query config\r\n        headers.push(...this.getQueryHeaders(queryConfig));\r\n\r\n        if (\r\n            this.isPreviewModeEnabled(queryConfig) &&\r\n            this.isSecuredModeEnabled(queryConfig)\r\n        ) {\r\n            throw Error(`Preview & secured modes cannot be used at the same time.`);\r\n        }\r\n\r\n        // add preview header is required\r\n        if (this.isPreviewModeEnabled(queryConfig) && this.config.previewApiKey) {\r\n            headers.push(this.getAuthorizationHeader(this.config.previewApiKey));\r\n        }\r\n\r\n        // add secured mode header is required\r\n        if (this.isSecuredModeEnabled(queryConfig) && this.config.secureApiKey) {\r\n            headers.push(this.getAuthorizationHeader(this.config.secureApiKey));\r\n        }\r\n\r\n        // add 'X-KC-Wait-For-Loading-New-Content' header if required\r\n        if (this.shouldAddWaitForLoadingNewContentHeader(queryConfig)) {\r\n            headers.push({\r\n                header: this.waitForLoadingNewContentHeader,\r\n                value: 'true'\r\n            });\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    /**\r\n     * Http GET response\r\n     * @param url Url of request\r\n     * @param queryConfig Query config configuration\r\n     */\r\n    protected getResponse<TRawData>(\r\n        url: string,\r\n        queryConfig?: IQueryConfig,\r\n        serviceConfig?: {\r\n            headers?: IHeader[]\r\n        }\r\n    ): Observable<IBaseResponse<TRawData>> {\r\n        if (!queryConfig) {\r\n            queryConfig = {};\r\n        }\r\n\r\n        if (!serviceConfig) {\r\n            serviceConfig = {};\r\n        }\r\n\r\n        return this.httpService\r\n            .get<TRawData>(\r\n                {\r\n                    url: url,\r\n                },\r\n                {\r\n                    retryStrategy: this.config.retryStrategy,\r\n                    headers: this.getHeaders(queryConfig, serviceConfig.headers ? serviceConfig.headers : []),\r\n                    logErrorToConsole: this.config.isDeveloperMode\r\n                }\r\n            )\r\n            .pipe(\r\n                catchError((error: any) => {\r\n                    return throwError(this.mapDeliveryError(error));\r\n                })\r\n            );\r\n    }\r\n\r\n    /**\r\n    * Gets base URL of the request including the project Id\r\n    * @param queryConfig Query configuration\r\n    */\r\n    protected getBaseUrl(queryConfig: IQueryConfig): string {\r\n        return this.getDomain(queryConfig) + '/' + this.config.projectId;\r\n    }\r\n\r\n    /**\r\n    * Indicates if current query should use preview mode\r\n    * @param queryConfig Query configuration\r\n    */\r\n    private isPreviewModeEnabled(queryConfig: IQueryConfig): boolean {\r\n        if (queryConfig.usePreviewMode !== undefined) {\r\n            return queryConfig.usePreviewMode;\r\n        }\r\n\r\n        if (!this.config.globalQueryConfig) {\r\n            return false;\r\n        }\r\n\r\n        if (this.config.globalQueryConfig.usePreviewMode === true) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private getQueryHeaders(queryConfig: IQueryConfig): IHeader[] {\r\n        if (queryConfig.customHeaders) {\r\n            return queryConfig.customHeaders;\r\n        }\r\n\r\n        if (!this.config.globalQueryConfig || !this.config.globalQueryConfig.customHeaders) {\r\n            return [];\r\n        }\r\n        return this.config.globalQueryConfig.customHeaders;\r\n    }\r\n\r\n    private shouldAddWaitForLoadingNewContentHeader(queryConfig: IQueryConfig): boolean {\r\n        if (queryConfig.waitForLoadingNewContent !== undefined) {\r\n            return queryConfig.waitForLoadingNewContent;\r\n        }\r\n\r\n        if (!this.config.globalQueryConfig) {\r\n            return false;\r\n        }\r\n\r\n        if (this.config.globalQueryConfig.waitForLoadingNewContent === true) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n    * Indicates if current query should use secured mode\r\n    * @param queryConfig Query configuration\r\n    */\r\n    private isSecuredModeEnabled(queryConfig: IQueryConfig): boolean {\r\n        if (queryConfig.useSecuredMode !== undefined) {\r\n            return queryConfig.useSecuredMode;\r\n        }\r\n\r\n        if (!this.config.globalQueryConfig) {\r\n            return false;\r\n        }\r\n\r\n        if (this.config.globalQueryConfig.useSecuredMode === true) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n    * Gets preview or standard URL based on client and query configuration\r\n    * @param queryConfig Query configuration\r\n    */\r\n    private getDomain(queryConfig: IQueryConfig): string {\r\n        if (this.isPreviewModeEnabled(queryConfig)) {\r\n            if (!this.config.previewApiKey) {\r\n                throw Error(\r\n                    `Preview API key is not configured.`\r\n                );\r\n            }\r\n\r\n            // check custom preview url\r\n            if (this.config.proxy && this.config.proxy.basePreviewUrl) {\r\n                return this.config.proxy.basePreviewUrl;\r\n            }\r\n\r\n            // use default preview url\r\n            return this.defaultPreviewDeliveryApiUrl;\r\n        }\r\n\r\n        // check custom base url\r\n        if (this.config.proxy && this.config.proxy.baseUrl) {\r\n            return this.config.proxy.baseUrl;\r\n        }\r\n        return this.defaultBaseDeliveryApiUrl;\r\n    }\r\n\r\n    /**\r\n    * Gets authorization header. This is used for 'preview' functionality\r\n    */\r\n    private getAuthorizationHeader(key?: string): IHeader {\r\n        if (!key) {\r\n            throw Error(`Cannot get authorization header because key is invalid`);\r\n        }\r\n        // authorization header required for preview mode\r\n        return {\r\n            header: 'authorization',\r\n            value: `bearer ${key}`\r\n        };\r\n    }\r\n\r\n    /**\r\n    * Header identifying SDK type & version for internal purposes of Kentico\r\n    */\r\n    private getSdkIdHeader(): IHeader {\r\n        return {\r\n            header: this.sdkVersionHeader,\r\n            value: `${this.sdkInfo.host};${this.sdkInfo.name};${this.sdkInfo.version}`\r\n        };\r\n    }\r\n\r\n    private mapDeliveryError(error: any): DeliveryError {\r\n        const axiosError = error as AxiosError;\r\n\r\n        if (!axiosError || !axiosError.isAxiosError) {\r\n            return error;\r\n        }\r\n\r\n        const deliveryErrorData = axiosError.response?.data as IDeliveryErrorRaw;\r\n\r\n        if (!deliveryErrorData || !deliveryErrorData.error_code) {\r\n            return error;\r\n        }\r\n\r\n        return new DeliveryError({\r\n            errorCode: deliveryErrorData.error_code,\r\n            message: deliveryErrorData.message,\r\n            specificCode: deliveryErrorData.specific_code,\r\n            requestId: deliveryErrorData.request_id,\r\n        });\r\n    }\r\n\r\n}\r\n","import { IBaseResponse, IHeader, IHttpService } from '@kentico/kontent-core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { flatMap, map } from 'rxjs/operators';\r\n\r\nimport { IDeliveryClientConfig } from '../config';\r\nimport { ElementContracts, ItemContracts, TaxonomyContracts, TypeContracts } from '../data-contracts';\r\nimport {\r\n    ContentItem,\r\n    ElementResponses,\r\n    IContentTypeQueryConfig,\r\n    IItemQueryConfig,\r\n    ITaxonomyQueryConfig,\r\n    ItemResponses,\r\n    TaxonomyResponses,\r\n    TypeResponses,\r\n} from '../models';\r\nimport { ISDKInfo } from '../models/common/common-models';\r\nimport { BaseDeliveryQueryService } from './base-delivery-query.service';\r\nimport { IMappingService } from './mapping.service';\r\n\r\nexport class QueryService extends BaseDeliveryQueryService {\r\n    private readonly ContinuationHeaderName: string = 'X-Continuation';\r\n\r\n    constructor(\r\n        config: IDeliveryClientConfig,\r\n        httpService: IHttpService,\r\n        sdkInfo: ISDKInfo,\r\n        mappingService: IMappingService\r\n    ) {\r\n        super(config, httpService, sdkInfo, mappingService);\r\n    }\r\n\r\n    /**\r\n     * Gets single item from given url\r\n     * @param url Url used to get single item\r\n     * @param queryConfig Query configuration\r\n     */\r\n    getSingleItem<TItem extends ContentItem>(\r\n        url: string,\r\n        queryConfig: IItemQueryConfig\r\n    ): Observable<ItemResponses.ViewContentItemResponse<TItem>> {\r\n        return this.getResponse<ItemContracts.IViewContentItemContract>(url, queryConfig).pipe(\r\n            map(response => {\r\n                return this.mappingService.viewContentItemResponse<TItem>(response, queryConfig);\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets single feed response. Might not contain all items in your project.\r\n     * @param url Url\r\n     * @param queryConfig Query configuration\r\n     */\r\n    getItemsFeed<TItem extends ContentItem>(url: string, queryConfig: IItemQueryConfig): Observable<ItemResponses.ItemsFeedResponse<TItem>> {\r\n        return this.getResponse<ItemContracts.IItemsFeedContract>(url).pipe(\r\n            map(response => {\r\n                return this.mappingService.itemsFeedResponse<TItem>(response, queryConfig);\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets all items from feed. This method may execute multiple HTTP requests.\r\n     * @param url Url\r\n     * @param queryConfig Query configuration\r\n     */\r\n    getItemsFeedAll<TItem extends ContentItem>(url: string,  queryConfig: IItemQueryConfig): Observable<ItemResponses.ItemsFeedAllResponse<TItem>> {\r\n        const responses: IBaseResponse<ItemContracts.IItemsFeedContract>[] = [];\r\n\r\n        return this.getAllItemsFeedResponses(url, {}, responses).pipe(\r\n            map(() => {\r\n                return this.mappingService.itemsFeedAllResponse(responses, queryConfig);\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets multiple items from given url\r\n     * @param url Url used to get multiple items\r\n     * @param queryConfig Query configuration\r\n     */\r\n    getMultipleItems<TItem extends ContentItem>(\r\n        url: string,\r\n        queryConfig: IItemQueryConfig\r\n    ): Observable<ItemResponses.ListContentItemsResponse<TItem>> {\r\n        return this.getResponse<ItemContracts.IListContentItemsContract>(url, queryConfig).pipe(\r\n            map(response => {\r\n                return this.mappingService.listContentItemsResponse<TItem>(response, queryConfig);\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets single content type from given url\r\n     * @param url Url used to get single type\r\n     * @param queryConfig Query configuration\r\n     */\r\n    getSingleType(\r\n        url: string,\r\n        queryConfig: IContentTypeQueryConfig\r\n    ): Observable<TypeResponses.ViewContentTypeResponse> {\r\n        return this.getResponse<TypeContracts.IViewContentTypeContract>(url, queryConfig).pipe(\r\n            map(response => {\r\n                return this.mappingService.viewContentTypeResponse(response);\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets multiple content types from given url\r\n     * @param url Url used to get multiple types\r\n     * @param queryConfig Query configuration\r\n     */\r\n    getMultipleTypes(\r\n        url: string,\r\n        queryConfig: IContentTypeQueryConfig\r\n    ): Observable<TypeResponses.ListContentTypesResponse> {\r\n        return this.getResponse<TypeContracts.IListContentTypeContract>(url, queryConfig).pipe(\r\n            map(response => {\r\n                return this.mappingService.listContentTypesResponse(response);\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets single taxonomy from given url\r\n     * @param url Url used to get single taxonomy\r\n     * @param queryConfig Query configuration\r\n     */\r\n    getTaxonomy(\r\n        url: string,\r\n        queryConfig: ITaxonomyQueryConfig\r\n    ): Observable<TaxonomyResponses.ViewTaxonomyGroupResponse> {\r\n        return this.getResponse<TaxonomyContracts.IViewTaxonomyGroupContract>(url, queryConfig).pipe(\r\n            map(response => {\r\n                return this.mappingService.viewTaxonomyGroupResponse(response);\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets multiple taxonomies from given url\r\n     * @param url Url used to get multiple taxonomies\r\n     * @param queryConfig Query configuration\r\n     */\r\n    getTaxonomies(\r\n        url: string,\r\n        queryConfig: ITaxonomyQueryConfig\r\n    ): Observable<TaxonomyResponses.ListTaxonomyGroupsResponse> {\r\n        return this.getResponse<TaxonomyContracts.IListTaxonomyGroupsContract>(url, queryConfig).pipe(\r\n            map(response => {\r\n                return this.mappingService.listTaxonomyGroupsResponse(response);\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets single content type element from given url\r\n     * @param url Url used to get single content type element\r\n     * @param queryConfig Query configuration\r\n     */\r\n    getElement(\r\n        url: string,\r\n        queryConfig: ITaxonomyQueryConfig\r\n    ): Observable<ElementResponses.ViewContentTypeElementResponse> {\r\n        return this.getResponse<ElementContracts.IViewContentTypeElementContract>(url, queryConfig).pipe(\r\n            map(response => {\r\n                return this.mappingService.viewContentTypeElementResponse(response);\r\n            })\r\n        );\r\n    }\r\n\r\n    private getAllItemsFeedResponses(\r\n        url: string,\r\n        queryConfig: IItemQueryConfig,\r\n        responses: IBaseResponse<ItemContracts.IItemsFeedContract>[],\r\n        continuationToken?: string\r\n    ): Observable<void> {\r\n        const headers: IHeader[] = [];\r\n\r\n        if (continuationToken) {\r\n            headers.push({\r\n                header: this.ContinuationHeaderName,\r\n                value: continuationToken\r\n            });\r\n        }\r\n\r\n        return this.getResponse<ItemContracts.IItemsFeedContract>(url, queryConfig, {\r\n            headers: headers\r\n        }).pipe(\r\n            flatMap(response => {\r\n                responses.push(response);\r\n\r\n                const continuationHeader = response.headers.find(\r\n                    m => m.header.toLowerCase() === this.ContinuationHeaderName.toLowerCase()\r\n                );\r\n                if (continuationHeader) {\r\n                    return this.getAllItemsFeedResponses(url, queryConfig, responses, continuationHeader.value);\r\n                }\r\n\r\n                return of(undefined);\r\n            })\r\n        );\r\n    }\r\n}\r\n","export * from './delivery-query.service';\r\nexport * from './mapping.service';\r\n","import { IBaseResponse } from '@kentico/kontent-core';\r\n\r\nimport { IDeliveryClientConfig } from '../config';\r\nimport { ElementContracts, ItemContracts, TaxonomyContracts, TypeContracts } from '../data-contracts';\r\nimport { GenericElementMapper, ItemMapper, TaxonomyMapper, TypeMapper } from '../mappers';\r\nimport {\r\n    ElementResponses,\r\n    IContentItem,\r\n    IItemQueryConfig,\r\n    ItemResponses,\r\n    Pagination,\r\n    TaxonomyResponses,\r\n    TypeResponses,\r\n} from '../models';\r\nimport { IRichTextHtmlParser } from '../parser';\r\n\r\nexport interface IMappingService {\r\n    listContentTypesResponse(\r\n        response: IBaseResponse<TypeContracts.IListContentTypeContract>\r\n    ): TypeResponses.ListContentTypesResponse;\r\n\r\n    itemsFeedResponse<TItem extends IContentItem>(\r\n        response: IBaseResponse<ItemContracts.IItemsFeedContract>,\r\n        queryConfig: IItemQueryConfig\r\n    ): ItemResponses.ItemsFeedResponse<TItem>;\r\n\r\n    itemsFeedAllResponse<TItem extends IContentItem>(\r\n        responses: IBaseResponse<ItemContracts.IItemsFeedContract>[],\r\n        queryConfig: IItemQueryConfig\r\n    ): ItemResponses.ItemsFeedAllResponse<TItem>;\r\n\r\n    viewContentTypeResponse(\r\n        response: IBaseResponse<TypeContracts.IViewContentTypeContract>\r\n    ): TypeResponses.ViewContentTypeResponse;\r\n\r\n    viewContentItemResponse<TItem extends IContentItem = IContentItem>(\r\n        response: IBaseResponse<ItemContracts.IViewContentItemContract>,\r\n        queryConfig: IItemQueryConfig\r\n    ): ItemResponses.ViewContentItemResponse<TItem>;\r\n\r\n    listContentItemsResponse<TItem extends IContentItem = IContentItem>(\r\n        response: IBaseResponse<ItemContracts.IListContentItemsContract>,\r\n        queryConfig: IItemQueryConfig\r\n    ): ItemResponses.ListContentItemsResponse<TItem>;\r\n\r\n    viewTaxonomyGroupResponse(\r\n        response: IBaseResponse<TaxonomyContracts.IViewTaxonomyGroupContract>\r\n    ): TaxonomyResponses.ViewTaxonomyGroupResponse;\r\n\r\n    listTaxonomyGroupsResponse(\r\n        response: IBaseResponse<TaxonomyContracts.IListTaxonomyGroupsContract>\r\n    ): TaxonomyResponses.ListTaxonomyGroupsResponse;\r\n\r\n    viewContentTypeElementResponse(\r\n        response: IBaseResponse<ElementContracts.IViewContentTypeElementContract>\r\n    ): ElementResponses.ViewContentTypeElementResponse;\r\n}\r\n\r\nexport class MappingService implements IMappingService {\r\n    private readonly typeMapper: TypeMapper;\r\n    private readonly itemMapper: ItemMapper;\r\n    private readonly taxonomyMapper: TaxonomyMapper;\r\n    private readonly genericElementMapper: GenericElementMapper;\r\n\r\n    private readonly isDeveloperMode: boolean;\r\n\r\n    constructor(readonly config: IDeliveryClientConfig, readonly richTextHtmlParser: IRichTextHtmlParser) {\r\n        this.typeMapper = new TypeMapper();\r\n        this.itemMapper = new ItemMapper(config, richTextHtmlParser);\r\n        this.taxonomyMapper = new TaxonomyMapper();\r\n        this.genericElementMapper = new GenericElementMapper();\r\n        this.isDeveloperMode = config.isDeveloperMode === true ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Gets response for getting a single type\r\n     * @param response Response data\r\n     */\r\n    listContentTypesResponse(\r\n        response: IBaseResponse<TypeContracts.IListContentTypeContract>\r\n    ): TypeResponses.ListContentTypesResponse {\r\n        const types = this.typeMapper.mapMultipleTypes(response.data);\r\n\r\n        const pagination: Pagination = new Pagination({\r\n            skip: response.data.pagination.skip,\r\n            count: response.data.pagination.count,\r\n            limit: response.data.pagination.limit,\r\n            nextPage: response.data.pagination.next_page\r\n        });\r\n\r\n        return new TypeResponses.ListContentTypesResponse(types, pagination, response, this.isDeveloperMode);\r\n    }\r\n\r\n    /**\r\n     * Gets resposne for getting multiple types\r\n     * @param response Response data\r\n     * @param options Options\r\n     */\r\n    viewContentTypeResponse(\r\n        response: IBaseResponse<TypeContracts.IViewContentTypeContract>\r\n    ): TypeResponses.ViewContentTypeResponse {\r\n        const type = this.typeMapper.mapSingleType(response.data);\r\n\r\n        return new TypeResponses.ViewContentTypeResponse(type, response, this.isDeveloperMode);\r\n    }\r\n\r\n    itemsFeedResponse<TItem extends IContentItem>(\r\n        response: IBaseResponse<ItemContracts.IItemsFeedContract>,\r\n        queryConfig: IItemQueryConfig\r\n    ): ItemResponses.ItemsFeedResponse<TItem> {\r\n        const itemsResult = this.itemMapper.mapItems<TItem>({\r\n            linkedItems: Object.values(response.data.modular_content),\r\n            mainItems: response.data.items,\r\n            queryConfig: queryConfig\r\n        });\r\n\r\n        return new ItemResponses.ItemsFeedResponse(\r\n            itemsResult.items,\r\n            itemsResult.linkedItems,\r\n            response,\r\n            this.isDeveloperMode\r\n        );\r\n    }\r\n\r\n    itemsFeedAllResponse<TItem extends IContentItem>(\r\n        responses: IBaseResponse<ItemContracts.IItemsFeedContract>[],\r\n        queryConfig: IItemQueryConfig\r\n    ): ItemResponses.ItemsFeedAllResponse<TItem> {\r\n        // join data from all responses before resolving items\r\n        const allMainItems: ItemContracts.IContentItemContract[] = [];\r\n        let allLinkedItems: ItemContracts.IModularContentContract = {};\r\n\r\n        for (const response of responses) {\r\n            allMainItems.push(...response.data.items);\r\n            allLinkedItems = { ...allLinkedItems, ...response.data.modular_content };\r\n        }\r\n\r\n        const itemsResult = this.itemMapper.mapItems<TItem>({\r\n            linkedItems: Object.values(allLinkedItems),\r\n            mainItems: allMainItems,\r\n            queryConfig: queryConfig\r\n        });\r\n\r\n        return new ItemResponses.ItemsFeedAllResponse(\r\n            itemsResult.items,\r\n            itemsResult.linkedItems,\r\n            responses,\r\n            this.isDeveloperMode\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets response for getting single item\r\n     * @param response Response data\r\n     * @param queryConfig Query configuration\r\n     */\r\n    viewContentItemResponse<TItem extends IContentItem = IContentItem>(\r\n        response: IBaseResponse<ItemContracts.IViewContentItemContract>,\r\n        queryConfig: IItemQueryConfig\r\n    ): ItemResponses.ViewContentItemResponse<TItem> {\r\n        const itemResult = this.itemMapper.mapSingleItemFromResponse<TItem>(response.data, queryConfig);\r\n\r\n        return new ItemResponses.ViewContentItemResponse<TItem>(\r\n            itemResult.item,\r\n            itemResult.linkedItems,\r\n            response,\r\n            this.isDeveloperMode\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets response for getting multiple items\r\n     * @param response Response data\r\n     * @param queryConfig Query configuration\r\n     */\r\n    listContentItemsResponse<TItem extends IContentItem = IContentItem>(\r\n        response: IBaseResponse<ItemContracts.IListContentItemsContract>,\r\n        queryConfig: IItemQueryConfig\r\n    ): ItemResponses.ListContentItemsResponse<TItem> {\r\n        const itemsResult = this.itemMapper.mapMultipleItemsFromResponse<TItem>(response.data, queryConfig);\r\n        const pagination: Pagination = new Pagination({\r\n            skip: response.data.pagination.skip,\r\n            count: response.data.pagination.count,\r\n            limit: response.data.pagination.limit,\r\n            nextPage: response.data.pagination.next_page,\r\n            totalCount: response.data.pagination.total_count\r\n        });\r\n\r\n        return new ItemResponses.ListContentItemsResponse<TItem>(\r\n            itemsResult.items,\r\n            pagination,\r\n            itemsResult.linkedItems,\r\n            response,\r\n            this.isDeveloperMode\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets response for getting single taxonomy item\r\n     * @param response Response data\r\n     */\r\n    viewTaxonomyGroupResponse(\r\n        response: IBaseResponse<TaxonomyContracts.IViewTaxonomyGroupContract>\r\n    ): TaxonomyResponses.ViewTaxonomyGroupResponse {\r\n        const taxonomy = this.taxonomyMapper.mapTaxonomy(response.data.system, response.data.terms);\r\n\r\n        return new TaxonomyResponses.ViewTaxonomyGroupResponse(taxonomy, response, this.isDeveloperMode);\r\n    }\r\n\r\n    /**\r\n     * Gets response for getting multiples taxonomies\r\n     * @param response Response data\r\n     */\r\n    listTaxonomyGroupsResponse(\r\n        response: IBaseResponse<TaxonomyContracts.IListTaxonomyGroupsContract>\r\n    ): TaxonomyResponses.ListTaxonomyGroupsResponse {\r\n        const taxonomies = this.taxonomyMapper.mapTaxonomies(response.data.taxonomies);\r\n\r\n        const pagination: Pagination = new Pagination({\r\n            skip: response.data.pagination.skip,\r\n            count: response.data.pagination.count,\r\n            limit: response.data.pagination.limit,\r\n            nextPage: response.data.pagination.next_page\r\n        });\r\n\r\n        return new TaxonomyResponses.ListTaxonomyGroupsResponse(taxonomies, pagination, response, this.isDeveloperMode);\r\n    }\r\n\r\n    /**\r\n     * Gets response for getting single content type element\r\n     * @param response Response data\r\n     */\r\n    viewContentTypeElementResponse(\r\n        response: IBaseResponse<ElementContracts.IViewContentTypeElementContract>\r\n    ): ElementResponses.ViewContentTypeElementResponse {\r\n        const element = this.genericElementMapper.mapElement(response.data);\r\n\r\n        return new ElementResponses.ViewContentTypeElementResponse(element, response, this.isDeveloperMode);\r\n    }\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__7899__;","module.exports = __WEBPACK_EXTERNAL_MODULE__460__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7791__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(8713);\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();"],"sourceRoot":""}